{
	"info": {
		"_postman_id": "2750c4d0-8f0a-44fd-939d-bf678f8d6dcc",
		"name": "DfE Data API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Meta",
			"item": [
				{
					"name": "Themes",
					"item": [
						{
							"name": "Themes Meta",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "89d7b4dc-516f-41d4-b41c-7a7949158d29",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "604ca0a0-cab2-47d7-98e8-23b4a4ed1cd4",
										"exec": [
											"var respJson;",
											"",
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"    respJson = pm.response.json();",
											"});",
											"",
											"pm.test(\"Expect correct number of themes\", function () {",
											"    pm.expect(respJson.length).to.be.above(0);",
											"});",
											"",
											"pm.test(\"Pupils and school theme should contain more than 2 topics\", function () {",
											"    for(var i = 0; i < pm.response.json().length; i++) {",
											"        if(respJson[i].title === \"Pupils and schools\") {",
											"            pm.expect(respJson[i].topics.length).to.be.above(2);",
											"            pm.expect(pm.response.to.have.jsonBody(`[${i}].id`));",
											"            pm.expect(pm.response.to.have.jsonBody(`[${i}].slug`));",
											"        }",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{data_api_url}}/meta/themes",
									"host": [
										"{{data_api_url}}"
									],
									"path": [
										"meta",
										"themes"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Subject",
					"item": [
						{
							"name": "Pupil absence in schools in England",
							"item": [
								{
									"name": "Subject Meta - Absence by characteristic",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a08a4756-b6cc-4e15-94a0-a350c85744da",
												"exec": [
													"pm.globals.set(\"FILT_Char__Total\", \"183f94c3-b5d7-4868-892d-c948e256744d\");",
													"pm.globals.set(\"FILT_SchoolType__Total\", \"cb9b57e8-9965-4cb6-b61a-acc6d34b32be\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "21626438-0620-429d-8806-2b2866084253",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"totalValues should be correct\", function () {",
													"    pm.expect(respJson.filters.Characteristic.totalValue).to.equal(pm.globals.get('FILT_Char__Total'));",
													"    pm.expect(respJson.filters.SchoolType.totalValue).to.equal(pm.globals.get('FILT_SchoolType__Total'));",
													"});",
													"",
													"pm.test(\"Should be correct number of characteristics\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.Characteristic.options).length).to.equal(10);",
													"});",
													"",
													"pm.test(\"Each characteristic should have correct number\", function () {",
													"    pm.expect(respJson.filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(respJson.filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(19);",
													"    pm.expect(respJson.filters.Characteristic.options.NCYear.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.SENProvision.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FirstLanguage.options.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(respJson.timePeriod.options.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(respJson.locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(respJson.indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/803fbf56-600f-490f-8409-6413a891720d",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"803fbf56-600f-490f-8409-6413a891720d"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence by geographic level",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7a4a622d-6e70-43aa-b2ea-d6c0cb5348d4",
												"exec": [
													"pm.globals.set(\"FILT_SchoolType__Total\", \"0b0daf53-3dd5-4b9b-913e-f4518f4afb96\");"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "3c5aa378-5b7c-465c-a8ba-b271acd250cc",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Filters totalValues should be correct\", function () {",
													"    pm.expect(respJson.filters.SchoolType.totalValue).to.equal(pm.globals.get('FILT_SchoolType__Total'));",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(respJson.timePeriod.options.length).to.equal(11); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.region.options.length).to.equal(10);",
													"    ",
													"    // EES-635",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(156);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(11);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(respJson.indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/568576e5-d386-450e-a8db-307b7061d0d8",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"568576e5-d386-450e-a8db-307b7061d0d8"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence by term",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "26eff756-f807-4ba0-aff8-653a7e9f88fd",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "fd56d8b9-1565-4b24-9c57-b4588177cf93",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(3);",
													"});",
													"",
													"// DFE-1356",
													"// pm.test(\"Number of time periods options should be correct\", function() {",
													"//     pm.expect(respJson.timePeriod.options.length).to.equal(15); ",
													"// });",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.region.options.length).to.equal(10);",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(152);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(7);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence for four year olds",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "51215879-27f7-4990-8a5b-81f4d8397bce",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "09afc3a6-1a32-4274-a37d-98dc5c0d8f8c",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/353db5ea-befd-488b-ad16-2ce7963c9bc9",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"353db5ea-befd-488b-ad16-2ce7963c9bc9"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence in PRUs",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "3da81aca-6611-4cf2-baea-29804ac8dcb4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "df18a0ef-ece1-4e42-be26-68b42edc8954",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"))",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"))",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"))",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/95c7f584-907e-4756-bbf0-4905ceae57df",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"95c7f584-907e-4756-bbf0-4905ceae57df"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence number missing at least one session by reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cd39bb1a-2a56-459e-a9cc-256ec2785f51",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "696c21da-1e45-4892-a7f7-f798b4c8dd10",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/faf2152e-0a6c-4e97-af02-e9a89d48c47a",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"faf2152e-0a6c-4e97-af02-e9a89d48c47a"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Absence rate percent bands",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "052f2531-c0e8-4c3b-acfb-f9c81d638fd6",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "18455b75-3f8d-47f3-a52c-958969a3ce3b",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.AbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.EnrolmentsByAbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/666cd878-87bb-4f77-9a3f-f5c75078e112",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"666cd878-87bb-4f77-9a3f-f5c75078e112"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Invalid Subject",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "68a7015a-2028-46b3-829c-7f9599c5962d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c2fdb77e-0175-4388-a61c-8c2334fab325",
												"exec": [
													"pm.test(\"Status code is 404\", function () { ",
													"    pm.response.to.have.status(404); ",
													"    var respJson = pm.response.json();",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/00000000-0000-0000-0000-000000000000",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"00000000-0000-0000-0000-000000000000"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 803fbf56-600f-490f-8409-6413a891720d, Start/End date 2016",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "7198adc7-bd0c-4919-bc2e-3c22798f73be",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "8c566ef3-5fa6-402d-a403-90a65afeee64",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(13);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(4);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2016);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(pm.response.json().locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"803fbf56-600f-490f-8409-6413a891720d\",\n\ttimePeriod: {\n\t\tstartYear: 2016,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2016,\n\t\tendCode: \"AY\",\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 803fbf56-600f-490f-8409-6413a891720d, Start/End date 2016, GeographicLevel Country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "86e02a71-72e2-40a2-ba9c-8282fd957c8f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "359ae50a-6856-4d0a-a7f5-7cffc6d630f8",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(13);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(4);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2016);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"Region\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthority\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"803fbf56-600f-490f-8409-6413a891720d\",\n\ttimePeriod: {\n\t\tstartYear: 2016,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2016,\n\t\tendCode: \"AY\",\n\t},\n\tlocations: {\n\t\tgeographicLevel: \"Country\"\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 803fbf56-600f-490f-8409-6413a891720d, Start/End date 2016, GeographicLevel Local Authority",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4008d3cc-ec0a-458e-8106-1f057174512f",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4d3ddd95-db31-4f07-921e-82f522429db1",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(13);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(4);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2016);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"803fbf56-600f-490f-8409-6413a891720d\",\n\ttimePeriod: {\n\t\tstartYear: 2016,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2016,\n\t\tendCode: \"AY\",\n\t},\n\tlocations: {\n\t\tgeographicLevel: \"LocalAuthority\"\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 568576e5-d386-450e-a8db-307b7061d0d8, Start/End date 2014, LA City of London",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "4445c78d-0d83-47d0-93cd-0f18eb152343",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "b9835a01-2c62-4c31-8f0d-7a376a07076b",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Characteristics property shouldn't exist\", function () {",
													"    pm.expect(pm.response.json()).to.not.have.property(\"Characteristic\");",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(pm.response.json().filters.SchoolType.options.Default.options.length).to.equal(2);",
													"});",
													"",
													"pm.test(\"Time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().timePeriod.options[0].year).to.equal(2014);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(11);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"568576e5-d386-450e-a8db-307b7061d0d8\",\n\ttimePeriod: {\n\t\tstartYear: 2014,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2014,\n\t\tendCode: \"AY\",\n\t},\n\tlocations: {\n\t\tlocalAuthority: [\"E09000001\"]\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 666cd878-87bb-4f77-9a3f-f5c75078e112, Start/End date 2012-2014",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "20c8864d-91a6-4323-b241-68d6ce6be7dc",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "840f4eb5-31bd-43ef-b539-a792882d1f4b",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.AbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.EnrolmentsByAbsencePercentageBand\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of AbsencePercentageBand options should be correct\", function () { ",
													"    pm.expect(pm.response.json().filters.AbsencePercentageBand.options.Default.options.length).to.equal(102);",
													"});",
													"",
													"pm.test(\"Time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(3);",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"Region\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthority\");",
													"    pm.expect(pm.response.json().locations).to.not.have.property(\"LocalAuthorityDistrict\");",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(Object.keys(pm.response.json().indicators).length).to.equal(1);",
													"    pm.expect(pm.response.json().indicators.EnrolmentsByAbsencePercentageBand.options.length).to.equal(6);",
													"    ",
													"    pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceFields\");",
													"    pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceByReason\");",
													"    pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceForPersistentAbsentees\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"666cd878-87bb-4f77-9a3f-f5c75078e112\",\n\ttimePeriod: {\n\t\tstartYear: 2012,\n\t\tstartCode: \"AY\",\n\t\tendYear: 2014,\n\t\tendCode: \"AY\",\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "4c1e2346-4f22-43c7-87cf-46e772b32059",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "ddf1d4aa-a231-4c4a-a115-81fb1a6c0a4e",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Permanent and fixed-period exclusions in England",
							"item": [
								{
									"name": "Subject Meta - Exclusions by characteristic",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "cbcc99a2-825a-4c14-940e-d62eb6751c64",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "de4c0a35-7d0f-4f7a-89bc-826f72bf8c0e",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(7); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/92039f68-a894-46a9-bd44-4482728698b0",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"92039f68-a894-46a9-bd44-4482728698b0"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Exclusions by geographic level",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "98084314-f9de-4ea8-9395-3567ed45efd7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "519d14a4-2779-43e4-99ca-787901f18fc8",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(8); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/3c0fbe56-0a4b-4caa-82f2-ab696cd96090",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"3c0fbe56-0a4b-4caa-82f2-ab696cd96090"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Exclusions by reason",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "567faa79-0b6f-4cc5-a901-b47dc4df18eb",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "5ff21ab8-3904-4849-9e10-d37217142843",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.PermanentExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.FixedPeriodExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.PermanentExclusions.options.length).to.equal(12);",
													"   pm.expect(pm.response.json().indicators.FixedPeriodExclusions.options.length).to.equal(12);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/8fe88bbe-dce7-4698-a55f-8e1e3e41c5a7",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"8fe88bbe-dce7-4698-a55f-8e1e3e41c5a7"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Duration of fixed exclusions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "378eaba9-030d-4f07-b950-b320987b565e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "4464e1f8-99b8-4328-a30c-a39c92df8cd5",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.DurationOfFixedPeriodExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(1); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/926e33e4-b3ce-41aa-9ed2-e04106068ffb",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"926e33e4-b3ce-41aa-9ed2-e04106068ffb"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Number of fixed exclusions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "b0eb44a1-8367-4647-bc4e-2c9828809572",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "7a386210-429c-4b8c-bff3-3457e12f4824",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(1); ",
													"   pm.expect(pm.response.json().indicators.Default.options[0].label).to.equal(\"Number of pupil enrolments\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/048a6276-1df1-487a-a501-fbd5e64d4b79",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"048a6276-1df1-487a-a501-fbd5e64d4b79"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Total days missed due to fixed period exclusions",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "d6936a30-55b9-4d2c-bdeb-0070a227d8c0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a872073e-b317-46a6-b07e-ff44b619bc30",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.TotalNumberOfDaysMissedDueToFixedPeriodExclusions\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.Default\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.not.have.jsonBody(\"locations.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Should have correct number of indicators\", function () {",
													"   pm.expect(pm.response.json().indicators.Default.options.length).to.equal(1);",
													"   pm.expect(pm.response.json().indicators.Default.options[0].label).to.equal(\"Number of pupil enrolments\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/28feb263-4bf9-4dd7-9440-48e2685f6954",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"28feb263-4bf9-4dd7-9440-48e2685f6954"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Secondary and primary schools applications and offers",
							"item": [
								{
									"name": "Subject Meta - Applications and offers by school phase",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "8f2989a0-415d-40ee-9c35-0ca9e211e69c",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "a4542f07-3561-4e60-ac6f-8aa6513e13cf",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"if(pm.environment.get('env') === 'prod') {",
													"    pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
													"} else {",
													"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"    ",
													"    pm.test(\"Fields are present\", function () {",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters.YearOfAdmission\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Admissions\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Applications\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.PreferencesBreakdowns\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"    });",
													"    ",
													"    pm.test(\"Filter YearOfAdmission should be correct\", function () {",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Primary.options.length).to.equal(2);",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Secondary.options.length).to.equal(3);",
													"        pm.expect(respJson.filters.YearOfAdmission.totalValue).to.equal(\"\");",
													"    });",
													"    ",
													"    pm.test(\"Indicator Admissions should be correct\", function () {",
													"        pm.expect(respJson.indicators.Admissions.options.length).to.equal(1);",
													"        pm.expect(respJson.indicators.Admissions.options[0].label).to.equal(\"Number of admissions\");",
													"    });",
													"    ",
													"    pm.test(\"Indicator Applications should be correct\", function () {",
													"        pm.expect(respJson.indicators.Applications.options.length).to.equal(3);      ",
													"    });",
													"    ",
													"    pm.test(\"Indicator PreferencesBreakdowns should be correct\", function () {",
													"        pm.expect(respJson.indicators.PreferencesBreakdowns.options.length).to.equal(11);    ",
													"    });",
													"    ",
													"    pm.test(\"Location Country should be correct\", function () {",
													"        pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"        pm.expect(respJson.locations.country.options[0].label).to.equal(\"England\");",
													"    });",
													"    ",
													"    pm.test(\"Location Region should be correct number\", function () {",
													"        pm.expect(respJson.locations.region.options.length).to.equal(10);",
													"    });",
													"    ",
													"    pm.test(\"Location LocalAuthority should be correct number\", function () {",
													"        /*  csvcut -k la_name school_applications_and_offers.csv | sed 1d | sort | uniq | wc -l ",
													"            returns 152 then -1 for blank line ",
													"        */",
													"        pm.expect(respJson.locations.localAuthority.options.length).to.equal(151);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{data_api_url}}/meta/subject/fa0d7f1d-d181-43fb-955b-fc327da86f2c",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject",
												"fa0d7f1d-d181-43fb-955b-fc327da86f2c"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId fa0d7f1d-d181-43fb-955b-fc327da86f2c, Regions South East, South West",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "9d3ddb0e-18a9-4e71-8d91-c45003cf2ef0",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "522b96a0-5923-458b-a8cd-911d9cf5c5d3",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"if(pm.environment.get('env') === 'prod') {",
													"    pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
													"} else {",
													"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"    ",
													"    pm.test(\"Fields are present\", function () {",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters.YearOfAdmission\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Admissions\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Applications\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.PreferencesBreakdowns\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.region\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"    });",
													"    ",
													"    pm.test(\"Number of YearOfAdmission options should be correct\", function () { ",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Primary.options.length).to.equal(1);",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Primary.options[0].label).to.equal(\"All primary\");",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Secondary.options.length).to.equal(1);",
													"        pm.expect(respJson.filters.YearOfAdmission.options.Secondary.options[0].label).to.equal(\"All secondary\");",
													"    });",
													"    ",
													"    pm.test(\"Time periods options should be correct\", function() {",
													"        pm.expect(respJson.timePeriod.options.length).to.equal(5);",
													"    });",
													"    ",
													"    pm.test(\"Number of location options should be correct\", function() {",
													"        pm.expect(respJson.locations.region.options.length).to.equal(2);",
													"    });",
													"    ",
													"    pm.test(\"Expect correct number of indicator categories\", function () {",
													"        pm.expect(Object.keys(respJson.indicators).length).to.equal(3);",
													"        pm.expect(respJson.indicators).to.not.have.property(\"AbsenceFields\");",
													"        pm.expect(respJson.indicators).to.not.have.property(\"AbsenceByReason\");",
													"        pm.expect(respJson.indicators).to.not.have.property(\"AbsenceForPersistentAbsentees\");",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Admissions indicators to be correct\", function () {",
													"        pm.expect(respJson.indicators.Admissions.options.length).to.equal(1);",
													"        pm.expect(respJson.indicators.Admissions.options[0].label).to.equal(\"Number of admissions\");    ",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Applications indicators to be correct\", function () {",
													"        pm.expect(respJson.indicators.Applications.options.length).to.equal(3);",
													"    });",
													"    ",
													"    pm.test(\"Expect number of PreferencesBreakdowns indicators to be correct\", function () {",
													"        pm.expect(respJson.indicators.PreferencesBreakdowns.options.length).to.equal(11);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tSubjectId: \"fa0d7f1d-d181-43fb-955b-fc327da86f2c\",\n\tlocations: {\n\t\tRegion: [\n\t\t\t\"E12000008\",\n\t\t\t\"E12000009\"\n\t\t]\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId fa0d7f1d-d181-43fb-955b-fc327da86f2c, Country",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "c56c87f0-2b1e-41eb-915b-04fd515999a9",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "66c09c5d-c52f-4bca-915c-c74f3e3670f3",
												"exec": [
													"if(pm.environment.get('env') === 'prod') {",
													"    pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
													"} else {",
													"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"    ",
													"    pm.test(\"Fields are present\", function () {",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"filters.YearOfAdmission\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Admissions\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.Applications\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"indicators.PreferencesBreakdowns\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"        pm.expect(pm.response.to.not.have.jsonBody(\"locations.region\"));",
													"        pm.expect(pm.response.to.not.have.jsonBody(\"locations.localAuthority\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"        pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"    });",
													"    ",
													"    pm.test(\"Number of YearOfAdmission options should be correct\", function () { ",
													"        pm.expect(pm.response.json().filters.YearOfAdmission.options.Primary.options.length).to.equal(1);",
													"        pm.expect(pm.response.json().filters.YearOfAdmission.options.Secondary.options.length).to.equal(1);",
													"    });",
													"    ",
													"    pm.test(\"Time periods options should be correct\", function() {",
													"        pm.expect(pm.response.json().timePeriod.options.length).to.equal(5);",
													"    });",
													"    ",
													"    pm.test(\"Number of location options should be correct\", function() {",
													"        pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    });",
													"    ",
													"    pm.test(\"Expect correct number of indicator categories\", function () {",
													"        pm.expect(Object.keys(pm.response.json().indicators).length).to.equal(3);",
													"        pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceFields\");",
													"        pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceByReason\");",
													"        pm.expect(pm.response.json().indicators).to.not.have.property(\"AbsenceForPersistentAbsentees\");",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Admissions indicators to be correct\", function () {",
													"        pm.expect(pm.response.json().indicators.Admissions.options.length).to.equal(1);",
													"        pm.expect(pm.response.json().indicators.Admissions.options[0].label).to.equal(\"Number of admissions\");    ",
													"    });",
													"    ",
													"    pm.test(\"Expect number of Applications indicators to be correct\", function () {",
													"        pm.expect(pm.response.json().indicators.Applications.options.length).to.equal(3);",
													"    });",
													"    ",
													"    pm.test(\"Expect number of PreferencesBreakdowns indicators to be correct\", function () {",
													"        pm.expect(pm.response.json().indicators.PreferencesBreakdowns.options.length).to.equal(11);",
													"    });",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tSubjectId: \"fa0d7f1d-d181-43fb-955b-fc327da86f2c\",\n\tlocations: {\n\t\tGeographicLevel: \"Country\"\n\t}\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/meta/subject",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"meta",
												"subject"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "d8a02b90-4775-4838-b63c-5ab2aacc6751",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "28dac842-580d-44ae-8b71-3f19b67e31da",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Publication",
					"item": [
						{
							"name": "Publication Meta - Pupil absence in schools in England",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "53ce7bb9-76d6-453f-88a4-e438102e87b5",
										"exec": [
											"pm.variables.set('publication_id', 'cbbd299f-8297-44bc-92ac-558bcf51f8ad')"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "6111ac0b-575a-40b9-b6d9-644cd22ec5a3",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"publicationId\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjects\"));",
											"});",
											"",
											"pm.test(\"Publication id matches the publication requested\", function () { pm.expect(pm.response.json().publicationId).to.equal(pm.variables.get(\"publication_id\")); });",
											"",
											"pm.test(\"Number of subjects should be correct\", function () {",
											"    pm.expect(pm.response.json().subjects.length).to.be.above(6);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{data_api_url}}/meta/publication/{{publication_id}}",
									"host": [
										"{{data_api_url}}"
									],
									"path": [
										"meta",
										"publication",
										"{{publication_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Publication Meta - Secondary and primary schools applications and offers",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "6c65f64a-33ec-4876-b9ec-bc595f1b9b4d",
										"exec": [
											"pm.variables.set('publication_id', '66c8e9db-8bf2-4b0b-b094-cfab25c20b05');"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "af21a4b9-440d-4db4-b3f1-cebda17fef27",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"if(pm.environment.get('env') === 'prod') {",
											"    // EES-1569",
											"    //pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });",
											"} else {",
											"    pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"    ",
											"    pm.test(\"Fields are present\", function () {",
											"        pm.expect(pm.response.to.have.jsonBody(\"publicationId\"));",
											"        pm.expect(pm.response.to.have.jsonBody(\"subjects\"));",
											"    });",
											"    ",
											"    pm.test(\"Publication id matches the publication requested\", function () { pm.expect(respJson.publicationId).to.equal(pm.variables.get(\"publication_id\")); });",
											"    ",
											"    pm.test(\"Subjects and subject label should be correct\", function () {",
											"        pm.expect(respJson.subjects.length).to.equal(1);",
											"        pm.expect(respJson.subjects[0].label).to.equal(\"Applications and offers by school phase\");",
											"    });",
											"}"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{data_api_url}}/meta/publication/{{publication_id}}",
									"host": [
										"{{data_api_url}}"
									],
									"path": [
										"meta",
										"publication",
										"{{publication_id}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "9675fbbb-f5f3-4497-94bb-2b960a748f06",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "f69d8799-6e3b-4db8-9810-8d98fe92d1d2",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "119bfe30-ac3b-42ca-a6f4-cbb0b744dfbb",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "6ee2ec8c-f79f-40c2-8d3c-df6c05677885",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Tablebuilder",
			"item": [
				{
					"name": "Pupil absence in schools in England",
					"item": [
						{
							"name": "By characteristic",
							"item": [
								{
									"name": "Tablebuilder - Absence by characteristic - Country - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "16cdb87d-8b9c-4c25-9d3d-41bf45de19cf",
												"exec": [
													"respJson = pm.response.json()",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(2); ",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(16); ",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\"\n    },\n    \"timePeriod\": {\n        \"startYear\": 2014,\n        \"startCode\": \"AY\",\n        \"endYear\": 2015,\n        \"endCode\": \"AY\",\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \"{{FILT_Char__GenderFemale}}\"\n    ],\n    \"indicators\": [\n\t    \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - Country - * - Male, Female AND Primary, Secondary",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "367f5393-2e51-497f-bf0f-9ce3f37772e2",
												"exec": [
													"respJson = pm.response.json()",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(4); ",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\"\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \n        \"{{FILT_Char__GenderFemale}}\", \n        \"{{FILT_SchoolType__StateFundedPrimary}}\", \n        \"{{FILT_SchoolType__StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - England - Male, Female",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8697d533-37c2-4bf4-93d0-b3344a25c0b5",
												"exec": [
													"respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Validate footnotes\", function () {",
													"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(10);",
													"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
													"        switch(respJson.subjectMeta.footnotes[i].id) {",
													"            case \"fbb6262f-213a-453a-98ca-b832d6ae1c16\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded primary schools include all primary academies, including free schools.\");",
													"                break;",
													"            case \"e9076bab-6ff7-4c92-8972-2fb4affbe977\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded secondary schools include city technology colleges and all secondary academies, including all-through academies and free schools.\");",
													"                break;",
													"            case \"128c6153-4937-40da-a99f-e137fc8c41e5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Special schools include maintained special schools, non-maintained special schools and special academies.  Excludes general hospital schools, independent special schools and independent schools approved for SEN pupils.\");",
													"                break;",
													"            case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
													"                break;",
													"            case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
													"                break;",
													"            case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
													"                break;",
													"            case \"78c78049-22b3-4ec8-bc2a-7f47a6f7c74c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Pupil enrolments missing 10 percent or more of their own possible sessions (due to authorised or unauthorised absence) are classified as persistent absentees.\");",
													"                break;",
													"            case \"7b18666a-ff4a-43a9-9639-8f324374db0c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The definition of persistent absence changed from the 2015/16 academic year - The information presented for years prior to 2015/16 has been produced using the same methodology in order to allow users to make comparisons on a consistent basis over time.\");",
													"                break;",
													"            case \"507b05b0-4015-4330-9901-20b47c5b154d\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The persistent absentee rate is the number of persistent absentees expressed as a percentage of the total number of enrolments.\");",
													"                break;",
													"            case \"e03c3b82-75df-4dee-b3ed-dac39378a9b5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal('See \"Guide to absence statistics\" for more information on how absence and pupil characteristic data have been linked.');",
													"                break;",
													"            case \"96641ff5-d33b-495d-8691-8045c148a595\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Figures for pupils with unclassified or missing characteristics information should be interpreted with caution.\");",
													"                break;",
													"            default:",
													"                break;",
													"        }",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(8); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"country\": [\n            \"E92000001\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2014,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \"{{FILT_Char__GenderFemale}}\"\n    ],\n    \"indicators\": [\n    \t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n        \"{{IND_AbsenceFields__PercentageOfPersistentAbsentees}}\",\n        \"{{IND_AbsenceFields__NumberOfPersistentAbsentees}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - England - Primary, EthMinorIrish",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "495afef6-646d-4eca-a532-5159c0fcc8e5",
												"exec": [
													"respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Validate footnotes\", function () {",
													"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(8);",
													"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
													"        switch(respJson.subjectMeta.footnotes[i].id) {",
													"            case \"fbb6262f-213a-453a-98ca-b832d6ae1c16\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded primary schools include all primary academies, including free schools.\");",
													"                break;",
													"            case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
													"                break;",
													"            case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
													"                break;",
													"            case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
													"                break;",
													"            case \"78c78049-22b3-4ec8-bc2a-7f47a6f7c74c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Pupil enrolments missing 10 percent or more of their own possible sessions (due to authorised or unauthorised absence) are classified as persistent absentees.\");",
													"                break;",
													"            case \"7b18666a-ff4a-43a9-9639-8f324374db0c\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The definition of persistent absence changed from the 2015/16 academic year - The information presented for years prior to 2015/16 has been produced using the same methodology in order to allow users to make comparisons on a consistent basis over time.\");",
													"                break;",
													"            case \"507b05b0-4015-4330-9901-20b47c5b154d\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The persistent absentee rate is the number of persistent absentees expressed as a percentage of the total number of enrolments.\");",
													"                break;",
													"            case \"e03c3b82-75df-4dee-b3ed-dac39378a9b5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal('See \"Guide to absence statistics\" for more information on how absence and pupil characteristic data have been linked.');",
													"                break;",
													"            case \"96641ff5-d33b-495d-8691-8045c148a595\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Figures for pupils with unclassified or missing characteristics information should be interpreted with caution.\");",
													"                break;",
													"            default:",
													"                break;",
													"        }",
													"    }",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(1); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"country\": [\n            \"E92000001\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2014,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__StateFundedPrimary}}\", \"{{FILT_Char__EthMinor_Irish}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n        \"{{IND_AbsenceFields__PercentageOfPersistentAbsentees}}\",\n        \"{{IND_AbsenceFields__NumberOfPersistentAbsentees}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - 3 LAs",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2e3cb310-0733-4d8d-8f8b-f4c1ce74a5e6",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Expect corret number of results\", function () {",
													"    pm.expect(respJson.results.length).to.equal(9); ",
													"});",
													"",
													"pm.test(\"Verify all possible timePeriods appear\", function () {",
													"    var found2013 = false;",
													"    var found2014 = false;",
													"    var found2015 = false;",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(!found2013 && respJson.results[i].timePeriod === \"2013_AY\") {",
													"            found2013 = true;",
													"        }",
													"        if(!found2014 && respJson.results[i].timePeriod === \"2014_AY\") {",
													"            found2014 = true;",
													"        }",
													"        if(!found2015 && respJson.results[i].timePeriod === \"2015_AY\") {",
													"            found2015 = true;",
													"        }",
													"    } ",
													"    pm.expect(found2013).to.equal(true, \"No results from 2013\");",
													"    pm.expect(found2014).to.equal(true, \"No results from 2014\");",
													"    pm.expect(found2015).to.equal(true, \"No results from 2015\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"localAuthority\": [\n            \"E08000016\",\n            \"E09000002\",\n            \"E09000003\"\n\t    ],\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfPupilEnrolments}}\",\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\"\n    ],\n    \"filters\": [\n        \"{{FILT_Char__Total}}\",\n        \"{{FILT_SchoolType__Total}}\",\n        ],\n    \"timePeriod\": {\n        \"startYear\": 2013,\n        \"startCode\": \"AY\",\n        \"endYear\": 2015,\n        \"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - Wandsworth",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2cdba77a-8d6e-444c-9b93-8f16f1c3294e",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"subjectMeta.locations should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.locations.length).to.equal(1);",
													"    pm.expect(respJson.subjectMeta.locations[0].label).to.equal(\"Wandsworth\");",
													"    pm.expect(respJson.subjectMeta.locations[0].level).to.equal(\"localAuthority\");",
													"    pm.expect(respJson.subjectMeta.locations[0].value).to.equal(\"E09000032\");",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(2); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(16); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"localAuthority\": [\n            \"E09000032\"\n\t    ],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2015,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__GenderMale}}\", \n        \"{{FILT_Char__GenderFemale}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by characteristic - Adur",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9ff4958d-fe1e-4980-b04c-c5e776252de3",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"subjectMeta.locations should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.locations.length).to.equal(1);",
													"    pm.expect(respJson.subjectMeta.locations[0].label).to.equal(\"Adur\");",
													"    pm.expect(respJson.subjectMeta.locations[0].level).to.equal(\"localAuthorityDistrict\");",
													"    pm.expect(respJson.subjectMeta.locations[0].value).to.equal(\"E07000223\");",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(11); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__UnauthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__OverallAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__AuthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthorityDistrict\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n        \"localAuthorityDistrict\": [\n            \"E07000223\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_Char__FSMEligible}}\", \n        \"{{FILT_Char__FSMNotEligible}}\", \n        \"{{FILT_Char__FSMUnclassified}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\", \n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\", \n        \"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "d34d7e52-6bba-4d3f-b514-f8e4b8688ea0",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_Char__Total\", \"183f94c3-b5d7-4868-892d-c948e256744d\");",
											"pm.globals.set(\"FILT_Char__GenderMale\", \"eb6013a7-6e69-4ab6-b51e-b7a3e68256ae\");",
											"pm.globals.set(\"FILT_Char__GenderFemale\", \"ab381336-5e81-4caa-9e59-6e9067e8fb04\");",
											"pm.globals.set(\"FILT_SchoolType__Total\", \"cb9b57e8-9965-4cb6-b61a-acc6d34b32be\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedPrimary\", \"d7e7e412-f462-444f-84ac-3454fa471cb8\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedSecondary\", \"a9fe9fa6-e91f-460b-a0b1-66877b97c581\");",
											"pm.globals.set(\"FILT_SchoolType__Special\", \"b3207d77-143b-43d5-8b48-32d29727e96f\");",
											"pm.globals.set(\"FILT_Char__FSMEligible\", \"278ce0cb-f1d2-4e8f-84d1-ad794352c925\");",
											"pm.globals.set(\"FILT_Char__FSMNotEligible\", \"bc6e41d5-5078-4207-b0ae-69261ac192e0\");",
											"pm.globals.set(\"FILT_Char__FSMUnclassified\", \"c649015c-8203-43aa-b424-dfb897766391\");",
											"pm.globals.set(\"FILT_Char__EthMinor_Irish\", \"5a18e770-73b9-4b4f-8c3c-b3130b810422\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfPupilEnrolments\", \"1293b484-93f5-4177-a451-fcf4467b26a2\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfSessionsPossible\", \"74c8ab3a-0ec3-4348-852c-9055f354f86f\");",
											"pm.globals.set(\"IND_AbsenceFields__UnauthorisedAbsenceRate\", \"ccfe716a-6976-4dc3-8fde-a026cd30f3ae\");",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"92d3437a-0a62-4cd7-8dfb-bcceba7eef61\");",
											"pm.globals.set(\"IND_AbsenceFields__AuthorisedAbsenceRate\", \"f9ae4976-7cd3-4718-834a-09349b6eb377\");",
											"pm.globals.set(\"IND_AbsenceFields__PercentageOfPersistentAbsentees\", \"a93b664a-c537-4bb0-8d06-b4ce9bf60ff9\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfPersistentAbsentees\", \"5a59cfeb-19e7-486c-906e-f2ad45f896f6\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "7b3cda14-a607-42f4-b814-5ae2037687ee",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "By geographic level",
							"item": [
								{
									"name": "Tablebuilder - Absence by geographic level - Country - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2f4293ac-da93-465c-867e-2ff18f9a1abc",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(11); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(33); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__OverallAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__AuthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(`results[0].measures.${pm.globals.get(\"IND_AbsenceFields__UnauthorisedAbsenceRate\")}`));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - England - 200607 - all schoolTypes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fe561320-e9b3-439e-b4d1-e6599e1ba5d8",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Expect correct number of results\", function() {",
													"   pm.expect(respJson.results.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Result data should be correct\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"67366501\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Total\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"31022269\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedPrimary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"35518043\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedSecondary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"826189\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Special\")]);",
													"            continue;",
													"        }",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"subjectId\":\"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n\t\"indicators\":[\n\t\t\"{{IND_AbsenceByReason__NumberOfIllnessSessions}}\"\n\t],\n\t\"filters\": [\n\t\t\"{{FILT_SchoolType__Total}}\", \n\t\t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n\t\t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n\t\t\"{{FILT_SchoolType__Special}}\"\n\t],\n\t\"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2006,\n    \t\"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - LA - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2bff62d1-9e71-4ffd-acdd-6413985dd6ee",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(451); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"All subjectMeta locations should be localAuthority\", function () {",
													"    for(var i = 0; i < respJson.subjectMeta.locations.length; i++) {",
													"        pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"localAuthority\");",
													"    }",
													"});",
													"",
													"pm.test(\"Results geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"geographicLevel\": \"LocalAuthority\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "bf5368a1-65eb-4982-9d6b-e6648db28c9a",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(30); });",
													"",
													"pm.test(\"First result should have correct fields\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location.region\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
													"});",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - Inner London",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "602982e6-af54-43d0-a0e2-8aab2e53f457",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(11); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(33); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"region\": [\n            \"E13000001\"\n        ]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n    \t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n    \t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n    \t\"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "461ab6a7-54ef-4d94-bfef-201944b19c37",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_SchoolType__Total\", \"0b0daf53-3dd5-4b9b-913e-f4518f4afb96\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedPrimary\", \"006b1702-3d16-4d64-8d57-9336fbb7c4da\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedSecondary\", \"5c175038-297f-4b0d-89dd-2f6e9e22db29\");",
											"pm.globals.set(\"FILT_SchoolType__Special\", \"c62fd826-00b0-4933-995c-0739fa7cd1fe\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"c5358a0e-50be-4de9-9a7a-366b96c21d2a\");",
											"pm.globals.set(\"IND_AbsenceFields__AuthorisedAbsenceRate\", \"af786942-5ddc-4e41-8f98-61ca95931985\");",
											"pm.globals.set(\"IND_AbsenceFields__UnauthorisedAbsenceRate\", \"2d08d922-d57e-404d-971c-18fb386d3183\");",
											"pm.globals.set(\"IND_AbsenceFields__PercentageOfPersistentAbsentees\", \"1c3cb6ab-1917-448d-b67c-6b7d8438b7ce\");",
											"",
											"pm.globals.set(\"IND_AbsenceByReason__NumberOfIllnessSessions\", \"94f73d1c-dc74-4cae-a2c0-1534c634a4ef\");",
											"pm.globals.set(\"IND_AbsenceByReason__NumberOfExtendedAuthorisedHolidaySessions\", \"1aa8b098-356d-4b19-942d-e6bc0fded7d8\");",
											"",
											"pm.globals.set(\"IND_INVALID\", \"00000000-0000-0000-0000-000000000000\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "159f6b27-6c33-4c09-aeca-997939a22087",
										"type": "text/javascript",
										"exec": [
											""
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "By term",
							"item": [
								{
									"name": "Tablebuilder - Absence by term - England - * - AY",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e44793dc-597a-429c-b29a-225389629dd6",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(3); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(36); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\", \n        \"{{FILT_Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - England - * - T1,T2,T3",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0ccf32f4-5dbd-40bb-85b7-788bc6e3de59",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"// NOTE(mark): Asked to disable these tests due to DFE-1044",
													"// pm.test(\"timePeriodRange length should be correct\", function () {",
													"//     pm.expect(respJson.timePeriodRange.length).to.equal(11); ",
													"// });",
													"",
													"//pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(33); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2013,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \"{{FILT_StateFundedSecondary}}\", \"{{FILT_Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - England - AY",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2a2a28f5-a1cc-4ae7-9b65-02adf779a6fa",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"//pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(2); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - no geoLevel - Country England, Region Inner London + Outer London, LA City of London + Barking and Dagenham - AY",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "418e8cd5-3625-44a8-9df1-980fe1fb9052",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"subjectMeta.locations should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.locations.length).to.equal(5);",
													"    for(var i = 0; i < respJson.subjectMeta.locations.length; i++) {",
													"        switch(respJson.subjectMeta.locations[i].label) {",
													"            case \"England\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"country\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E92000001\");",
													"                break;",
													"            case \"Inner London\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"region\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E13000001\");",
													"                break;",
													"            case \"Outer London\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"region\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E13000002\");",
													"                break;",
													"            case \"City of London\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"localAuthority\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E09000001\");",
													"                break;",
													"            case \"Barking and Dagenham\":",
													"                pm.expect(respJson.subjectMeta.locations[i].level).to.equal(\"localAuthority\");",
													"                pm.expect(respJson.subjectMeta.locations[i].value).to.equal(\"E09000002\");",
													"                break;",
													"            default:",
													"                pm.expect(false).to.equal(true, `${respJson.subjectMeta.locations[i].label} shouldn't be in subjectMeta.locations!`);",
													"        }",
													"    }",
													"});",
													"",
													"/*",
													"pm.test(\"Number of results should be correct\", function () { ",
													"    pm.expect(respJson.results.length).to.equal(9);",
													"    ",
													"    pm.expect(respJson.results[0].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[0].location.region.code).to.equal(\"E13000001\");",
													"    pm.expect(respJson.results[0].location.region.name).to.equal(\"Inner London\");",
													"    ",
													"    pm.expect(respJson.results[1].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[1].location.region.code).to.equal(\"E13000001\");",
													"    pm.expect(respJson.results[1].location.region.name).to.equal(\"Inner London\");",
													"    ",
													"    pm.expect(respJson.results[2].geographicLevel).to.equal(\"LocalAuthority\");",
													"    pm.expect(respJson.results[2].location.localAuthority.code).to.equal(\"E09000001\");",
													"    pm.expect(respJson.results[2].location.localAuthority.name).to.equal(\"City of London\");",
													"    ",
													"    pm.expect(respJson.results[3].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[3].location.region.code).to.equal(\"E13000002\");",
													"    pm.expect(respJson.results[3].location.region.name).to.equal(\"Outer London\");",
													"    ",
													"    pm.expect(respJson.results[4].geographicLevel).to.equal(\"Region\");",
													"    pm.expect(respJson.results[4].location.region.code).to.equal(\"E13000002\");",
													"    pm.expect(respJson.results[4].location.region.name).to.equal(\"Outer London\");",
													"    ",
													"    pm.expect(respJson.results[5].geographicLevel).to.equal(\"Country\");",
													"    pm.expect(respJson.results[5].location.country.code).to.equal(\"E92000001\");",
													"    pm.expect(respJson.results[5].location.country.name).to.equal(\"England\");",
													"    ",
													"    pm.expect(respJson.results[6].geographicLevel).to.equal(\"Country\");",
													"    pm.expect(respJson.results[6].location.country.code).to.equal(\"E92000001\");",
													"    pm.expect(respJson.results[6].location.country.name).to.equal(\"England\");",
													"    ",
													"    pm.expect(respJson.results[7].geographicLevel).to.equal(\"LocalAuthority\");",
													"    pm.expect(respJson.results[7].location.localAuthority.code).to.equal(\"E09000002\");",
													"    pm.expect(respJson.results[7].location.localAuthority.name).to.equal(\"Barking and Dagenham\");",
													"    ",
													"    pm.expect(respJson.results[8].geographicLevel).to.equal(\"LocalAuthority\");",
													"    pm.expect(respJson.results[8].location.localAuthority.code).to.equal(\"E09000002\");",
													"    pm.expect(respJson.results[8].location.localAuthority.name).to.equal(\"Barking and Dagenham\");",
													"});",
													"*/"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"country\": [\"E92000001\"],\n        \"region\": [\"E13000001\", \"E13000002\"],\n        \"localAuthority\": [\"E09000001\", \"E09000002\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by term - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "46087142-b6b3-4d1f-a47f-c13d8c480732",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"//pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(100); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"b7bc537b-0c04-4b15-9eb6-4f0e8cc2e70a\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2012,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSessionsPossible}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - England - 200607 - all schoolTypes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "332c4ed7-7a73-4869-be78-eb3c588ddd89",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Expect correct number of results\", function() {",
													"   pm.expect(respJson.results.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Result data should be correct\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"67366501\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Total\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"31022269\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedPrimary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"35518043\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedSecondary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"826189\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Special\")]);",
													"            continue;",
													"        }",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"subjectId\":\"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n\t\"indicators\":[\n\t\t\"{{IND_AbsenceByReason__NumberOfIllnessSessions}}\"\n\t],\n\t\"filters\": [\n\t\t\"{{FILT_SchoolType__Total}}\", \n\t\t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n\t\t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n\t\t\"{{FILT_SchoolType__Special}}\"\n\t],\n\t\"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2006,\n    \t\"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence by geographic level - England - 200607 - all schoolTypes",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "1b4192bd-be02-4b68-8ec5-31a73c059f4e",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () {",
													"    pm.response.to.have.status(200);",
													"});",
													"",
													"pm.test(\"Compulsory fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Expect correct number of results\", function() {",
													"   pm.expect(respJson.results.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Result data should be correct\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"67366501\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Total\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"31022269\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedPrimary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"35518043\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__StateFundedSecondary\")]);",
													"            continue;",
													"        }",
													"        else if(respJson.results[i].measures[pm.globals.get(\"IND_AbsenceByReason__NumberOfIllnessSessions\")] == \"826189\") {",
													"            pm.expect(respJson.results[i].filters).to.eql([pm.globals.get(\"FILT_SchoolType__Special\")]);",
													"            continue;",
													"        }",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\t\"subjectId\":\"568576e5-d386-450e-a8db-307b7061d0d8\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n\t\"indicators\":[\n\t\t\"{{IND_AbsenceByReason__NumberOfIllnessSessions}}\"\n\t],\n\t\"filters\": [\n\t\t\"{{FILT_SchoolType__Total}}\", \n\t\t\"{{FILT_SchoolType__StateFundedPrimary}}\", \n\t\t\"{{FILT_SchoolType__StateFundedSecondary}}\", \n\t\t\"{{FILT_SchoolType__Special}}\"\n\t],\n\t\"timePeriod\": {\n    \t\"startYear\": 2006,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2006,\n    \t\"endCode\": \"AY\"\n    }\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "f157007b-28d7-4e26-984a-4e769f7353cd",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_StateFundedPrimary\", \"514b404f-ca0c-4568-9539-9dea79d43bc8\");",
											"pm.globals.set(\"FILT_StateFundedSecondary\", \"df0506d1-456a-4b10-b0a6-268d59c1924e\");",
											"pm.globals.set(\"FILT_Special\", \"23896559-d8cc-4c0d-b839-1a60d43e5928\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfSessionsPossible\", \"cb1fc409-b8fd-482a-aee0-627860cde918\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfUnauthorisedAbsenceSessions\", \"1199a5e5-eed7-4261-98b9-0a3727104176\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfAuthorisedAbsenceSessions\", \"7a690779-08f3-40c3-80a4-ef5ab1fc0995\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfOverallAbsenceSessions\", \"a648c8b6-268e-4781-8fb7-801426a270ac\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "b39c06dc-479f-419e-b307-2bd9c7458405",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "For four year olds",
							"item": [
								{
									"name": "Tablebuilder - Absence for four year olds - England - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e56bd60-acf5-4c48-a9c3-ab15236623c8",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(4); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(8); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"353db5ea-befd-488b-ad16-2ce7963c9bc9\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2013,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__Special}}\", \n        \"{{FILT_SchoolType__StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence for four year olds England - Secondary, Special",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0d43a700-c831-4f3e-8adb-7b97a0f328a7",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Validate footnotes\", function () {",
													"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(6);",
													"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
													"        switch(respJson.subjectMeta.footnotes[i].id) {",
													"            case \"e9076bab-6ff7-4c92-8972-2fb4affbe977\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded secondary schools include city technology colleges and all secondary academies, including all-through academies and free schools.\");",
													"                break;",
													"            case \"128c6153-4937-40da-a99f-e137fc8c41e5\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Special schools include maintained special schools, non-maintained special schools and special academies.  Excludes general hospital schools, independent special schools and independent schools approved for SEN pupils.\");",
													"                break;",
													"            case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
													"                break;",
													"            case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
													"                break;",
													"            case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
													"                break;",
													"            case \"2268f97a-5107-464f-ade6-30debc36519a\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Includes pupils on the school roll for at least one session who are aged 4, excluding boarders. Some pupils may be counted more than once (if they moved schools during the academic year or are registered at more than one school).\");",
													"                break;",
													"            case \"8a79e8c6-3552-496a-8790-d072cec8c43f\":",
													"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Only overall absence is recorded for pupils aged 4, absences are not categorised as authorised or unauthorised.\");",
													"                break;",
													"            default:",
													"                break;",
													"        }",
													"    }",
													"});",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(1); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(2); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"353db5ea-befd-488b-ad16-2ce7963c9bc9\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__StateFundedSecondary}}\", \"{{FILT_SchoolType__Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfPupilEnrolments}}\",\n\t\t\"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence for four year olds - Region West Midlands, South East, South West",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "fd694964-f076-409f-a618-512475872e40",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(15); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"353db5ea-befd-488b-ad16-2ce7963c9bc9\",\n    \"locations\": {\n        \"region\": [\"E12000005\", \"E12000008\", \"E12000009\"],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2012,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_SchoolType__Total}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__OverallAbsenceRate}}\",\n\t\t\"{{IND_AbsenceFields__NumberOfOverallAbsenceSessions}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "8dc52e1a-603e-4ab0-8e3b-bdaae1c6347b",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_SchoolType__Total\", \"26f7f3d0-b7ad-4517-8815-e0c70295ff3b\");",
											"pm.globals.set(\"FILT_SchoolType__StateFundedSecondary\", \"442710bd-5fc6-4096-a4ae-05cb092ede15\");",
											"pm.globals.set(\"FILT_SchoolType__Special\", \"d2cbfaa7-9768-4845-9d86-48e352635754\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfPupilEnrolments\", \"f48c43ca-e6a2-4f16-a5ee-85899536f0a7\");",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"d7113560-e535-421e-9a5b-b6cd7528f4d4\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfOverallAbsenceSessions\", \"2550def1-9732-458e-812d-c70d034ec51d\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "fd6861be-6a0c-4024-93d9-e8e8e98ba427",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "In PRUs",
							"item": [
								{
									"name": "Tablebuilder - Absence in PRUs - England",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "13ecce9e-e211-42d2-8272-359b1c69bf21",
												"exec": [
													"// DFE-998 - If no geographicLevel is provided, respond with all geographicLevels",
													"var respJson = pm.response.json()",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(4); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(4); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"country\":[\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2013,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfSchools}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence in PRUs - LA Bexley, Buckinghamshire, Derby",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ddde749f-bd5f-4956-aed9-f1258f1a52e6",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"timePeriodRange length should be correct\", function () {",
													"    pm.expect(respJson.subjectMeta.timePeriodRange.length).to.equal(2); ",
													"});",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(6); });",
													"",
													"pm.test(\"geographicLevel and indicators/measures should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"LocalAuthority\");",
													"        pm.expect(pm.response.to.have.jsonBody(`results[${i}].measures.6d2de8c1-15d7-4cc4-a60a-d512b7876e4d`));",
													"        pm.expect(pm.response.to.have.jsonBody(`results[${i}].measures.6160c4f8-4c9f-40f0-a623-2a4f742860af`));",
													"        pm.expect(pm.response.to.have.jsonBody(`results[${i}].measures.ee11e1cb-2d9a-4d6d-8e6c-8d32f24fa08f`));",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"localAuthority\": [\"E06000015\", \"E09000004\", \"E10000002\"],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2015,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n    \t\"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__OverallAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence in PRUs - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "60989418-4a09-435c-b9a3-dbc53572b73b",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(10); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__OverallAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								},
								{
									"name": "Tablebuilder - Absence in PRUs - LA Bury, Devon + Region East of England",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d91bac09-a10f-4093-9e7f-3a0ab64a29ef",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(6); }); // LA 4 + Region 2",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.satisfy(function (geoLevel) {",
													"            return geoLevel === \"Region\" || geoLevel === \"LocalAuthority\";",
													"        });",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"95c7f584-907e-4756-bbf0-4905ceae57df\",\n    \"locations\": {\n        \"localAuthority\": [\"E08000002\", \"E10000008\"],\n        \"region\": [\"E12000006\"],\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2015,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"indicators\": [\n        \"{{IND_AbsenceFields__UnauthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__AuthorisedAbsenceRate}}\",\n    \t\"{{IND_AbsenceFields__OverallAbsenceRate}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "34c3f9bc-846e-427e-a0ee-92e502308f1c",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"IND_AbsenceFields__NumberOfSchools\", \"9472758e-6c4a-4cb2-8270-d0551ce91494\");",
											"pm.globals.set(\"IND_AbsenceFields__UnauthorisedAbsenceRate\", \"6d2de8c1-15d7-4cc4-a60a-d512b7876e4d\");",
											"pm.globals.set(\"IND_AbsenceFields__AuthorisedAbsenceRate\", \"6160c4f8-4c9f-40f0-a623-2a4f742860af\");",
											"pm.globals.set(\"IND_AbsenceFields__OverallAbsenceRate\", \"ee11e1cb-2d9a-4d6d-8e6c-8d32f24fa08f\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "8efd6716-ffdd-4784-b481-6546435ba8bc",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Number missing at least one session by reason",
							"item": [
								{
									"name": "Tablebuilder - Absence number missing at least one session by reason - Region - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "444f3bcd-95c2-489c-bfd3-3eb10ec9e5c6",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(150); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Region\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"faf2152e-0a6c-4e97-af02-e9a89d48c47a\",\n    \"locations\": {\n        \"geographicLevel\": \"Region\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2012,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_StateFundedSecondary}}\", \n        \"{{FILT_Special}}\"\n    ],\n    \"indicators\": [\n        \"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneUnauthorisedAbsenceSession}}\",\n    \t\"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneAuthorisedAbsenceSession}}\",\n    \t\"{{IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneOverallAbsenceSession}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "93f44896-cc3a-4089-8aa5-7af795bd9efa",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_StateFundedPrimary\", \"0089b1b3-626c-4326-a2ec-a4b99b4735bc\");",
											"pm.globals.set(\"FILT_StateFundedSecondary\", \"d2b2e7af-d7b7-4526-817c-cc4fc1d010c3\");",
											"pm.globals.set(\"FILT_Special\", \"4bd075b2-d4de-48db-a007-dc2f9226d206\");",
											"",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneUnauthorisedAbsenceSession\", \"a07cb02d-a07b-4928-a93a-fe1192011998\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneAuthorisedAbsenceSession\", \"037e2587-2c2c-4bec-83e5-12e3cc35c836\");",
											"pm.globals.set(\"IND_AbsenceFields__NumberOfEnrolmentsWithAtLeastOneOverallAbsenceSession\", \"ff1ccb6e-5faa-43bc-bd6d-be52f754bde6\");"
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "e46217ed-546f-4eae-a875-2bfe0c49a995",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Rate percent bands",
							"item": [
								{
									"name": "Tablebuilder - Absence rate percent bands - Country - *",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "930e3b12-d292-4d37-b483-31ea3d9703ce",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(306); });",
													"",
													"pm.test(\"geographicLevel should be same as request\", function () {",
													"    for(var i = 0; i < respJson.results.length; i++) {",
													"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"subjectId\": \"666cd878-87bb-4f77-9a3f-f5c75078e112\",\n    \"locations\": {\n        \"geographicLevel\": \"Country\",\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2016,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{FILT_StateFundedPrimary}}\", \n        \"{{FILT_Special}}\", \n        \"{{FILT_StateFundedSecondary}}\"\n    ],\n    \"indicators\": [\n    \t\"{{IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForOverallAbsence}}\",\n    \t\"{{IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForAuthorisedAbsence}}\",\n    \t\"{{IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForUnauthorisedAbsence}}\"\n    ]\n}"
										},
										"url": {
											"raw": "{{data_api_url}}/tablebuilder",
											"host": [
												"{{data_api_url}}"
											],
											"path": [
												"tablebuilder"
											]
										}
									},
									"response": []
								}
							],
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"id": "9ea2a814-bc47-4b7c-9bea-6d875d8700da",
										"type": "text/javascript",
										"exec": [
											"pm.globals.set(\"FILT_StateFundedPrimary\", \"0af225c6-c70b-4053-b7e7-4e719e2b751f\");",
											"pm.globals.set(\"FILT_StateFundedSecondary\", \"c306ff42-ddea-4cd0-82af-770df078fd94\");",
											"pm.globals.set(\"FILT_Special\", \"a7a7a691-a49e-422e-839e-53f1f545fa76\");",
											"",
											"pm.globals.set(\"IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForOverallAbsence\", \"fe313349-0438-41b7-8944-109690ee5158\");",
											"pm.globals.set(\"IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForAuthorisedAbsence\", \"f3014e60-534a-4667-b90f-80b1fee6b08e\");",
											"pm.globals.set(\"IND_NumberOfAllPupilEnrolmentsThatFallIntoThatPerCentBandForUnauthorisedAbsence\", \"cd2711ff-3dba-4452-858a-d55c5cfd04fb\");",
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"id": "52c88b3a-3fd9-4719-b82a-a927e3830bfe",
										"type": "text/javascript",
										"exec": [
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Compulsory fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});"
										]
									}
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "c2fad4f8-0ff6-4e44-b304-4af6dba796e5",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "9fb6f7ea-0457-4676-a948-3643d550a910",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Permalink",
			"item": [
				{
					"name": "Permalink - invalid permalinkId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "2c475be0-f2d7-4b84-a4ea-e217dd1cb8e8",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "0098dfc4-ac23-4027-8ddf-5eca3c31926f",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{data_api_url}}/permalink/5948f25b-25ae-488a-bf54-e8913e89de18",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"permalink",
								"5948f25b-25ae-488a-bf54-e8913e89de18"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Fasttrack",
			"item": [
				{
					"name": "Fasttrack - Exclusions by geographic level - Generic data block 1 - get fasttrack",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c9a040a1-cdc5-450d-9a2f-6be7e5f5409c",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Should have correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"created\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"configuration\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.subjectMeta\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"fullTable.results\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"query\"));",
									"});",
									"",
									"pm.test(\"Response id should match request fasttrack id\", function () {",
									"    pm.expect(respJson.id).to.equal(\"dd572e49-87e3-46f5-bb04-e9008573fc91\");",
									"});",
									"",
									"pm.test(\"Number of subjectMeta filters should be correct\", function () {",
									"   pm.expect(Object.keys(respJson.fullTable.subjectMeta.filters).length).to.equal(1);",
									"});",
									"",
									"pm.test(\"Number of subjectMeta locations should be correct\", function () {",
									"   pm.expect(respJson.fullTable.subjectMeta.locations.length).to.equal(1);",
									"   pm.expect(respJson.fullTable.subjectMeta.locations[0].level).to.equal(\"country\");",
									"   pm.expect(respJson.fullTable.subjectMeta.locations[0].label).to.equal(\"England\");",
									"   pm.expect(respJson.fullTable.subjectMeta.locations[0].value).to.equal(\"E92000001\");",
									"});",
									"",
									"pm.test(\"Number of results should be correct\", function () {",
									"    pm.expect(respJson.fullTable.results.length).to.equal(5);",
									"});",
									"",
									"pm.test(\"Table headers configuration exists\", function () {",
									"    var tableHeaders = respJson.configuration.tableHeaders;",
									"    pm.expect(tableHeaders.columnGroups.length).to.equal(0);",
									"    pm.expect(tableHeaders.columns.length).to.equal(5);",
									"    pm.expect(tableHeaders.columns[0].value).to.equal(\"2012_AY\");",
									"    pm.expect(tableHeaders.columns[1].value).to.equal(\"2013_AY\");",
									"    pm.expect(tableHeaders.columns[2].value).to.equal(\"2014_AY\");",
									"    pm.expect(tableHeaders.columns[3].value).to.equal(\"2015_AY\");",
									"    pm.expect(tableHeaders.columns[4].value).to.equal(\"2016_AY\");",
									"    pm.expect(tableHeaders.rowGroups.length).to.equal(1);",
									"    pm.expect(tableHeaders.rowGroups[0].length).to.equal(1);",
									"    pm.expect(tableHeaders.rowGroups[0][0].value).to.equal(\"E92000001\");",
									"    pm.expect(tableHeaders.rows.length).to.equal(3);",
									"    pm.expect(tableHeaders.rows[0].value).to.equal(\"a5a58f92-aba1-4955-4c02-08d78f90080f\");",
									"    pm.expect(tableHeaders.rows[1].value).to.equal(\"167f4807-4fdd-461a-4c03-08d78f90080f\");",
									"    pm.expect(tableHeaders.rows[2].value).to.equal(\"be3b765b-005f-4279-4c04-08d78f90080f\");",
									"});",
									"",
									"pm.test(\"Query contains expected fields\", function () {",
									"    pm.expect(respJson.query.subjectId).to.equal(\"3c0fbe56-0a4b-4caa-82f2-ab696cd96090\");",
									"    pm.expect(respJson.query.timePeriod.startYear).to.equal(2012);",
									"    pm.expect(respJson.query.timePeriod.startCode).to.equal(\"AY\");",
									"    pm.expect(respJson.query.timePeriod.endYear).to.equal(2016);",
									"    pm.expect(respJson.query.timePeriod.endCode).to.equal(\"AY\");",
									"    pm.expect(respJson.query.filters.length).to.equal(1);",
									"    pm.expect(respJson.query.filters[0]).to.equal(\"1f3f86a4-de9f-43d7-5bfd-08d78f900a85\");",
									"    pm.expect(respJson.query.indicators.length).to.equal(3);",
									"    pm.expect(respJson.query.indicators[0]).to.equal(\"be3b765b-005f-4279-4c04-08d78f90080f\");",
									"    pm.expect(respJson.query.indicators[1]).to.equal(\"a5a58f92-aba1-4955-4c02-08d78f90080f\");",
									"    pm.expect(respJson.query.indicators[2]).to.equal(\"167f4807-4fdd-461a-4c03-08d78f90080f\");",
									"    pm.expect(respJson.query.locations.country.length).to.equal(1);",
									"    pm.expect(respJson.query.locations.country[0]).to.equal(\"E92000001\");",
									"    pm.expect(respJson.query.publicationId).to.equal(\"bf2b4284-6b84-46b0-aaaa-a2e0a23be2a9\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{data_api_url}}/fasttrack/dd572e49-87e3-46f5-bb04-e9008573fc91",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"fasttrack",
								"dd572e49-87e3-46f5-bb04-e9008573fc91"
							]
						}
					},
					"response": []
				},
				{
					"name": "Fasttrack - invalid fasttrackId",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "99f98ece-8fcc-4d21-a6c1-37b29a2e0f22",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a2773f9f-48c5-4415-801b-1d39238c16d3",
								"exec": [
									"pm.test(\"Status code is 404\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{data_api_url}}/fasttrack/1ac50422-3e16-407a-b6c7-63af2d1ed1c1",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"fasttrack",
								"1ac50422-3e16-407a-b6c7-63af2d1ed1c1"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "b00b5764-0fd7-46a7-a81e-d1295791916a",
						"type": "text/javascript",
						"exec": [
							"pm.globals.set(\"FILT_AbsenceForFourYearOlds__SchoolType__StateFundedPrimary\", \"2f219985-8900-4a84-b096-89d133ef8bc6\");",
							"",
							"pm.globals.set(\"IND_AbsenceForFourYearOlds__AbsenceFields__NumberOfOverallAbsenceSessions\", \"2550def1-9732-458e-812d-c70d034ec51d\");"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "050d89c4-9e2f-4eb4-b3b8-e8510eef6022",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Download",
			"item": [
				{
					"name": "Download - Absence by term",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ba02a1f6-6aa7-428b-9d6b-f22e2cdb6d0b",
								"exec": [
									"/*",
									"// EES-562",
									"(pm.environment.get(\"data_api_url\") === \"http://localhost:5000/api\" ? pm.test.skip : pm.test)(\"Status code is 200\", function () { ",
									"    pm.response.to.have.status(200); ",
									"});",
									"",
									"(pm.environment.get(\"data_api_url\") === \"http://localhost:5000/api\" ? pm.test.skip : pm.test)(\"First line of CSV should be correct\", function () { ",
									"    pm.expect(pm.response.text()).to.contain(\"time_identifier,time_period,geographic_level,country_code,country_name,region_code,region_name,old_la_code,new_la_code,la_name,school_type,sess_possible,sess_overall,sess_authorised,sess_unauthorised,sess_overall_percent,sess_authorised_percent,sess_unauthorised_percent,sess_auth_illness,sess_auth_appointments,sess_auth_religious,sess_auth_study,sess_auth_traveller,sess_auth_holiday,sess_auth_ext_holiday,sess_auth_excluded,sess_auth_other,sess_auth_totalreasons,sess_unauth_holiday,sess_unauth_late,sess_unauth_other,sess_unauth_noyet,sess_unauth_totalreasons,sess_overall_totalreasons\");",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{data_api_url}}/download/pupil-absence-in-schools-in-england/2016-17/absence_by_term.csv",
							"host": [
								"{{data_api_url}}"
							],
							"path": [
								"download",
								"pupil-absence-in-schools-in-england",
								"2016-17",
								"absence_by_term.csv"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "a1923aad-b149-4fda-a6be-1904f5142bb6",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "c996ace8-69f3-4e68-b4bb-1d0169a6f446",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}
{
	"info": {
		"_postman_id": "75f02d3d-dca4-442a-8eef-f3b1f7737f92",
		"name": "DfE Admin API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Contacts",
			"item": [
				{
					"name": "Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "bd63f932-d310-4f39-925d-94cda80d27a7",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].teamName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].teamEmail\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].contactName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].contactTelNo\"));",
									"});",
									"",
									"pm.test(\"School absence and exclusions team details should be correct\", function () {",
									"    var team = respJson.filter(function (team) { return team.teamName === \"School absence and exclusions team\" });",
									"    pm.expect(team.length).to.equal(1);",
									"    var team = team[0];",
									"    pm.expect(team.teamEmail).to.equal(\"schools.statistics@education.gov.uk\");",
									"    pm.expect(team.contactName).to.equal(\"Sean Gibson\");",
									"    pm.expect(team.contactTelNo).to.equal(\"0370 000 2288\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/contacts",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"contacts"
							]
						},
						"description": "Returns all contacts"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Methodologies",
			"item": [
				{
					"name": "Methodologies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "a51b4b8f-de79-49b1-a047-2c3bb7c8c0ca",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.be.above(2);    ",
									"});",
									"",
									"pm.test(\"Title for Exclusion methodology should be correct\", function () {",
									"    var foundExclusion = false;",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].id === \"c8c911e3-39c1-452b-801f-25bb79d1deb7\") {",
									"            foundExclusion = true;",
									"                pm.expect(respJson[i].title).to.equal(\"Pupil exclusion statistics: methodology\"); ",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/methodologies",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"methodologies"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Theme",
			"item": [
				{
					"name": "Get my themes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "58fedbac-1ff7-4e3d-b2bf-4c60e7334283",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { ",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Number of themes should be correct\", function () {",
									"    pm.expect(respJson.length).to.be.above(8);",
									"});",
									"",
									"pm.test(\"First result should have correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].topics\"));",
									"});",
									"",
									"pm.test(\"Number of topics and fields of first topic under Pupils and schools should be correct\", function () {",
									"    var foundPupilsAndSchools = false;",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].title === \"Pupils and schools\") {",
									"            foundPupilsAndSchools = true;",
									"            pm.expect(respJson[i].topics.length).to.equal(9);",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topics[0].id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topics[0].title`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topics[0].themeId`));",
									"        }",
									"    }",
									"    pm.expect(foundPupilsAndSchools).to.equal(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/me/themes",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"me",
								"themes"
							]
						},
						"description": "Returns all contacts"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Publication",
			"item": [
				{
					"name": "Get publication - Pupil absence in schools in England",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d401881e-7ab8-4843-b00f-c8baf9fe497f",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Expect correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(`id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`title`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases`));",
									"    pm.expect(pm.response.to.have.jsonBody(`methodology`));",
									"    pm.expect(pm.response.to.have.jsonBody(`topicId`));",
									"    pm.expect(pm.response.to.have.jsonBody(`themeId`));",
									"    pm.expect(pm.response.to.have.jsonBody(`contact`));",
									"});",
									"",
									"pm.test(\"Response id and title should be correct\", function () {",
									"    pm.expect(respJson.id).to.equal(\"cbbd299f-8297-44bc-92ac-558bcf51f8ad\");",
									"    pm.expect(respJson.title).to.equal(\"Pupil absence in schools in England\"); ",
									"});",
									"",
									"",
									"pm.test(\"Methodology title should be correct\", function () {",
									"    pm.expect(respJson.methodology.title).to.equal(\"Pupil absence statistics: methodology\"); ",
									"});",
									"",
									"pm.test(\"Should be at least one release\", function () {",
									"    pm.expect(respJson.releases.length).to.be.above(0); ",
									"});",
									"",
									"pm.test(\"First release should have correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].title`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].publicationId`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].publicationTitle`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].releaseName`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].yearTitle`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].typeId`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].nextReleaseDate`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].nextReleaseDate.year`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].nextReleaseDate.month`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].nextReleaseDate.day`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].published`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].live`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].timePeriodCoverage`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].timePeriodCoverage.value`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].timePeriodCoverage.label`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].latestRelease`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].type`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].type.id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].type.title`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.teamName`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.teamEmail`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.contactName`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.contactTelNo`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].status`));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "ace4be87-80ae-4cbe-ac0c-a136e4e5987f",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/publications/cbbd299f-8297-44bc-92ac-558bcf51f8ad",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"publications",
								"cbbd299f-8297-44bc-92ac-558bcf51f8ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user's topic - Pupil absence",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d9a5129c-89d6-4e38-a94e-392984b7a4d4",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(respJson.length).to.be.above(0);    ",
									"});",
									"",
									"pm.test(\"Response should contain \\\"Pupil absence in schools in England: autumn term\\\"\", function () {",
									"   var foundTitle = false;",
									"   for(var i = 0; i < respJson.length; i++) {",
									"       if(respJson[i].title === \"Pupil absence in schools in England: autumn term\") foundTitle = true;",
									"   }",
									"   pm.expect(foundTitle).to.equal(true);",
									"});",
									"",
									"pm.test(\"Expect latestRelease flag on releases\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        for(var j = 0; j < respJson[i].releases.length; j++) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].releases[${j}].latestRelease`));",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Expect non-null methodology to have correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].methodology != null) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.title`));",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Expect non-null contacts to have correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].contact != null) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.teamName`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.teamEmail`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.contactName`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.contactTelNo`));            ",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "732b941e-271e-412c-8422-172d6569c4ec",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/me/publications?topicId=67C249DE-1CCA-446E-8CCB-DCDAC542F460",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"me",
								"publications"
							],
							"query": [
								{
									"key": "topicId",
									"value": "67C249DE-1CCA-446E-8CCB-DCDAC542F460"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user's topic - School applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d8f9fb21-1165-4121-bcab-050c7ec652ba",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(respJson.length).to.be.above(0);    ",
									"});",
									"",
									"pm.test(\"Expect the correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].title`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].releases`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topicId`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].themeId`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].permissions`));",
									"    }",
									"});",
									"",
									"pm.test(\"First result's title should be correct\", function () { ",
									"    pm.expect(respJson[0].title).to.equal(\"Secondary and primary school applications and offers\"); ",
									"});",
									"",
									"pm.test(\"Expect latestRelease flag if releases is more than 0\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].releases !== null) {",
									"            for(var j = 0; j < respJson[i].releases.length; j++) {",
									"                 pm.expect(pm.response.to.have.jsonBody(`[${i}].releases[${j}].latestRelease`));",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Expect non-null methodology to have correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].methodology !== null) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.title`));",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/me/publications?topicId=1a9636e4-29d5-4c90-8c07-f41db8dd019c",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"me",
								"publications"
							],
							"query": [
								{
									"key": "topicId",
									"value": "1a9636e4-29d5-4c90-8c07-f41db8dd019c"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Data",
			"item": [
				{
					"name": "Meta",
					"item": [
						{
							"name": "Subject",
							"item": [
								{
									"name": "Subject Meta - Absence by characteristic",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "a68b06c2-c093-45ae-81f3-d3147423d1a8",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "c1accac9-49be-4095-84d8-7afa3b462222",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"totalValues should be correct\", function () {",
													"    pm.expect(respJson.filters.Characteristic.totalValue).to.equal(pm.globals.get('1FI_Char__Total'));",
													"    pm.expect(respJson.filters.SchoolType.totalValue).to.equal(pm.globals.get('1FI_SchoolType__Total'));",
													"});",
													"",
													"pm.test(\"Should be correct number of characteristics\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.Characteristic.options).length).to.equal(10);",
													"});",
													"",
													"pm.test(\"Each characteristic should have correct number\", function () {",
													"    pm.expect(respJson.filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(respJson.filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(19);",
													"    pm.expect(respJson.filters.Characteristic.options.NCYear.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.SENProvision.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FirstLanguage.options.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(respJson.timePeriod.options.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(respJson.locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(respJson.indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{admin_api_url}}/data/meta/subject/803fbf56-600f-490f-8409-6413a891720d",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"data",
												"meta",
												"subject",
												"803fbf56-600f-490f-8409-6413a891720d"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 803fbf56-600f-490f-8409-6413a891720d",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0bf58ddc-2c69-4721-b9bf-ee1e2aa6eca2",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(19);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(pm.response.json().locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "4f452a75-dd04-4f65-99fe-c34194307343",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: \"803fbf56-600f-490f-8409-6413a891720d\"\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/data/meta/subject",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"data",
												"meta",
												"subject"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Release",
							"item": [
								{
									"name": "Release Meta - Pupil absence in schools in England",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "86029a6a-759e-4af7-9032-7e4c93bdf004",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "1a9f2cbe-4aea-4e17-bcec-e42e495e4858",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"releaseId\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjects\"));",
													"});",
													"",
													"pm.test(\"Release id matches the release requested\", function () { pm.expect(pm.response.json().releaseId).to.equal(\"4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5\"); });",
													"",
													"pm.test(\"Number of subjects should be correct\", function () {",
													"    pm.expect(pm.response.json().subjects.length).to.be.above(6);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{admin_api_url}}/data/meta/release/4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"data",
												"meta",
												"release",
												"4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tablebuilder",
					"item": [
						{
							"name": "Tablebuilder - Absence by characteristic - England - Male, Female",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "77110101-1369-48eb-9f0f-3b82cb701d75",
										"exec": [
											"respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});",
											"",
											"// pm.test(\"Validate footnotes\", function () {",
											"//     pm.expect(respJson.subjectMeta.footnotes.length).to.equal(11, \"Should have 11 footnotes!\");",
											"//     for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
											"//         switch(respJson.subjectMeta.footnotes[i].id) {",
											"//             case \"fbb6262f-213a-453a-98ca-b832d6ae1c16\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded primary schools include all primary academies, including free schools.\");",
											"//                 break;",
											"//             case \"e9076bab-6ff7-4c92-8972-2fb4affbe977\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded secondary schools include city technology colleges and all secondary academies, including all-through academies and free schools.\");",
											"//                 break;",
											"//             case \"128c6153-4937-40da-a99f-e137fc8c41e5\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Special schools include maintained special schools, non-maintained special schools and special academies.  Excludes general hospital schools, independent special schools and independent schools approved for SEN pupils.\");",
											"//                 break;",
											"//             case \"6c06f733-c30b-45e1-980a-b587e923f73b\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
											"//                 break;",
											"//             case \"b678373f-dfa2-41ad-817e-3f011d1b5173\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
											"//                 break;",
											"//             case \"7fabae1a-5cc0-4a1a-861a-3ddd8ec0f7b2\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
											"//                 break;",
											"//             case \"78c78049-22b3-4ec8-bc2a-7f47a6f7c74c\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Pupil enrolments missing 10 percent or more of their own possible sessions (due to authorised or unauthorised absence) are classified as persistent absentees.\");",
											"//                 break;",
											"//             case \"7b18666a-ff4a-43a9-9639-8f324374db0c\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The definition of persistent absence changed from the 2015/16 academic year - The information presented for years prior to 2015/16 has been produced using the same methodology in order to allow users to make comparisons on a consistent basis over time.\");",
											"//                 break;",
											"//             case \"507b05b0-4015-4330-9901-20b47c5b154d\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The persistent absentee rate is the number of persistent absentees expressed as a percentage of the total number of enrolments.\");",
											"//                 break;",
											"//             case \"e03c3b82-75df-4dee-b3ed-dac39378a9b5\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal('See \"Guide to absence statistics\" for more information on how absence and pupil characteristic data have been linked.');",
											"//                 break;",
											"//             case \"96641ff5-d33b-495d-8691-8045c148a595\":",
											"//                 pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Figures for pupils with unclassified or missing characteristics information should be interpreted with caution.\");",
											"//                 break;",
											"//             default:",
											"//                 pm.expect(true).to.equal(false, `Didn't expect this footnote to appear!, id: \"${respJson.subjectMeta.footnotes[i].id}\"`)",
											"//                 break;",
											"//         }",
											"//     }",
											"// });",
											"",
											"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(2); });",
											"",
											"pm.test(\"geographicLevel should be same as request\", function () {",
											"    for(var i = 0; i < respJson.results.length; i++) {",
											"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
											"    }",
											"});",
											"",
											"pm.test(\"First result should have correct fields\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "b077c84c-247f-4124-b30a-2f779e49e8e3",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subjectId\": \"803fbf56-600f-490f-8409-6413a891720d\",\n    \"locations\": {\n    \t\"country\": [\"E92000001\"]\n    },\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2014,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        \"{{1FI_Char__GenderMale}}\", \n        \"{{1FI_Char__GenderFemale}}\",\n        \"{{1FI_SchoolType__Total}}\"\n    ],\n    \"indicators\": [\n    \t\"{{1I_AbsenceFields__UnauthorisedAbsenceRate}}\",\n        \"{{1I_AbsenceFields__OverallAbsenceRate}}\",\n        \"{{1I_AbsenceFields__AuthorisedAbsenceRate}}\",\n        \"{{1I_AbsenceFields__PercentageOfPersistentAbsentees}}\",\n        \"{{1I_AbsenceFields__NumberOfPersistentAbsentees}}\"\n    ]\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/tablebuilder?releaseId=4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"tablebuilder"
									],
									"query": [
										{
											"key": "releaseId",
											"value": "4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Footnotes",
					"item": [
						{
							"name": "Get Footnotes for Absence Release",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ecaa13b2-07f5-4b77-b6d2-b142a437a39c",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6ec4cb09-b99b-4abe-a22d-d954a5887ced",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/release/4FA4FE8E-9A15-46BB-823F-49BF8E0CDEC5",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"release",
										"4FA4FE8E-9A15-46BB-823F-49BF8E0CDEC5"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "a5aaaf13-9611-4bf2-8811-2a2d77e08b1f",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "5df3ecac-88e9-4db6-8724-687ae586d0d7",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Release - Manage Content",
			"item": [
				{
					"name": "Manage Content Page",
					"item": [
						{
							"name": "Get Manage Content Page data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ee4a28e9-d302-477c-a718-c5c99fd3ddf7",
										"exec": [
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Manage Content Page response should include all expected top level items\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    pm.expect(respJson.release).to.exist;",
											"    pm.expect(respJson.availableDataBlocks).to.exist;",
											"});",
											"",
											"",
											"pm.test(\"Release section should contain the correct details\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    const release = respJson.release;",
											"",
											"    pm.expect(release.id).to.equal(\"e7774a74-1f62-4b76-b9b5-84f14dac7278\");",
											"",
											"    pm.expect(release.type.id).to.equal(\"9d333457-9132-4e55-ae78-c55cb3673d7c\");",
											"    pm.expect(release.type.title).to.equal(\"Official Statistics\");",
											"    pm.expect(release.title).to.equal(\"Academic Year 2016/17\");",
											"    pm.expect(release.yearTitle).to.equal(\"2016/17\");",
											"    pm.expect(release.coverageTitle).to.equal(\"Academic Year\");",
											"",
											"    //pm.expect(release.published).to.equal(\"2018-07-19T09:30:00\");",
											"    pm.expect(release.releaseName).to.equal(\"2016\");",
											"    pm.expect(release.slug).to.equal(\"2016-17\");",
											"    pm.expect(release.nextReleaseDate.year).to.equal(\"2019\");",
											"    pm.expect(release.nextReleaseDate.month).to.equal(\"7\");",
											"    pm.expect(release.nextReleaseDate.day).to.equal(\"19\");",
											"",
											"    pm.expect(release.latestRelease).to.be.true;",
											"",
											"    pm.expect(release.updates.length).to.equal(2);",
											"    const releaseNote1 = respJson.release.updates.find(note => note.id === \"4fca874d-98b8-4c79-ad20-d698fb0af7dc\");",
											"    pm.expect(releaseNote1).to.not.be.undefined;",
											"    pm.expect(releaseNote1.reason).to.equal(\"First published.\");",
											"    pm.expect(releaseNote1.on).to.equal(\"2018-07-19T00:00:00\");",
											"",
											"    const releaseNote2 = respJson.release.updates.find(note => note.id === \"33ff3f17-0671-41e9-b404-5661ab8a9476\");",
											"    pm.expect(releaseNote2).to.not.be.undefined;",
											"    pm.expect(releaseNote2.reason).to.equal(\"Updated exclusion rates for Gypsy/Roma pupils, to include extended ethnicity categories within the headcount (Gypsy, Roma and other Gypsy/Roma).\");",
											"    pm.expect(releaseNote2.on).to.equal(\"2018-08-25T00:00:00\");",
											"",
											"    pm.expect(release.publicationId).to.equal(\"bf2b4284-6b84-46b0-aaaa-a2e0a23be2a9\");",
											"    pm.expect(release.publication.id).to.equal(\"bf2b4284-6b84-46b0-aaaa-a2e0a23be2a9\");",
											"    pm.expect(release.publication.title).to.equal(\"Permanent and fixed-period exclusions in England\");",
											"    pm.expect(release.publication.slug).to.equal(\"permanent-and-fixed-period-exclusions-in-england\");",
											"    pm.expect(release.publication.summary).to.equal(\"\");",
											"",
											"    pm.expect(release.publication.legacyReleases.length).to.equal(8);",
											"    pm.expect(release.publication.legacyReleases[0].id).to.equal(\"564dacdc-f58e-4aa0-8dbd-d8368b4fb6ba\");",
											"    pm.expect(release.publication.legacyReleases[0].description).to.equal(\"Academic Year 2015/16\");",
											"    pm.expect(release.publication.legacyReleases[0].url).to.equal(\"https://www.gov.uk/government/statistics/permanent-and-fixed-period-exclusions-in-england-2015-to-2016\");",
											"",
											"    pm.expect(release.publication.topic.theme.title).to.equal(\"Pupils and schools\");",
											"",
											"    pm.expect(release.publication.contact.id).to.equal(\"d246c696-4b3a-4aeb-842c-c1318ee334e8\");",
											"    pm.expect(release.publication.contact.teamName).to.equal(\"School absence and exclusions team\");",
											"    pm.expect(release.publication.contact.teamEmail).to.equal(\"schools.statistics@education.gov.uk\");",
											"    pm.expect(release.publication.contact.contactName).to.equal(\"Sean Gibson\");",
											"    pm.expect(release.publication.contact.contactTelNo).to.equal(\"0370 000 2288\");",
											"",
											"    pm.expect(release.publication.methodology.id).to.equal(\"c8c911e3-39c1-452b-801f-25bb79d1deb7\");",
											"    pm.expect(release.publication.methodology.title).to.equal(\"Pupil exclusion statistics: methodology\");",
											"",
											"    pm.expect(release.content.length).to.equal(9);",
											"",
											"    pm.expect(release.content[0].order).to.equal(1);",
											"    pm.expect(release.content[0].heading).to.equal(\"About this release\");",
											"    pm.expect(release.content[0].caption).to.equal(\"\");",
											"    pm.expect(release.content[0].content[0].body.startsWith(\"The statistics and data cover permanent and fixed period exclusions\")).to.be.true;",
											"});",
											"",
											"pm.test(\"Summary section should contain the correct details\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    const summarySection = respJson.release.summarySection;",
											"",
											"    pm.expect(summarySection.id).to.equal(\"f599c2e2-f215-423a-beab-c5c6a0c2e5a9\");",
											"    pm.expect(summarySection.order).to.equal(1);",
											"    pm.expect(summarySection.heading).to.equal(\"\");",
											"    pm.expect(summarySection.caption).to.equal(\"\");",
											"",
											"    pm.expect(summarySection.content.length).to.equal(1);",
											"    pm.expect(summarySection.content[0].id).to.equal(\"7934e93d-2e11-478d-ab0e-f799f15164bb\");",
											"    pm.expect(summarySection.content[0].type).to.equal(\"MarkDownBlock\");",
											"    pm.expect(summarySection.content[0].body.startsWith(\"Read national statistical summaries, view charts and tables and download data files.\")).to.be.true;",
											"    pm.expect(summarySection.content[0].order).to.equal(1);",
											"});",
											"",
											"pm.test(\"Key Statistics section should contain the correct details\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    const section = respJson.release.keyStatisticsSection;",
											"",
											"    pm.expect(section.id).to.equal(\"991a436a-9c7a-418b-ab06-60f2610b4bc6\");",
											"    pm.expect(section.order).to.equal(1);",
											"    pm.expect(section.heading).to.equal(\"\");",
											"    pm.expect(section.caption).to.equal(\"\");",
											"",
											"    pm.expect(section.content.length).to.equal(3);",
											"",
											"    section.content.forEach((block, index) => {",
											"        pm.expect(block.type).to.equal('DataBlock');",
											"        pm.expect(block.order).to.equal(index + 1);",
											"    })",
											"});",
											"",
											"pm.test(\"Key Statistics secondary section should contain tables and charts included as part of the Key Statistics section\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    const section = respJson.release.keyStatisticsSecondarySection;",
											"",
											"    pm.expect(section.id).to.equal(\"e8a813ce-c68a-417b-af31-91db19377b10\");",
											"    pm.expect(section.order).to.equal(1);",
											"    pm.expect(section.heading).to.equal(\"\");",
											"    pm.expect(section.caption).to.equal(\"\");",
											"",
											"    pm.expect(section.content.length).to.equal(1);",
											"    pm.expect(section.content[0].id).to.equal(\"17a0272b-318d-41f6-bda9-3bd88f78cd3d\");",
											"    pm.expect(section.content[0].type).to.equal(\"DataBlock\");",
											"    pm.expect(section.content[0].order).to.equal(1);",
											"});",
											"",
											"pm.test(\"Headlines section should contain the correct details\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    const headlinesSection = respJson.release.headlinesSection;",
											"",
											"    pm.expect(headlinesSection.id).to.equal(\"601aadcc-be7d-4d3e-9154-c9eb64144692\");",
											"    pm.expect(headlinesSection.order).to.equal(1);",
											"    pm.expect(headlinesSection.heading).to.equal(\"\");",
											"    pm.expect(headlinesSection.caption).to.equal(\"\");",
											"",
											"    pm.expect(headlinesSection.content.length).to.equal(1);",
											"    pm.expect(headlinesSection.content[0].id).to.equal(\"db00f19a-96b7-47c9-84eb-92d6ace41434\");",
											"    pm.expect(headlinesSection.content[0].type).to.equal(\"MarkDownBlock\");",
											"    pm.expect(headlinesSection.content[0].body.startsWith(\"* The rate of permanent exclusions has increased since last year from 0.08 per cent\")).to.be.true;",
											"    pm.expect(headlinesSection.content[0].order).to.equal(1);",
											"});",
											"",
											"pm.test(\"Related Information section should contain the correct details\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    const relatedInformation = respJson.release.relatedInformation;",
											"",
											"    pm.expect(relatedInformation.length).to.equal(2);",
											"",
											"    pm.expect(relatedInformation[0].id).to.equal(\"f3c67bc9-6132-496e-a848-c39dfcd16f49\");",
											"    pm.expect(relatedInformation[0].description).to.equal(\"Additional guidance\");",
											"    pm.expect(relatedInformation[0].url).to.equal(\"http://example.com\");",
											"",
											"    pm.expect(relatedInformation[1].id).to.equal(\"45acb50c-8b21-46b4-989f-36f4b0ee37fb\");",
											"    pm.expect(relatedInformation[1].description).to.equal(\"Statistics guide\");",
											"    pm.expect(relatedInformation[1].url).to.equal(\"http://example.com\");",
											"});",
											"",
											"",
											"pm.test(\"Available Data Blocks section should contain the correct details\", function () {",
											"",
											"    var respJson = pm.response.json();",
											"",
											"    const availableDataBlocks = respJson.availableDataBlocks;",
											"",
											"    pm.expect(availableDataBlocks.length).to.equal(2);",
											"",
											"    pm.expect(availableDataBlocks[0].id).to.equal(\"1869d10a-ca3f-450c-9685-780b11d916f5\");",
											"    pm.expect(availableDataBlocks[0].name).to.equal(\"Available Data Block\");",
											"    pm.expect(availableDataBlocks[0].order).to.equal(0);",
											"",
											"    pm.expect(availableDataBlocks[1].id).to.equal(\"0b4c43cd-fc12-4159-88b9-0c8646424555\");",
											"    pm.expect(availableDataBlocks[1].name).to.equal(\"Available Data Block 2\");",
											"    pm.expect(availableDataBlocks[1].order).to.equal(0);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Content",
					"item": [
						{
							"name": "Content Sections",
							"item": [
								{
									"name": "Get Content Sections",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "73bf9573-c993-4e0a-b433-525357614900",
												"exec": [
													"pm.test(\"Status code is 200\", function () { ",
													"    pm.response.to.have.status(200); ",
													"});",
													"",
													"",
													"pm.test(\"Content Sections should contain the correct information\", function () { ",
													"",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(9);",
													"",
													"    // assert that all of our content sections are coming back with details ",
													"    respJson.forEach(section => {",
													"        pm.expect(section.id).to.not.be.null;",
													"        pm.expect(section.heading).to.not.be.null;",
													"        pm.expect(section.caption).to.not.be.null;",
													"        pm.expect(section.content.length, 'content length should be above zero').to.be.above(0);",
													"    });",
													"",
													"",
													"    // assert that all of our sections are coming back in correct order",
													"    // EES-895",
													"    respJson.forEach((section, index) => {",
													"        pm.expect(section.order).to.equal(index + 1);",
													"        section.content.forEach((block, index) => {",
													"            //pm.expect(block.order).to.equal(index + 1); ",
													"        });",
													"    });",
													"",
													"    // // // assert that the content sections' content blocks are coming back with details",
													"    respJson.forEach(section => {",
													"        section.content.forEach(contentBlock => {",
													"            pm.expect(contentBlock.id).to.not.be.null;",
													"            pm.expect(contentBlock.type).to.not.be.null;",
													"        });",
													"    });",
													"    ",
													"    // // assert that the deliberately blanked out fields are undefined",
													"    respJson.forEach(section => {",
													"        section.content.forEach(contentBlock => {",
													"            pm.expect(contentBlock.contentSection).to.be.undefined;",
													"            pm.expect(contentBlock.contentSectionId).to.be.undefined;",
													"      }); ",
													"    });",
													"    ",
													"    // test a specific content section's content",
													"    pm.expect(respJson[0].id).to.equal(\"b7a968ab-eb49-4100-b133-3d9d94f23d60\");",
													"    pm.expect(respJson[0].order).to.equal(1, 'order should be 1');",
													"    pm.expect(respJson[0].heading).to.equal(\"About this release\");",
													"    pm.expect(respJson[0].caption).to.equal(\"\");",
													"",
													"    // test a MarkDownBlock's content",
													"    pm.expect(respJson[0].content.length).to.equal(1, 'should only be one block');",
													"    pm.expect(respJson[0].content[0].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[0].content[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[0].content[0].body.startsWith(\"The statistics and data cover permanent and fixed period exclusions\")).to.be.true;",
													"    //pm.expect(respJson[0].content[0].order).to.equal(0);",
													"",
													"    // test a DataBlock's content",
													"    pm.expect(respJson[1].content[2].id).to.equal(\"dd572e49-87e3-46f5-bb04-e9008573fc91\");",
													"    pm.expect(respJson[1].content[2].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson[1].content[2].heading).to.equal(\"Chart showing permanent exclusions in England\");",
													"    pm.expect(respJson[1].content[2].dataBlockRequest).to.not.be.null;",
													"    pm.expect(respJson[1].content[2].charts).to.not.be.null;",
													"    pm.expect(respJson[1].content[2].tables).to.not.be.null;",
													"    //pm.expect(respJson[1].content[2].order).to.equal(3);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Content Section Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7eaf3aee-8eb1-4f2e-8b0c-67049110b865",
												"exec": [
													"pm.test(\"Content Sections should be in the expected updated order\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'About this release',",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'Reasons for exclusions',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown',",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Content Blocks",
							"item": [
								{
									"name": "Get Content Section",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "7ed6d5f5-4eaa-4c4e-86d8-76aac00f8662",
												"exec": [
													"pm.test(\"Status code is 200\", function () { ",
													"    pm.response.to.have.status(200); ",
													"});",
													"",
													"pm.test(\"Content Section should contain the correct information\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.id).to.equal(\"b7a968ab-eb49-4100-b133-3d9d94f23d60\");",
													"    pm.expect(respJson.order).to.equal(1);",
													"    pm.expect(respJson.heading).to.equal(\"About this release\");",
													"    pm.expect(respJson.caption).to.equal(\"\");",
													"",
													"    // test a MarkDownBlock's content",
													"    pm.expect(respJson.content.length).to.equal(1);",
													"    pm.expect(respJson.content[0].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson.content[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[0].body.startsWith(\"The statistics and data cover permanent and fixed period exclusions\")).to.be.true;",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Data Blocks",
							"item": [
								{
									"name": "Get Available Data Blocks",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "167fddd0-e741-4501-8a3d-7f644f20d287",
												"exec": [
													"pm.test(\"Status code is 200\", function () { ",
													"    pm.response.to.have.status(200); ",
													"});",
													"",
													"",
													"pm.test(\"There should be two available Data Blocks (that have not yet been included in any Content Section)\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(2);",
													"",
													"    pm.expect(respJson[0].id).to.equal(\"1869d10a-ca3f-450c-9685-780b11d916f5\");",
													"    pm.expect(respJson[0].name).to.equal(\"Available Data Block\");",
													"    pm.expect(respJson[0].order).to.equal(0);",
													"",
													"    pm.expect(respJson[1].id).to.equal(\"0b4c43cd-fc12-4159-88b9-0c8646424555\");",
													"    pm.expect(respJson[1].name).to.equal(\"Available Data Block 2\");",
													"    pm.expect(respJson[1].order).to.equal(0);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/available-datablocks",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"available-datablocks"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Release",
			"item": [
				{
					"name": "Release - Get approved releases",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "43563816-18a7-4d17-b967-a99a6f45fac7",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"",
									"pm.test(\"Should have at least one result\", function () { ",
									"    pm.expect(respJson.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Fields of first result are correct\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]status\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]latestRelease\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]contact\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publishScheduled\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]live\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]amendment\"));",
									"    //pm.expect(pm.response.to.have.jsonBody(\"[0]originalId\"));",
									"    //pm.expect(pm.response.to.have.jsonBody(\"[0]previousVersionId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]nextReleaseDate\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]internalReleaseNote\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]permissions\"));",
									"});",
									"",
									"",
									"pm.test(\"Every result should be status Approved\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        pm.expect(respJson[i].status).to.equal(\"Approved\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "22233e4e-d1c9-4f8b-9b53-2ea63c0563d1",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/releases/scheduled",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"scheduled"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release - Get draft and higherlevelreview releases",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "dd365100-7522-456b-bfb3-da42c3c67c2f",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should have at least one result\", function () { ",
									"    pm.expect(respJson.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Fields of first result are correct\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]status\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]latestRelease\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]contact\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publishScheduled\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]live\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]amendment\"));",
									"    //pm.expect(pm.response.to.have.jsonBody(\"[0]originalId\"));",
									"    //pm.expect(pm.response.to.have.jsonBody(\"[0]previousVersionId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]nextReleaseDate\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]permissions\"));",
									"});",
									"",
									"pm.test(\"Every result should be status Draft or HigherLevelReview\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        pm.expect(respJson[i].status).to.oneOf([\"Draft\", \"HigherLevelReview\"]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "4c1ddcdb-e16b-4c24-a8cb-7a1c46da49ea",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/releases/draft",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"draft"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release summary - Exclusions 2016",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e5606484-a2f9-4efe-b152-677565888fc9",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.value\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.label\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"publishScheduled\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"nextReleaseDate\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"nextReleaseDate.year\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"nextReleaseDate.month\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"nextReleaseDate.day\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"slug\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"status\"));",
									"});",
									"",
									"pm.test(\"Release summary should contain the correct details\", function () { ",
									"    var respJson = pm.response.json();",
									"",
									"    pm.expect(respJson.id).to.equal(\"e7774a74-1f62-4b76-b9b5-84f14dac7278\");",
									"    ",
									"    pm.expect(respJson.type.id).to.equal(\"9d333457-9132-4e55-ae78-c55cb3673d7c\");",
									"    pm.expect(respJson.type.title).to.equal(\"Official Statistics\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b745804a-3af7-4e9a-b3cc-5c8695dd9bde",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/releases/E7774A74-1F62-4B76-B9B5-84F14DAC7278/summary/",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"E7774A74-1F62-4B76-B9B5-84F14DAC7278",
								"summary",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Draft Releases",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c29710a3-0047-4c35-a13d-ce384297179a",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Every result should be status Draft\", function () {",
									"    respJson.every(function (release) {",
									"        pm.expect(release.status).to.oneOf([\"Draft\", \"HigherLevelReview\"]);",
									"    })",
									"});",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    respJson.every(function (release) {",
									"        pm.expect(release).to.have.property(\"id\");",
									"        pm.expect(release).to.have.property(\"status\");",
									"        pm.expect(release).to.have.property(\"latestRelease\");",
									"        pm.expect(release).to.have.property(\"releaseName\");",
									"        pm.expect(release).to.have.property(\"publicationId\");",
									"        pm.expect(release).to.have.property(\"publicationTitle\");",
									"        ",
									"        pm.expect(release).to.have.property(\"timePeriodCoverage\");",
									"        pm.expect(release.timePeriodCoverage).to.have.property(\"value\");",
									"        pm.expect(release.timePeriodCoverage).to.have.property(\"label\");",
									"        ",
									"        pm.expect(release).to.have.property(\"title\");",
									"        ",
									"        pm.expect(release).to.have.property(\"contact\");",
									"        pm.expect(release.contact).to.have.property(\"id\");",
									"        pm.expect(release.contact).to.have.property(\"teamName\");",
									"        pm.expect(release.contact).to.have.property(\"teamEmail\");",
									"        pm.expect(release.contact).to.have.property(\"contactName\");",
									"        pm.expect(release.contact).to.have.property(\"contactTelNo\");",
									"        ",
									"        pm.expect(release).to.have.property(\"publishScheduled\");",
									"        pm.expect(release).to.have.property(\"live\");",
									"        pm.expect(release).to.have.property(\"amendment\");",
									"        ",
									"        //pm.expect(release).to.have.property(\"originalId\");",
									"        //pm.expect(release).to.have.property(\"previousVersionId\");",
									"        ",
									"        pm.expect(release).to.have.property(\"nextReleaseDate\");",
									"        pm.expect(release.nextReleaseDate).to.have.property(\"year\");",
									"        pm.expect(release.nextReleaseDate).to.have.property(\"month\");",
									"        pm.expect(release.nextReleaseDate).to.have.property(\"day\");",
									"        ",
									"        pm.expect(release).to.have.property(\"permissions\");",
									"    })",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a87bc2b1-be35-4e20-af34-676184f5e3d5",
								"exec": [
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"releaseStatus\": \"Draft\",\n\t\"internalReleaseNote\": \"Test Note\"\n}"
						},
						"url": {
							"raw": "{{admin_api_url}}/releases/draft",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"draft"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get data files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "61e16379-5eb9-4410-9139-24dc79be1755",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/data",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ancillary files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "1a2c3751-2b85-4bd8-b3f9-4c7ac419ef90",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"test\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"doc\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/ancillary?name=test",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"ancillary"
							],
							"query": [
								{
									"key": "name",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get chart files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f63fc4c9-9445-4c39-9969-27a828d06d3f",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(1);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[0].name).to.equal(\"test\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"png\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/chart",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"chart"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Release - DataBlock",
			"item": [
				{
					"name": "Get DataBlocks by Release - Permanent and fixed-period exclusions in England",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "6328b4d1-2b18-4cc0-8ccd-12c191239a2a",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]name\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.subjectId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.timePeriod\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.filters\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.indicators\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.country\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.includeGeoJson\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]charts\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]tables\"));",
									"});",
									"",
									"pm.test(\"Number of results should be correct\", function () { ",
									"    pm.expect(respJson.length).to.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "a5cff0fd-00f8-441f-8963-9a1c4c4a7077",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/datablocks/",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"e7774a74-1f62-4b76-b9b5-84f14dac7278",
								"datablocks",
								""
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "d861a680-8478-4df4-ba95-eefb959dd6a6",
				"type": "text/javascript",
				"exec": [
					"// Absence by characteristic",
					"pm.globals.set(\"1F_SchoolType\", \"67a19370-6251-4678-84b3-5d2d379b903b\");",
					"pm.globals.set(\"1FG_SchoolType_Default\", \"4941583b-1f6c-4586-a71f-c144f7298e18\");",
					"pm.globals.set(\"1FI_Char__Total\", \"183f94c3-b5d7-4868-892d-c948e256744d\");",
					"pm.globals.set(\"1FI_Char__GenderMale\", \"eb6013a7-6e69-4ab6-b51e-b7a3e68256ae\");",
					"pm.globals.set(\"1FI_Char__GenderFemale\", \"ab381336-5e81-4caa-9e59-6e9067e8fb04\");",
					"pm.globals.set(\"1FI_SchoolType__Total\", \"cb9b57e8-9965-4cb6-b61a-acc6d34b32be\");",
					"pm.globals.set(\"1FI_SchoolType__StateFundedPrimary\", \"d7e7e412-f462-444f-84ac-3454fa471cb8\");",
					"pm.globals.set(\"1FI_SchoolType__StateFundedSecondary\", \"a9fe9fa6-e91f-460b-a0b1-66877b97c581\");",
					"pm.globals.set(\"1FI_SchoolType__Special\", \"b3207d77-143b-43d5-8b48-32d29727e96f\");",
					"pm.globals.set(\"1FI_Char__FSMEligible\", \"278ce0cb-f1d2-4e8f-84d1-ad794352c925\");",
					"pm.globals.set(\"1FI_Char__FSMNotEligible\", \"bc6e41d5-5078-4207-b0ae-69261ac192e0\");",
					"pm.globals.set(\"1FI_Char__FSMUnclassified\", \"c649015c-8203-43aa-b424-dfb897766391\");",
					"",
					"pm.globals.set(\"1I_AbsenceFields__UnauthorisedAbsenceRate\", \"ccfe716a-6976-4dc3-8fde-a026cd30f3ae\");",
					"pm.globals.set(\"1I_AbsenceFields__OverallAbsenceRate\", \"92d3437a-0a62-4cd7-8dfb-bcceba7eef61\");",
					"pm.globals.set(\"1I_AbsenceFields__AuthorisedAbsenceRate\", \"f9ae4976-7cd3-4718-834a-09349b6eb377\");",
					"pm.globals.set(\"1I_AbsenceFields__PercentageOfPersistentAbsentees\", \"a93b664a-c537-4bb0-8d06-b4ce9bf60ff9\");",
					"pm.globals.set(\"1I_AbsenceFields__NumberOfPersistentAbsentees\", \"5a59cfeb-19e7-486c-906e-f2ad45f896f6\");",
					"pm.globals.set(\"1I_AbsenceForPersistentAbsentees__NumberOfAuthorisedAbsenceSessionsForPersistentAbsentees\", \"71c77c7d-dec5-4c31-baa5-b59f3c8c8f2e\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfUnauthorisedReasonsSessions\", \"a3b1afa4-b3de-44c6-b8b2-0ef59f211a2a\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfUnauthorisedOtherSessions\", \"71761e61-6a80-400f-8778-a8761306eb77\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfNoReasonYetSessions\", \"b4cc7de4-30f3-495b-a967-0d2a9473583f\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfLateSessions\", \"57452cb9-6bda-495a-a012-7fda71e4bf90\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "9f6fa4b4-2c54-47d7-8c0c-e78c85582b64",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}
{
	"info": {
		"_postman_id": "b5260b05-675a-45f3-be2c-bbda6606f321",
		"name": "DfE Admin API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Contacts",
			"item": [
				{
					"name": "Contacts",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2db4ed0b-6eeb-40b6-914f-f1692eb248fb",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].teamName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].teamEmail\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].contactName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].contactTelNo\"));",
									"});",
									"",
									"pm.test(\"School absence and exclusions team details should be correct\", function () { ",
									"    var team = respJson.filter(function(team) { return team.teamName === \"School absence and exclusions team\"});",
									"    pm.expect(team.length).to.equal(1);",
									"    var team = team[0];",
									"    pm.expect(team.teamEmail).to.equal(\"schools.statistics@education.gov.uk\");",
									"    pm.expect(team.contactName).to.equal(\"Mark Pearson\");",
									"    pm.expect(team.contactTelNo).to.equal(\"01142742585\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/contacts",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"contacts"
							]
						},
						"description": "Returns all contacts"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Meta",
			"item": [
				{
					"name": "Time identifiers",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fd44e1ec-7bf1-419d-9a9e-1317325d0595",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Expect the correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].category`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].category.value`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].category.label`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].timeIdentifiers`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].timeIdentifiers[0].identifier`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].timeIdentifiers[0].identifier.value`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].timeIdentifiers[0].identifier.label`));",
									"    }",
									"});",
									"",
									"pm.test(\"Expect AcademicYear results to be correct\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].category.value === \"AcademicYear\") {",
									"            pm.expect(respJson[i].category.label).to.equal(\"Academic year\");",
									"            pm.expect(respJson[i].timeIdentifiers.length).to.equal(13);",
									"            break;",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Expect Month results to be correct\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].category.value === \"Month\") {",
									"            pm.expect(respJson[i].category.label).to.equal(\"Month\");",
									"            pm.expect(respJson[i].timeIdentifiers.length).to.equal(12);",
									"            break;",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/meta/timeidentifiers",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"meta",
								"timeidentifiers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release types",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7a6fd139-bc0d-4c80-96f1-4b6439171c35",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should correct number of results\", function () { pm.expect(respJson.length).to.equal(3); });",
									"",
									"pm.test(\"Results titles should be correct\", function () {",
									"    var foundAdHoc = false;",
									"    var foundNationalStatistics = false;",
									"    var foundOfficialStatistics = false;",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].title === \"Ad Hoc\") { foundAdHoc = true; }",
									"        if(respJson[i].title === \"National Statistics\") { foundNationalStatistics = true; }",
									"        if(respJson[i].title === \"Official Statistics\") { foundOfficialStatistics = true; }",
									"    }",
									"    pm.expect(foundAdHoc).to.equal(true, \"No Ad Hoc type found!\");",
									"    pm.expect(foundNationalStatistics).to.equal(true, \"No National Statistics type found!\")",
									"    pm.expect(foundOfficialStatistics).to.equal(true, \"No Official Statistics type found!\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/meta/releasetypes",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"meta",
								"releasetypes"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Methodologies",
			"item": [
				{
					"name": "Methodologies",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "e472dd85-13ad-411e-bdcc-d5e6e875df7f",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.be.above(2);    ",
									"});",
									"",
									"pm.test(\"Title for Exclusion methodology should be correct\", function () {",
									"    var foundExclusion = false;",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].id === \"c8c911e3-39c1-452b-801f-25bb79d1deb7\") {",
									"            foundExclusion = true;",
									"                pm.expect(respJson[i].title).to.equal(\"Pupil exclusion statistics: methodology\"); ",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/methodologies",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"methodologies"
							]
						}
					},
					"response": []
				},
				{
					"name": "Methodologies for topic - Exclusions",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "372a9979-fd08-4af1-bb4c-5314db6a237b",
								"exec": [
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.be.above(0);    ",
									"});",
									"",
									"pm.test(\"Result should be correct\", function () { ",
									"    pm.expect(pm.response.json()[0].id).to.equal(\"c8c911e3-39c1-452b-801f-25bb79d1deb7\");",
									"    pm.expect(pm.response.json()[0].title).to.equal(\"Pupil exclusion statistics: methodology\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/topic/77941B7D-BBD6-4069-9107-565AF89E2DEC/methodologies",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"topic",
								"77941B7D-BBD6-4069-9107-565AF89E2DEC",
								"methodologies"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Theme",
			"item": [
				{
					"name": "Get my themes",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "2db4ed0b-6eeb-40b6-914f-f1692eb248fb",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { ",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Number of themes should be correct\", function () {",
									"    pm.expect(respJson.length).to.be.above(8);",
									"});",
									"",
									"pm.test(\"First result should have correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0].topics\"));",
									"});",
									"",
									"pm.test(\"Number of topics and fields of first topic under Pupils and schools should be correct\", function () {",
									"    var foundPupilsAndSchools = false;",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].title === \"Pupils and schools\") {",
									"            foundPupilsAndSchools = true;",
									"            pm.expect(respJson[i].topics.length).to.equal(9);",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topics[0].id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topics[0].title`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topics[0].themeId`));",
									"        }",
									"    }",
									"    pm.expect(foundPupilsAndSchools).to.equal(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/me/themes",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"me",
								"themes"
							]
						},
						"description": "Returns all contacts"
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Publication",
			"item": [
				{
					"name": "Get publication - Pupil absence in schools in England",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "50f6efbc-4157-4ec4-b3f2-a7c2cb4abe9e",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Expect correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(`id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`title`));",
									"    pm.expect(pm.response.to.have.jsonBody(`nextUpdate`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases`));",
									"    pm.expect(pm.response.to.have.jsonBody(`methodology`));",
									"    pm.expect(pm.response.to.have.jsonBody(`topicId`));",
									"    pm.expect(pm.response.to.have.jsonBody(`contact`));",
									"});",
									"",
									"pm.test(\"Response id and title should be correct\", function () {",
									"    pm.expect(respJson.id).to.equal(\"cbbd299f-8297-44bc-92ac-558bcf51f8ad\");",
									"    pm.expect(respJson.title).to.equal(\"Pupil absence in schools in England\"); ",
									"});",
									"",
									"",
									"pm.test(\"Methodology title should be correct\", function () {",
									"    pm.expect(respJson.methodology.title).to.equal(\"Pupil absence statistics: methodology\"); ",
									"});",
									"",
									"pm.test(\"Should be at least one release\", function () {",
									"    pm.expect(respJson.releases.length).to.be.above(0); ",
									"});",
									"",
									"pm.test(\"First release should have correct fields\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].title`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].publicationId`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].publicationTitle`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].releaseName`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].coverageTitle`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].yearTitle`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].typeId`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].published`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].timePeriodCoverage`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].timePeriodCoverage.value`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].timePeriodCoverage.label`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].latestRelease`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].type`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].type.id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].type.title`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.id`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.teamName`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.teamEmail`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.contactName`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].contact.contactTelNo`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].status`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].draftComments`));",
									"    pm.expect(pm.response.to.have.jsonBody(`releases[0].higherReviewComments`));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "152c86f6-6905-4366-a08e-4b8a54d6c2ec",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/publications/cbbd299f-8297-44bc-92ac-558bcf51f8ad",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"publications",
								"cbbd299f-8297-44bc-92ac-558bcf51f8ad"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user's topic - Pupil absence",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "7cbd4f1c-cf5e-4b8a-b7ec-c2e479396b3a",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(respJson.length).to.be.above(0);    ",
									"});",
									"",
									"pm.test(\"Response should contain \\\"Pupil absence in schools in England: autumn term\\\"\", function () {",
									"   var foundTitle = false;",
									"   for(var i = 0; i < respJson.length; i++) {",
									"       if(respJson[i].title === \"Pupil absence in schools in England: autumn term\") foundTitle = true;",
									"   }",
									"   pm.expect(foundTitle).to.equal(true);",
									"});",
									"",
									"pm.test(\"Expect latestRelease flag on releases\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        for(var j = 0; j < respJson[i].releases.length; j++) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].releases[${j}].latestRelease`));",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Expect non-null methodology to have correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].methodology != null) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.title`));",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Expect non-null contacts to have correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].contact != null) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.teamName`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.teamEmail`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.contactName`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact.contactTelNo`));            ",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "5c3f3658-a145-40af-9a97-5f9f0e1f241c",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/me/publications?topicId=67C249DE-1CCA-446E-8CCB-DCDAC542F460",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"me",
								"publications"
							],
							"query": [
								{
									"key": "topicId",
									"value": "67C249DE-1CCA-446E-8CCB-DCDAC542F460"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user's topic - School applications",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "aad25515-6076-4a4a-b609-61fe0a986e11",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(respJson.length).to.be.above(0);    ",
									"});",
									"",
									"pm.test(\"Expect the correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].topicId`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].nextUpdate`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].releases`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].contact`));",
									"    }",
									"});",
									"",
									"pm.test(\"First result's title should be correct\", function () { ",
									"    pm.expect(respJson[0].title).to.equal(\"Secondary and primary schools applications and offers\"); ",
									"});",
									"",
									"pm.test(\"Expect latestRelease flag if releases is more than 0\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].releases !== null) {",
									"            for(var j = 0; j < respJson[i].releases.length; j++) {",
									"                 pm.expect(pm.response.to.have.jsonBody(`[${i}].releases[${j}].latestRelease`));",
									"            }",
									"        }",
									"    }",
									"});",
									"",
									"pm.test(\"Expect non-null methodology to have correct fields\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        if(respJson[i].methodology !== null) {",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.id`));",
									"            pm.expect(pm.response.to.have.jsonBody(`[${i}].methodology.title`));",
									"        }",
									"    }",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/me/publications?topicId=1a9636e4-29d5-4c90-8c07-f41db8dd019c",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"me",
								"publications"
							],
							"query": [
								{
									"key": "topicId",
									"value": "1a9636e4-29d5-4c90-8c07-f41db8dd019c"
								}
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Data",
			"item": [
				{
					"name": "Meta",
					"item": [
						{
							"name": "Subject",
							"item": [
								{
									"name": "Subject Meta - Absence by characteristic",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ff0e67a8-97f3-414d-a136-e46252cfbacf",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "483030fb-1db1-4380-99d6-d2fda32e3497",
												"exec": [
													"var respJson = pm.response.json();",
													"",
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"totalValues should be correct\", function () {",
													"    pm.expect(respJson.filters.Characteristic.totalValue).to.equal(pm.globals.get('1F_Char__Total'));",
													"    pm.expect(respJson.filters.SchoolType.totalValue).to.equal(pm.globals.get('1F_SchoolType__Total'));",
													"    pm.expect(respJson.filters.YearBreakdown.totalValue).to.equal(\"\");",
													"});",
													"",
													"pm.test(\"Should be correct number of characteristics\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.Characteristic.options).length).to.equal(10);",
													"});",
													"",
													"pm.test(\"Each characteristic should have correct number\", function () {",
													"    pm.expect(respJson.filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(respJson.filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(19);",
													"    pm.expect(respJson.filters.Characteristic.options.NCYear.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(respJson.filters.Characteristic.options.SENProvision.options.length).to.equal(8);",
													"    pm.expect(respJson.filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(respJson.filters.Characteristic.options.FirstLanguage.options.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(respJson.filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(respJson.timePeriod.options.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(respJson.locations.country.options.length).to.equal(1);",
													"    pm.expect(respJson.locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(respJson.locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(respJson.indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(respJson.indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(respJson.indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{admin_api_url}}/data/meta/subject/1",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"data",
												"meta",
												"subject",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Subject Meta - Filter SubjectId 1",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "08c7178b-9b71-4fb9-8c3e-9770e6d90e49",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.Characteristic\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"filters.SchoolType\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceFields\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceByReason\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"indicators.AbsenceForPersistentAbsentees\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.country\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthority\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"locations.localAuthorityDistrict\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.hint\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.legend\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"timePeriod.options\"));",
													"});",
													"",
													"pm.test(\"Number of characteristic options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.Characteristic.options).length).to.equal(10);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Total.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.Gender.options.length).to.equal(2);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMajor.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.EthnicGroupMinor.options.length).to.equal(19);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.NCYear.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSM.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FSMEver6.options.length).to.equal(3);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENProvision.options.length).to.equal(8);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.SENPrimaryNeed.options.length).to.equal(14);",
													"    pm.expect(pm.response.json().filters.Characteristic.options.FirstLanguage.options.length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of school type default options should be correct\", function () { ",
													"    pm.expect(Object.keys(pm.response.json().filters.SchoolType.options.Default.options).length).to.equal(4);",
													"});",
													"",
													"pm.test(\"Number of time periods options should be correct\", function() {",
													"    pm.expect(pm.response.json().timePeriod.options.length).to.equal(5); ",
													"});",
													"",
													"pm.test(\"Number of location options should be correct\", function() {",
													"    pm.expect(pm.response.json().locations.country.options.length).to.equal(1);",
													"    pm.expect(pm.response.json().locations.localAuthority.options.length).to.equal(152);",
													"    pm.expect(pm.response.json().locations.localAuthorityDistrict.options.length).to.equal(326);",
													"});",
													"",
													"pm.test(\"Expect indicators to have correct properties\", function () {",
													"    pm.expect(pm.response.json().indicators.AbsenceFields.options.length).to.equal(10);",
													"    pm.expect(pm.response.json().indicators.AbsenceByReason.options.length).to.equal(16);",
													"    pm.expect(pm.response.json().indicators.AbsenceForPersistentAbsentees.options.length).to.equal(7);",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"id": "6db8370e-6078-4279-94d7-438d85a476f7",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tsubjectId: 1\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/data/meta/subject",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"data",
												"meta",
												"subject"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Release",
							"item": [
								{
									"name": "Release Meta - Pupil absence in schools in England",
									"event": [
										{
											"listen": "prerequest",
											"script": {
												"id": "ff0e67a8-97f3-414d-a136-e46252cfbacf",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "test",
											"script": {
												"id": "ac4b1f03-19f2-44f5-b80f-840e78849333",
												"exec": [
													"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
													"",
													"pm.test(\"Fields are present\", function () {",
													"    pm.expect(pm.response.to.have.jsonBody(\"releaseId\"));",
													"    pm.expect(pm.response.to.have.jsonBody(\"subjects\"));",
													"});",
													"",
													"pm.test(\"Release id matches the release requested\", function () { pm.expect(pm.response.json().releaseId).to.equal(\"4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5\"); });",
													"",
													"pm.test(\"Number of subjects should be correct\", function () {",
													"    pm.expect(pm.response.json().subjects.length).to.be.above(6);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{admin_api_url}}/data/meta/release/4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"data",
												"meta",
												"release",
												"4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Tablebuilder",
					"item": [
						{
							"name": "Tablebuilder - Absence by characteristic - England - Male, Female",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "be43473c-e6d5-4af2-bd3b-69ab2f3c948c",
										"exec": [
											"respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.footnotes\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.publicationName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.subjectName\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"subjectMeta.timePeriodRange\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results\"));",
											"});",
											"",
											"// EES-756",
											"if(pm.environment.get('env') === \"local\") {",
											"pm.test(\"Validate footnotes\", function () {",
											"    pm.expect(respJson.subjectMeta.footnotes.length).to.be.above(0);",
											"    //pm.expect(respJson.subjectMeta.footnotes.length).to.equal(12); // Uncomment when id 10 appears!",
											"    for(var i = 0; i < respJson.subjectMeta.footnotes.length; i++) {",
											"        switch(respJson.subjectMeta.footnotes[i].id) {",
											"            case 1:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded primary schools include all primary academies, including free schools.\");",
											"                break;",
											"            case 2:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"State-funded secondary schools include city technology colleges and all secondary academies, including all-through academies and free schools.\");",
											"                break;",
											"            case 3:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Special schools include maintained special schools, non-maintained special schools and special academies.  Excludes general hospital schools, independent special schools and independent schools approved for SEN pupils.\");",
											"                break;",
											"            case 4:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Totals may not appear to equal the sum of component parts because numbers have been rounded to the nearest 5.\");",
											"                break;",
											"            case 5:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"x - 1 or 2 enrolments, or a percentage based on 1 or 2 enrolments.\");",
											"                break;",
											"            case 6:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"There may be discrepancies between totals and the sum of constituent parts  as national and regional totals and totals across school types have been rounded to the nearest 5.\");",
											"                break;",
											"            case 7:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Absence rates are the number of absence sessions expressed as a percentage of the total number of possible sessions.\");",
											"                break;",
											"            case 8:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Pupil enrolments missing 10 percent or more of their own possible sessions (due to authorised or unauthorised absence) are classified as persistent absentees.\");",
											"                break;",
											"            case 9:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The definition of persistent absence changed from the 2015/16 academic year - The information presented for years prior to 2015/16 has been produced using the same methodology in order to allow users to make comparisons on a consistent basis over time.\");",
											"                break;",
											"            case 10:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"The persistent absentee rate is the number of persistent absentees expressed as a percentage of the total number of enrolments.\");",
											"                break;",
											"            case 15:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal('See \"Guide to absence statistics\" for more information on how absence and pupil characteristic data have been linked.');",
											"                break;",
											"            case 16:",
											"                pm.expect(respJson.subjectMeta.footnotes[i].label).to.equal(\"Figures for pupils with unclassified or missing characteristics information should be interpreted with caution.\");",
											"                break;",
											"            default:",
											"                pm.expect(true).to.equal(false, `Didn't expect this footnote to appear!, id: \"${respJson.subjectMeta.footnotes[i].id}\"`)",
											"                break;",
											"        }",
											"    }",
											"});",
											"}",
											"",
											"pm.test(\"Number of results should be correct\", function () { pm.expect(respJson.results.length).to.equal(8); });",
											"",
											"pm.test(\"geographicLevel should be same as request\", function () {",
											"    for(var i = 0; i < respJson.results.length; i++) {",
											"        pm.expect(respJson.results[i].geographicLevel).to.equal(\"Country\");",
											"    }",
											"});",
											"",
											"pm.test(\"First result should have correct fields\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].geographicLevel\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].location\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].measures\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"results[0].timePeriod\"));",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "462e277e-a7ce-4584-b95d-89ed1786d5f5",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subjectId\": 1,\n    \"country\": [\n    \t\"E92000001\"\n    ],\n    \"timePeriod\": {\n    \t\"startYear\": 2014,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2014,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        {{1F_Char__GenderMale}}, \n        {{1F_Char__GenderFemale}}\n    ],\n    \"indicators\": [\n    \t{{1I_AbsenceFields__UnauthorisedAbsenceRate}}, \n        {{1I_AbsenceFields__OverallAbsenceRate}}, \n        {{1I_AbsenceFields__AuthorisedAbsenceRate}},\n        {{1I_AbsenceFields__PercentageOfPersistentAbsentees}},\n        {{1I_AbsenceFields__NumberOfPersistentAbsentees}}\n    ]\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/tablebuilder?releaseId=4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"tablebuilder"
									],
									"query": [
										{
											"key": "releaseId",
											"value": "4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Data",
					"item": [
						{
							"name": "Data - Absence by characteristic - Adur (LAD) + Wandsworth (LA)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Should have correct fields\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"metaData\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"metaData.filters\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"metaData.indicators\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"metaData.locations\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"result\"));",
											"});",
											"",
											"pm.test(\"Number of metaData filters should be correct\", function () {",
											"    pm.expect(Object.keys(respJson.metaData.filters).length).to.equal(3);",
											"    pm.expect(respJson.metaData.filters.Characteristic.options.FSM.options.length).to.equal(3);",
											"    pm.expect(respJson.metaData.filters.YearBreakdown.options.Default.options.length).to.equal(1);",
											"    pm.expect(respJson.metaData.filters.SchoolType.options.Default.options.length).to.equal(4);",
											"});",
											"",
											"pm.test(\"Number of metaData indicators should be correct\", function () {",
											"   pm.expect(Object.keys(respJson.metaData.indicators).length).to.equal(5); ",
											"});",
											"",
											"pm.test(\"Number of metaData locations should be correct\", function () {",
											"   pm.expect(Object.keys(respJson.metaData.locations).length).to.equal(2);",
											"   pm.expect(pm.response.to.have.jsonBody(\"metaData.locations.E09000032\")); // LA Wandsworth",
											"   pm.expect(pm.response.to.have.jsonBody(\"metaData.locations.E07000223\")); // LAD Adur",
											"});",
											"",
											"pm.test(\"Number of results should be correct\", function () { ",
											"    pm.expect(respJson.result.length).to.equal(35); // LA 24 + LAD 11",
											"});",
											"",
											"pm.test(\"All results should have correction geographicLevel\", function () {",
											"    for(var i = 0; i < pm.response.json().result.length; i++) {",
											"        pm.expect(respJson.result[i].geographicLevel).to.satisfy(function(geoLevel) {",
											"           return geoLevel === \"LocalAuthority\" || geoLevel === \"LocalAuthorityDistrict\"; ",
											"        });",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"subjectId\": 1,\n    \"localAuthority\": [\"E09000032\"],\n    \"localAuthorityDistrict\": [\"E07000223\"],\n    \"timePeriod\": {\n    \t\"startYear\": 2015,\n    \t\"startCode\": \"AY\",\n    \t\"endYear\": 2016,\n    \t\"endCode\": \"AY\"\n    },\n    \"filters\" : [\n        {{1F_Char__FSMEligible}}, \n        {{1F_Char__FSMNotEligible}}, \n        {{1F_Char__FSMUnclassified}}\n    ],\n    \"indicators\": [\n    \t{{1I_AbsenceForPersistentAbsentees__NumberOfAuthorisedAbsenceSessionsForPersistentAbsentees}},\n    \t{{1I_AbsenceByReason__NumberOfUnauthorisedReasonsSessions}},\n    \t{{1I_AbsenceByReason__NumberOfUnauthorisedOtherSessions}},\n    \t{{1I_AbsenceByReason__NumberOfNoReasonYetSessions}},\n    \t{{1I_AbsenceByReason__NumberOfLateSessions}}\n    ]\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/data?releaseId=4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"data"
									],
									"query": [
										{
											"key": "releaseId",
											"value": "4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5"
										}
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Footnotes",
					"item": [
						{
							"name": "Create Footnote for Subjects",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"// NOTE: Save the footnote id for use in the next request",
											"pm.globals.set(\"footnote_for_subjects_id\", respJson.id);",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"content\"));",
											"});",
											"",
											"pm.test(\"content should should be correct\", function () { ",
											"    pm.expect(respJson.content).to.equal(\"Postman test footnote\"); ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Postman test footnote\",\n    \"indicators\": [],\n    \"filters\": [],\n    \"filterGroups\": [],\n    \"filterItems\": [],\n    \"subjects\": [1,2]\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/footnote",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Footnote for Subjects",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/{{footnote_for_subjects_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"{{footnote_for_subjects_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Footnote for Indicators",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"// NOTE: Save the footnote id for use in the next request",
											"pm.globals.set(\"footnote_for_indicators_id\", respJson.id);",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"content\"));",
											"});",
											"",
											"pm.test(\"content should should be correct\", function () { ",
											"    pm.expect(respJson.content).to.equal(\"Postman test footnote\"); ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Postman test footnote\",\n    \"indicators\": [\n    \t{{1I_AbsenceFields__UnauthorisedAbsenceRate}},\n    \t{{1I_AbsenceFields__AuthorisedAbsenceRate}}\n    ],\n    \"filters\": [],\n    \"filterGroups\": [],\n    \"filterItems\": [],\n    \"subjects\": []\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/footnote",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Footnote for Indicators",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/{{footnote_for_indicators_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"{{footnote_for_indicators_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Footnote for Filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"// NOTE: Save the footnote id for use in the next request",
											"pm.globals.set(\"footnote_for_filters_id\", respJson.id);",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"content\"));",
											"});",
											"",
											"pm.test(\"content should should be correct\", function () { ",
											"    pm.expect(respJson.content).to.equal(\"Postman test footnote\"); ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Postman test footnote\",\n    \"indicators\": [\n    \t{{1I_AbsenceFields__UnauthorisedAbsenceRate}},\n    \t{{1I_AbsenceFields__AuthorisedAbsenceRate}}\n    ],\n    \"filters\": [\n    \t{{1FILT_SchoolType}}\n    \t],\n    \"filterGroups\": [],\n    \"filterItems\": [],\n    \"subjects\": []\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/footnote",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Footnote for Filters",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/{{footnote_for_filters_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"{{footnote_for_filters_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Footnote for Filter Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"// NOTE: Save the footnote id for use in the next request",
											"pm.globals.set(\"footnote_for_filter_groups_id\", respJson.id);",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"content\"));",
											"});",
											"",
											"pm.test(\"content should should be correct\", function () { ",
											"    pm.expect(respJson.content).to.equal(\"Postman test footnote\"); ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Postman test footnote\",\n    \"indicators\": [\n    \t{{1I_AbsenceFields__UnauthorisedAbsenceRate}},\n    \t{{1I_AbsenceFields__AuthorisedAbsenceRate}}\n    ],\n    \"filters\": [],\n    \"filterGroups\": [\n    \t{{1FG_SchoolType_Default}}\n    \t],\n    \"filterItems\": [],\n    \"subjects\": []\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/footnote",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Footnote for Filter Groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/{{footnote_for_filter_groups_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"{{footnote_for_filter_groups_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Footnote for Filter Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"// NOTE: Save the footnote id for use in the next request",
											"pm.globals.set(\"footnote_for_filter_items_id\", respJson.id);",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"content\"));",
											"});",
											"",
											"pm.test(\"content should should be correct\", function () { ",
											"    pm.expect(respJson.content).to.equal(\"Postman test footnote\"); ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Postman test footnote\",\n    \"indicators\": [\n    \t{{1I_AbsenceFields__UnauthorisedAbsenceRate}},\n    \t{{1I_AbsenceFields__AuthorisedAbsenceRate}}\n    ],\n    \"filters\": [],\n    \"filterGroups\": [],\n    \"filterItems\": [\n    \t{{1F_SchoolType__Total}}\n    ],\n    \"subjects\": []\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/footnote",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Footnote Filter Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
											"",
											"pm.test(\"Fields are present\", function () {",
											"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
											"    pm.expect(pm.response.to.have.jsonBody(\"content\"));",
											"});",
											"",
											"pm.test(\"id should match request id\", function () {",
											"    pm.expect(respJson.id).to.equal(pm.globals.get(\"footnote_for_filter_items_id\"));",
											"});",
											"",
											"pm.test(\"content should should be correct\", function () { ",
											"    pm.expect(respJson.content).to.equal(\"Postman test footnote - Updated\"); ",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"Postman test footnote - Updated\",\n    \"indicators\": [\n    \t{{1I_AbsenceFields__OverallAbsenceRate}}\n    ],\n    \"filters\": [],\n    \"filterGroups\": [],\n    \"filterItems\": [\n    \t{{1F_SchoolType__StateFundedPrimary}},\n    \t{{1F_SchoolType__StateFundedSecondary}},\n    \t{{1F_SchoolType__Special}}\n    ],\n    \"subjects\": []\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/{{footnote_for_filter_items_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"{{footnote_for_filter_items_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Footnote for Filter Items",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/{{footnote_for_filter_items_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"{{footnote_for_filter_items_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Footnote invalid id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/99999",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"99999"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Footnotes for Absence Release",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{admin_api_url}}/data/footnote/release/4FA4FE8E-9A15-46BB-823F-49BF8E0CDEC5",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"data",
										"footnote",
										"release",
										"4FA4FE8E-9A15-46BB-823F-49BF8E0CDEC5"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "7f3d3acc-0493-419e-87a1-f9de87f052c0",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ca57d5a3-d2ae-4438-8c91-32ab3e2f592d",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Import",
			"item": [
				{
					"name": "Import Status - Absence by characteristic",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"/*",
									"// EES-644",
									"pm.test(\"Status should be complete\", function () {",
									"    pm.expect(respJson.status).to.equal(\"COMPLETE\");",
									"    pm.expect(respJson.percentageComplete).to.equal(100);",
									"});",
									"*/",
									"",
									"pm.test(\"There should be no errors\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"errors\", \"\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5/data/absence_by_characteristic.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"4fa4fe8e-9a15-46bb-823f-49bf8e0cdec5",
								"data",
								"absence_by_characteristic.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Import Status - invalid release id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Status should be not found\", function () {",
									"    pm.expect(respJson.status).to.equal(\"NOT_FOUND\");",
									"});",
									"",
									"pm.test(\"Percentage complete should be zero\", function () {",
									"    pm.expect(respJson.percentageComplete).to.equal(0);",
									"});",
									"",
									"pm.test(\"There should be no errors field\", function () {",
									"pm.expect(pm.response.to.not.have.jsonBody(\"errors\"));",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/228f8aaf-e438-4155-8912-983943a88989/data/expected_not_found.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"228f8aaf-e438-4155-8912-983943a88989",
								"data",
								"expected_not_found.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Manage Content",
			"item": [
				{
					"name": "Manage Content Page",
					"item": [
						{
							"name": "Add Release Note",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 201\", function () { ",
											"    pm.response.to.have.status(201); ",
											"});",
											"",
											"pm.test(\"Release Notes array contains values\", function () {",
											"    pm.expect(respJson.length).to.be.above(0);",
											"});",
											"",
											"pm.test(\"Latest Release Note entry should contain the correct details\", function () { ",
											"    const lastItem = respJson[respJson.length - 1];",
											"    pm.expect(lastItem.id).to.not.be.empty;",
											"    pm.expect(lastItem.id).to.not.equal(\"00000000-0000-0000-0000-000000000000\");",
											"    pm.expect(lastItem.on).to.not.be.empty;",
											"    pm.expect(lastItem.reason).to.equal(\"Update from Postman\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"releaseNote\": \"Update from Postman\"\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/release-note",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content",
										"release-note"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Manage Content Page data",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3dfada25-01f0-4827-ab23-863bd3e10da9",
										"exec": [
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Manage Content Page response should include all expected top level items\", function () {",
											"    ",
											"    var respJson = pm.response.json();",
											"",
											"    pm.expect(respJson.release).to.exist;",
											"});",
											"",
											"// EES-754",
											"if(pm.environment.get('env') === 'local') {",
											"pm.test(\"Release section should contain the correct details\", function () { ",
											"    ",
											"    var respJson = pm.response.json();",
											"",
											"    const release = respJson.release;",
											"    ",
											"    pm.expect(release.id).to.equal(\"e7774a74-1f62-4b76-b9b5-84f14dac7278\");",
											"    ",
											"    pm.expect(release.type.id).to.equal(\"9d333457-9132-4e55-ae78-c55cb3673d7c\");",
											"    pm.expect(release.type.title).to.equal(\"Official Statistics\");",
											"    ",
											"    pm.expect(release.yearTitle).to.equal(\"2016/17\");",
											"    pm.expect(release.coverageTitle).to.equal(\"Academic Year\");",
											"    ",
											"    pm.expect(release.published).to.equal(\"2018-07-19T00:00:00\");",
											"    pm.expect(release.releaseName).to.equal(\"2016\");",
											"    pm.expect(release.slug).to.equal(\"2016-17\");",
											"    ",
											"    pm.expect(release.latestRelease).to.be.true;",
											"    ",
											"    pm.expect(release.updates.length).to.equal(2);    ",
											"    pm.expect(release.updates[0].id).to.equal(\"df18b1f6-9f24-4e87-9275-31a0c78b1dad\");",
											"    pm.expect(release.updates[0].reason).to.equal(\"Release note 1\");",
											"    pm.expect(release.updates[0].on).to.equal(\"2019-06-02T00:00:00\");",
											"    ",
											"    pm.expect(release.updates[1].id).to.equal(\"c9948cde-01ce-4315-87af-eaa6cd7c6879\");",
											"    pm.expect(release.updates[1].reason).to.equal(\"Release note 2\");",
											"    pm.expect(release.updates[1].on).to.equal(\"2019-08-10T00:00:00\");",
											"",
											"    pm.expect(release.publicationId).to.equal(\"bf2b4284-6b84-46b0-aaaa-a2e0a23be2a9\");",
											"    pm.expect(release.publication.id).to.equal(\"bf2b4284-6b84-46b0-aaaa-a2e0a23be2a9\");",
											"    pm.expect(release.publication.title).to.equal(\"Permanent and fixed-period exclusions in England\");",
											"    pm.expect(release.publication.slug).to.equal(\"permanent-and-fixed-period-exclusions-in-england\");",
											"    pm.expect(release.publication.summary).to.equal(\"\");",
											"    pm.expect(release.publication.nextUpdate).to.equal(\"2019-07-19T00:00:00\");",
											"    ",
											"    // TODO add some data so we can pull back some alternative releases",
											"    pm.expect(release.publication.releases.length).to.equal(0);",
											"    ",
											"    pm.expect(release.publication.legacyReleases.length).to.equal(8);",
											"    pm.expect(release.publication.legacyReleases[0].id).to.equal(\"08134c1d-8a58-49a4-8d8b-22e586ffd5ae\");",
											"    pm.expect(release.publication.legacyReleases[0].description).to.equal(\"2008 to 2009\");",
											"    pm.expect(release.publication.legacyReleases[0].url).to.equal(\"https://www.gov.uk/government/statistics/permanent-and-fixed-period-exclusions-in-england-academic-year-2008-to-2009\");",
											"    ",
											"    pm.expect(release.publication.topic.theme.title).to.equal(\"Pupils and schools\");",
											"   ",
											"    pm.expect(release.publication.contact.id).to.equal(\"d246c696-4b3a-4aeb-842c-c1318ee334e8\");",
											"    pm.expect(release.publication.contact.teamName).to.equal(\"School absence and exclusions team\");",
											"    pm.expect(release.publication.contact.teamEmail).to.equal(\"schools.statistics@education.gov.uk\");",
											"    pm.expect(release.publication.contact.contactName).to.equal(\"Mark Pearson\");",
											"    pm.expect(release.publication.contact.contactTelNo).to.equal(\"01142742585\");",
											"    ",
											"    pm.expect(release.publication.methodology.id).to.equal(\"c8c911e3-39c1-452b-801f-25bb79d1deb7\");",
											"    pm.expect(release.publication.methodology.title).to.equal(\"Pupil exclusion statistics: methodology\");",
											"    ",
											"    pm.expect(release.content.length).to.equal(9);",
											"    ",
											"    pm.expect(release.content[0].order).to.equal(1);",
											"    pm.expect(release.content[0].heading).to.equal(\"About this release\");",
											"    pm.expect(release.content[0].caption).to.equal(\"\");",
											"    pm.expect(release.content[0].content[0].body.startsWith(\"The statistics and data cover permanent and fixed period exclusions\")).to.be.true;",
											"});",
											"}",
											"",
											"pm.test(\"Summary section should contain the correct details\", function () { ",
											"    ",
											"    var respJson = pm.response.json();",
											"",
											"    const summarySection = respJson.release.summarySection;",
											"    ",
											"    pm.expect(summarySection.id).to.equal(\"f599c2e2-f215-423a-beab-c5c6a0c2e5a9\");",
											"    pm.expect(summarySection.order).to.equal(1);",
											"    pm.expect(summarySection.heading).to.equal(\"\");",
											"    pm.expect(summarySection.caption).to.equal(\"\");",
											"",
											"    pm.expect(summarySection.content.length).to.equal(1);",
											"    pm.expect(summarySection.content[0].id).to.equal(\"7934e93d-2e11-478d-ab0e-f799f15164bb\");",
											"    pm.expect(summarySection.content[0].type).to.equal(\"MarkDownBlock\");",
											"    pm.expect(summarySection.content[0].body.startsWith(\"Read national statistical summaries, view charts and tables and download data files.\")).to.be.true;",
											"    pm.expect(summarySection.content[0].order).to.equal(1);",
											"});",
											"",
											"pm.test(\"Key Statistics section should contain the correct details\", function () { ",
											"    ",
											"    var respJson = pm.response.json();",
											"",
											"    const section = respJson.release.keyStatisticsSection;",
											"    ",
											"    pm.expect(section.id).to.equal(\"991a436a-9c7a-418b-ab06-60f2610b4bc6\");",
											"    pm.expect(section.order).to.equal(1);",
											"    pm.expect(section.heading).to.equal(\"\");",
											"    pm.expect(section.caption).to.equal(\"\");",
											"",
											"    pm.expect(section.content.length).to.equal(3);",
											"    ",
											"    section.content.forEach((block, index) => {",
											"        pm.expect(block.type).to.equal('DataBlock');",
											"        pm.expect(block.order).to.equal(index + 1);",
											"    })",
											"});",
											"",
											"pm.test(\"Key Statistics secondary section should contain tables and charts included as part of the Key Statistics section\", function () { ",
											"    ",
											"    var respJson = pm.response.json();",
											"",
											"    const section = respJson.release.keyStatisticsSecondarySection;",
											"    ",
											"    pm.expect(section.id).to.equal(\"e8a813ce-c68a-417b-af31-91db19377b10\");",
											"    pm.expect(section.order).to.equal(1);",
											"    pm.expect(section.heading).to.equal(\"\");",
											"    pm.expect(section.caption).to.equal(\"\");",
											"",
											"    pm.expect(section.content.length).to.equal(1);",
											"    pm.expect(section.content[0].id).to.equal(\"17a0272b-318d-41f6-bda9-3bd88f78cd3d\");",
											"    pm.expect(section.content[0].type).to.equal(\"DataBlock\");",
											"    pm.expect(section.content[0].order).to.equal(1);",
											"});",
											"",
											"pm.test(\"Headlines section should contain the correct details\", function () { ",
											"    ",
											"    var respJson = pm.response.json();",
											"",
											"    const headlinesSection = respJson.release.headlinesSection;",
											"    ",
											"    pm.expect(headlinesSection.id).to.equal(\"601aadcc-be7d-4d3e-9154-c9eb64144692\");",
											"    pm.expect(headlinesSection.order).to.equal(1);",
											"    pm.expect(headlinesSection.heading).to.equal(\"\");",
											"    pm.expect(headlinesSection.caption).to.equal(\"\");",
											"",
											"    pm.expect(headlinesSection.content.length).to.equal(1);",
											"    pm.expect(headlinesSection.content[0].id).to.equal(\"db00f19a-96b7-47c9-84eb-92d6ace41434\");",
											"    pm.expect(headlinesSection.content[0].type).to.equal(\"MarkDownBlock\");",
											"    pm.expect(headlinesSection.content[0].body.startsWith(\"* majority of applicants received a preferred offer\")).to.be.true;",
											"    pm.expect(headlinesSection.content[0].order).to.equal(1);",
											"});",
											"",
											"pm.test(\"Related Information section should contain the correct details\", function () { ",
											"    ",
											"    var respJson = pm.response.json();",
											"",
											"    const relatedInformation = respJson.release.relatedInformation;",
											"    ",
											"    pm.expect(relatedInformation.length).to.equal(2);",
											"    ",
											"    pm.expect(relatedInformation[0].id).to.equal(\"f3c67bc9-6132-496e-a848-c39dfcd16f49\");",
											"    pm.expect(relatedInformation[0].description).to.equal(\"Additional guidance\");",
											"    pm.expect(relatedInformation[0].url).to.equal(\"http://example.com\");",
											"    ",
											"    pm.expect(relatedInformation[1].id).to.equal(\"45acb50c-8b21-46b4-989f-36f4b0ee37fb\");",
											"    pm.expect(relatedInformation[1].description).to.equal(\"Statistics guide\");",
											"    pm.expect(relatedInformation[1].url).to.equal(\"http://example.com\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Related Information",
					"item": [
						{
							"name": "Add Related Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 201\", function () { ",
											"    pm.response.to.have.status(201); ",
											"});",
											"",
											"pm.test(\"Related Information array contains values\", function () {",
											"    pm.expect(respJson.length).to.be.above(0);",
											"});",
											"",
											"pm.test(\"Latest Related Information entry should contain the correct details\", function () { ",
											"    const lastItem = respJson[respJson.length - 1];",
											"    pm.expect(lastItem.description).to.equal(\"Related Information 1\");",
											"    pm.expect(lastItem.url).to.equal(\"http://example.com/1\");",
											"    pm.expect(lastItem.id).to.not.be.empty;",
											"    pm.expect(lastItem.id).to.not.equal(\"00000000-0000-0000-0000-000000000000\");",
											"});",
											"",
											"pm.test(\"Store variables for upcoming tests\", function () { ",
											"    const lastItem = respJson[respJson.length - 1];",
											"    pm.environment.set(\"latest_related_information_id\", lastItem.id);",
											"    pm.environment.set(\"number_of_related_information_items\", respJson.length);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/1\",\n    \"description\": \"Related Information 1\",\n}"
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/related-information",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content",
										"related-information"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Related Information entry added",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Related Information array contains values\", function () {",
											"    pm.expect(respJson.length).to.equal(pm.environment.get(\"number_of_related_information_items\"));",
											"});",
											"",
											"pm.test(\"Latest Related Information entry should contain the latest details\", function () { ",
											"    const lastItem = respJson[respJson.length - 1];",
											"    pm.expect(lastItem.description).to.equal(\"Related Information 1\");",
											"    pm.expect(lastItem.url).to.equal(\"http://example.com/1\");",
											"    pm.expect(lastItem.id).to.equal(pm.environment.get(\"latest_related_information_id\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/related-information",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content",
										"related-information"
									]
								}
							},
							"response": []
						},
						{
							"name": "Edit Related Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Related Information array contains values\", function () {",
											"    pm.expect(respJson.length).to.equal(pm.environment.get(\"number_of_related_information_items\"));",
											"});",
											"",
											"pm.test(\"Latest Related Information entry should contain the updated details\", function () { ",
											"    const lastItem = respJson[respJson.length - 1];",
											"    pm.expect(lastItem.description).to.equal(\"Related Information updated\");",
											"    pm.expect(lastItem.url).to.equal(\"http://example.com/updated\");",
											"    pm.expect(lastItem.id).to.equal(pm.environment.get(\"latest_related_information_id\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"url\": \"http://example.com/updated\",\n    \"description\": \"Related Information updated\"\n}\n"
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/related-information/{{latest_related_information_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content",
										"related-information",
										"{{latest_related_information_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Related Information entry updated",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Related Information array contains values\", function () {",
											"    pm.expect(respJson.length).to.equal(pm.environment.get(\"number_of_related_information_items\"));",
											"});",
											"",
											"pm.test(\"Latest Related Information entry should contain the latest details\", function () { ",
											"    const lastItem = respJson[respJson.length - 1];",
											"    pm.expect(lastItem.description).to.equal(\"Related Information updated\");",
											"    pm.expect(lastItem.url).to.equal(\"http://example.com/updated\");",
											"    pm.expect(lastItem.id).to.equal(pm.environment.get(\"latest_related_information_id\"));",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/related-information",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content",
										"related-information"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Related Information",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Related Information array contains one less value than before\", function () {",
											"    pm.expect(respJson.length).to.equal(pm.environment.get(\"number_of_related_information_items\") - 1);",
											"});",
											"",
											"pm.test(\"Related Information array should no longer contain the deleted item\", function () { ",
											"    pm.expect(respJson.some(item => item.id === pm.environment.get(\"latest_related_information_id\"))).to.be.false;",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/related-information/{{latest_related_information_id}}",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content",
										"related-information",
										"{{latest_related_information_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Verify Related Information entry deleted",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
										"exec": [
											"var respJson = pm.response.json();",
											"",
											"pm.test(\"Status code is 200\", function () { ",
											"    pm.response.to.have.status(200); ",
											"});",
											"",
											"pm.test(\"Related Information array contains one less value than before\", function () {",
											"    pm.expect(respJson.length).to.equal(pm.environment.get(\"number_of_related_information_items\") - 1);",
											"});",
											"",
											"pm.test(\"Related Information array should no longer contain the deleted item\", function () { ",
											"    pm.expect(respJson.some(item => item.id === pm.environment.get(\"latest_related_information_id\"))).to.be.false;",
											"});",
											"",
											"pm.test(\"Unset variables\", function () {",
											"    pm.environment.unset(\"latest_related_information_id\");",
											"    pm.environment.unset(\"number_of_related_information_items\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/related-information",
									"host": [
										"{{admin_api_url}}"
									],
									"path": [
										"release",
										"e7774a74-1f62-4b76-b9b5-84f14dac7278",
										"content",
										"related-information"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "Content",
					"item": [
						{
							"name": "Content Sections",
							"item": [
								{
									"name": "Get Content Sections",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Status code is 200\", function () { ",
													"    pm.response.to.have.status(200); ",
													"});",
													"",
													"",
													"pm.test(\"Content Sections should contain the correct information\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(9);",
													"",
													"    // assert that all of our content sections are coming back with details ",
													"    respJson.forEach(section => {",
													"        pm.expect(section.id).to.not.be.null;",
													"        pm.expect(section.heading).to.not.be.null;",
													"        pm.expect(section.caption).to.not.be.null;",
													"        pm.expect(section.content.length).to.be.above(0);",
													"    });",
													"    ",
													"    // assert that all of our sections are coming back in correct order",
													"    respJson.forEach((section, index) => {",
													"        pm.expect(section.order).to.equal(index + 1);",
													"    });",
													"    ",
													"    // assert that the content sections' content blocks are coming back with details",
													"    respJson.forEach(section => {",
													"        section.content.forEach(contentBlock => {",
													"            pm.expect(contentBlock.id).to.not.be.null;",
													"            pm.expect(contentBlock.type).to.not.be.null;",
													"        }); ",
													"    });",
													"    ",
													"    // assert that the deliberately blanked out fields are undefined",
													"    respJson.forEach(section => {",
													"        section.content.forEach(contentBlock => {",
													"            pm.expect(contentBlock.contentSection).to.be.undefined;",
													"            pm.expect(contentBlock.contentSectionId).to.be.undefined;",
													"       }); ",
													"    });",
													"    ",
													"    // test a specific content section's content",
													"    pm.expect(respJson[0].id).to.equal(\"b7a968ab-eb49-4100-b133-3d9d94f23d60\");",
													"    pm.expect(respJson[0].order).to.equal(1);",
													"    pm.expect(respJson[0].heading).to.equal(\"About this release\");",
													"    pm.expect(respJson[0].caption).to.equal(\"\");",
													"",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {  ",
													"    // test a MarkDownBlock's content",
													"    pm.expect(respJson[0].content.length).to.equal(1);",
													"    pm.expect(respJson[0].content[0].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[0].content[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[0].content[0].body.startsWith(\"The statistics and data cover permanent and fixed period exclusions\")).to.be.true;",
													"    pm.expect(respJson[0].content[0].order).to.equal(1);",
													"",
													"    // test a DataBlock's content",
													"    pm.expect(respJson[1].content[2].id).to.equal(\"dd572e49-87e3-46f5-bb04-e9008573fc91\");",
													"    pm.expect(respJson[1].content[2].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson[1].content[2].heading).to.equal(\"Chart showing permanent exclusions in England\");",
													"    pm.expect(respJson[1].content[2].dataBlockRequest).to.not.be.null;",
													"    pm.expect(respJson[1].content[2].charts).to.not.be.null;",
													"    pm.expect(respJson[1].content[2].tables).to.not.be.null;",
													"    pm.expect(respJson[1].content[2].order).to.equal(3);",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Content Section",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New Content Section should be present\", function () { ",
													"",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.id).to.not.be.null;",
													"    pm.expect(respJson.heading).to.equal('New section');",
													"    pm.expect(respJson.order).to.equal(2);",
													"});",
													"",
													"pm.test(\"Store environment variables\", function() {",
													"    pm.environment.set(\"added_content_section_id\", pm.response.json().id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\torder: 2\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections/add",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify new Content Section added",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New Content Section should be in the last position of the Content Section list\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'About this release',",
													"        'New section',",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'Reasons for exclusions',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown'",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Content Section Order",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Sections should be in the expected updated order\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'About this release',",
													"        'New section',",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'Reasons for exclusions',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown'",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update Content Section heading",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Section should have an updated heading\", function () { ",
													"    const respJson = pm.response.json();",
													"    pm.expect(respJson.heading).to.equal('Updated heading');",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\theading: 'Updated heading'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/{{added_content_section_id}}/heading",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"{{added_content_section_id}}",
												"heading"
											]
										}
									},
									"response": []
								},
								{
									"name": "Reorder Content Sections",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Sections should be in the expected starting order\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'About this release',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Reasons for exclusions',",
													"        'Updated heading',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown',",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{    \n\t'b7a968ab-eb49-4100-b133-3d9d94f23d60': 4,\n    '6ed87fd1-81a5-46dc-8841-4598bdae7fee': 1,\n    '7981db34-afdb-4f84-99e8-bfd43e58f16d': 2,\n    '50e7ca4c-e6c7-4ccd-afc1-93ee4298f358': 3,\n    '015d0cdd-6630-4b57-9ef3-7341fc3d573e': 7,\n    '5600ca55-6800-418a-94a5-2f3c3310304e': 5,\n    '68f8b290-4b7c-4cac-b0d9-0263609c341b': 6,\n    '5708d443-7669-47d8-b6a3-6ad851090710': 9,\n    '3960ab94-0fad-442c-8aaa-6233eff3bc32': 10,\n    '{{added_content_section_id}}': 8,\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections/order",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections",
												"order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Content Sections Order updated",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Sections should be in the expected updated order\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'About this release',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Reasons for exclusions',",
													"        'Updated heading',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown',",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore Content Sections order",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Sections should be in the expected starting order\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'About this release',",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'Reasons for exclusions',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Updated heading',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown',",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{    \n\t'b7a968ab-eb49-4100-b133-3d9d94f23d60': 1,\n    '6ed87fd1-81a5-46dc-8841-4598bdae7fee': 2,\n    '7981db34-afdb-4f84-99e8-bfd43e58f16d': 3,\n    '50e7ca4c-e6c7-4ccd-afc1-93ee4298f358': 4,\n    '015d0cdd-6630-4b57-9ef3-7341fc3d573e': 5,\n    '5600ca55-6800-418a-94a5-2f3c3310304e': 6,\n    '68f8b290-4b7c-4cac-b0d9-0263609c341b': 7,\n    '{{added_content_section_id}}': 8, \n    '5708d443-7669-47d8-b6a3-6ad851090710': 9,\n    '3960ab94-0fad-442c-8aaa-6233eff3bc32': 10,\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections/order",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections",
												"order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Content Section",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New Content Section should be removed\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'About this release',",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'Reasons for exclusions',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown',",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/{{added_content_section_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"{{added_content_section_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Content Section Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Status code is 200\", function () { ",
													"    pm.response.to.have.status(200); ",
													"});",
													"",
													"",
													"pm.test(\"Content Section should contain the correct information\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.id).to.equal(\"b7a968ab-eb49-4100-b133-3d9d94f23d60\");",
													"    pm.expect(respJson.order).to.equal(1);",
													"    pm.expect(respJson.heading).to.equal(\"About this release\");",
													"    pm.expect(respJson.caption).to.equal(\"\");",
													"",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    // test a MarkDownBlock's content",
													"    pm.expect(respJson.content.length).to.equal(1);",
													"    pm.expect(respJson.content[0].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson.content[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[0].body.startsWith(\"The statistics and data cover permanent and fixed period exclusions\")).to.be.true;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Content Section removed",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Sections should be in the expected updated order\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'About this release',",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'Reasons for exclusions',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown',",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"    pm.expect(respJson.map(section => section.order)).to.eql([1, 2, 3, 4, 5, 6, 7, 8, 9]);",
													"});",
													"",
													"pm.test(\"Unset variables\", function () {",
													"    pm.environment.unset(\"added_content_section_id\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Content Section without specifying order",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New Content Section should be present\", function () { ",
													"",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.id).to.not.be.null;",
													"    pm.expect(respJson.heading).to.equal('New section');",
													"    pm.expect(respJson.order).to.equal(10);",
													"});",
													"",
													"pm.test(\"Store environment variables for following tests\", function() {",
													"   pm.environment.set(\"added_content_section_without_order_id\", pm.response.json().id); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/sections/add",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"sections",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove Content Section added without order specified",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New Content Section should be removed\", function () { ",
													"",
													"    const expectedOrder = [",
													"        'About this release',",
													"        'Permanent exclusions',",
													"        'Fixed-period exclusions',",
													"        'Number and length of fixed-period exclusions',",
													"        'Reasons for exclusions',",
													"        'Exclusions by pupil characteristics',",
													"        'Independent exclusion reviews',",
													"        'Pupil referral units exclusions',",
													"        'Regional and local authority (LA) breakdown'",
													"    ];",
													"    ",
													"    const respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.map(section => section.heading)).to.eql(expectedOrder);",
													"});",
													"",
													"pm.test(\"Remove temporary environment variables\", function() {",
													"   pm.environment.unset(\"added_content_section_without_order_id\"); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/{{added_content_section_without_order_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"{{added_content_section_without_order_id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						},
						{
							"name": "Content Blocks",
							"item": [
								{
									"name": "Get Content Section",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Status code is 200\", function () { ",
													"    pm.response.to.have.status(200); ",
													"});",
													"",
													"pm.test(\"Content Section should contain the correct information\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.id).to.equal(\"b7a968ab-eb49-4100-b133-3d9d94f23d60\");",
													"    pm.expect(respJson.order).to.equal(1);",
													"    pm.expect(respJson.heading).to.equal(\"About this release\");",
													"    pm.expect(respJson.caption).to.equal(\"\");",
													"",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    // test a MarkDownBlock's content",
													"    pm.expect(respJson.content.length).to.equal(1);",
													"    pm.expect(respJson.content[0].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson.content[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[0].body.startsWith(\"The statistics and data cover permanent and fixed period exclusions\")).to.be.true;",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add HTML Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New HTMLBlock should be present\", function () { ",
													"",
													"    const respJson = pm.response.json();",
													"",
													"    // assert new block details",
													"    pm.expect(respJson.id).to.not.be.null;",
													"    pm.expect(respJson.order).to.equal(1);",
													"    pm.expect(respJson.type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson.content).to.be.undefined;",
													"    ",
													"    // assert that deliberately excluded fields are not present",
													"    pm.expect(respJson.contentSection).to.be.undefined;",
													"    pm.expect(respJson.contentSectionId).to.be.undefined;",
													"});",
													"",
													"pm.test(\"Store variables for upcoming tests\", function () {",
													"    ",
													"    pm.environment.set(\"added_html_block_id\", pm.response.json().id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \n\torder: 1,\n\ttype: 'HtmlBlock'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/blocks/add",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"blocks",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add MarkDown Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New MarkDownBlock should be present\", function () { ",
													"",
													"    const respJson = pm.response.json();",
													"",
													"    // assert new block details",
													"    pm.expect(respJson.id).to.not.be.null;",
													"    pm.expect(respJson.order).to.equal(1);",
													"    pm.expect(respJson.type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content).to.be.undefined;",
													"    ",
													"    // assert that deliberately excluded fields are not present",
													"    pm.expect(respJson.contentSection).to.be.undefined;",
													"    pm.expect(respJson.contentSectionId).to.be.undefined;",
													"});",
													"",
													"pm.test(\"Store variables for upcoming tests\", function () {",
													"    ",
													"    pm.environment.set(\"added_markdown_block_id\", pm.response.json().id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \n\torder: 1,\n\ttype: 'MarkDownBlock'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/blocks/add",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"blocks",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add InsetText Block (in the middle)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New MarkDownBlock should be present\", function () { ",
													"",
													"    const respJson = pm.response.json();",
													"",
													"    // assert new block details",
													"    pm.expect(respJson.id).to.not.be.null;",
													"    pm.expect(respJson.order).to.equal(2);",
													"    pm.expect(respJson.type).to.equal(\"InsetTextBlock\");",
													"    pm.expect(respJson.content).to.be.undefined;",
													"    ",
													"    // assert that deliberately excluded fields are not present",
													"    pm.expect(respJson.contentSection).to.be.undefined;",
													"    pm.expect(respJson.contentSectionId).to.be.undefined;",
													"});",
													"",
													"pm.test(\"Store variables for upcoming tests\", function () {",
													"    ",
													"    pm.environment.set(\"added_inset_text_block_id\", pm.response.json().id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \n\torder: 2,\n\ttype: 'InsetTextBlock'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/blocks/add",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"blocks",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add Data Block (without specifying order)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"New DataBlock should be present\", function () { ",
													"",
													"    const respJson = pm.response.json();",
													"",
													"    // assert new block details",
													"    pm.expect(respJson.id).to.not.be.null;",
													"    pm.expect(respJson.order).to.equal(5);",
													"    pm.expect(respJson.type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson.content).to.be.undefined;",
													"    ",
													"    // assert that deliberately excluded fields are not present",
													"    pm.expect(respJson.contentSection).to.be.undefined;",
													"    pm.expect(respJson.contentSectionId).to.be.undefined;",
													"});",
													"",
													"pm.test(\"Store variables for upcoming tests\", function () {",
													"    ",
													"    pm.environment.set(\"added_data_block_id\", pm.response.json().id);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{ \n\ttype: 'DataBlock'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/blocks/add",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"blocks",
												"add"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Content Blocks added",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Section should contain the 4 newly added Content Blocks\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.content.length).to.equal(5);",
													"    ",
													"    pm.expect(respJson.content[0].id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson.content[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[0].order).to.equal(1);",
													"",
													"    pm.expect(respJson.content[1].id).to.equal(pm.environment.get(\"added_inset_text_block_id\"));",
													"    pm.expect(respJson.content[1].type).to.equal(\"InsetTextBlock\");",
													"    pm.expect(respJson.content[1].order).to.equal(2);",
													"    ",
													"    pm.expect(respJson.content[2].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson.content[2].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson.content[2].order).to.equal(3);",
													"",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    pm.expect(respJson.content[3].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson.content[3].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[3].order).to.equal(4);",
													"    }",
													"  ",
													"    pm.expect(respJson.content[4].id).to.equal(pm.environment.get(\"added_data_block_id\"));",
													"    pm.expect(respJson.content[4].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson.content[4].order).to.equal(5);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update HTML Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"The HTML Block should show the updated details\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"    ",
													"    pm.expect(respJson.id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson.type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson.order).to.equal(3);",
													"    pm.expect(respJson.body).to.equal(\"<h1>Update!></h1><p>This is the new body for the HTML Block.<p>\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tbody: '<h1>Update!></h1><p>This is the new body for the HTML Block.<p>'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/block/{{added_html_block_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"block",
												"{{added_html_block_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update MarkDown Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"The MarkDown Block should show the updated details\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"    ",
													"    pm.expect(respJson.id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson.type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.order).to.equal(1);",
													"    pm.expect(respJson.body).to.equal(\"*Update!*\\n\\nThis is the new body for the _MarkDown Block._\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\tbody: '*Update!*\\n\\nThis is the new body for the _MarkDown Block._'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/block/{{added_markdown_block_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"block",
												"{{added_markdown_block_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update InsetText Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"The Inset Text Block should show the updated details\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"    ",
													"    pm.expect(respJson.id).to.equal(pm.environment.get(\"added_inset_text_block_id\"));",
													"    pm.expect(respJson.type).to.equal(\"InsetTextBlock\");",
													"    pm.expect(respJson.order).to.equal(2);",
													"    pm.expect(respJson.heading).to.equal(\"Update!\");",
													"    pm.expect(respJson.body).to.equal(\"This is the new body for the Inset Text Block.\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n\theading: 'Update!',\n\tbody: 'This is the new body for the Inset Text Block.'\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/block/{{added_inset_text_block_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"block",
												"{{added_inset_text_block_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Content Blocks updated",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Content Section should contain the updated Content Block details\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.content.length).to.equal(5);",
													"    ",
													"    pm.expect(respJson.content[0].id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson.content[0].body).to.equal(\"*Update!*\\n\\nThis is the new body for the _MarkDown Block._\");",
													"    ",
													"    pm.expect(respJson.content[1].id).to.equal(pm.environment.get(\"added_inset_text_block_id\"));",
													"    pm.expect(respJson.content[1].heading).to.equal(\"Update!\");",
													"    pm.expect(respJson.content[1].body).to.equal(\"This is the new body for the Inset Text Block.\");",
													"    ",
													"    pm.expect(respJson.content[2].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson.content[2].body).to.equal(\"<h1>Update!></h1><p>This is the new body for the HTML Block.<p>\");",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60"
											]
										}
									},
									"response": []
								},
								{
									"name": "Reorder Content Blocks",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"// EES-754",
													"if(pm.environment.get('env') === 'local') {",
													"pm.test(\"Content Blocks should be in the newly specified order\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(5);",
													"    ",
													"    pm.expect(respJson[0].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson[0].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson[0].order).to.equal(1);",
													"    ",
													"    pm.expect(respJson[1].id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson[1].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[1].order).to.equal(2);",
													"",
													"    pm.expect(respJson[2].id).to.equal(pm.environment.get(\"added_inset_text_block_id\"));",
													"    pm.expect(respJson[2].type).to.equal(\"InsetTextBlock\");",
													"    pm.expect(respJson[2].order).to.equal(3);",
													"    ",
													"    pm.expect(respJson[3].id).to.equal(pm.environment.get(\"added_data_block_id\"));",
													"    pm.expect(respJson[3].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson[3].order).to.equal(4);",
													"    ",
													"    pm.expect(respJson[4].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[4].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[4].order).to.equal(5);",
													"});",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{    \n\t'{{added_html_block_id}}': 1,\n\t'{{added_markdown_block_id}}': 2,\n\t'{{added_inset_text_block_id}}': 3,\n\t'{{added_data_block_id}}': 4,\n\t'97d414f4-1a27-4ed7-85ea-c4c903e1d8cb': 5,\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/blocks/order",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"blocks",
												"order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify Content Blocks order updated",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"// EES-754",
													"if(pm.environment.get('env') === 'local') {",
													"pm.test(\"Content Blocks should be in the newly specified order\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.content.length).to.equal(5);",
													"    ",
													"    pm.expect(respJson.content[0].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson.content[0].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson.content[0].order).to.equal(1);",
													"    ",
													"    pm.expect(respJson.content[1].id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson.content[1].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[1].order).to.equal(2);",
													"",
													"    pm.expect(respJson.content[2].id).to.equal(pm.environment.get(\"added_inset_text_block_id\"));",
													"    pm.expect(respJson.content[2].type).to.equal(\"InsetTextBlock\");",
													"    pm.expect(respJson.content[2].order).to.equal(3);",
													"    ",
													"    pm.expect(respJson.content[3].id).to.equal(pm.environment.get(\"added_data_block_id\"));",
													"    pm.expect(respJson.content[3].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson.content[3].order).to.equal(4);",
													"    ",
													"    pm.expect(respJson.content[4].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson.content[4].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[4].order).to.equal(5);",
													"});",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{    \n\t'{{added_html_block_id}}': 1,\n\t'{{added_html_block_id}}': 2,\n\t'{{added_html_block_id}}': 3,\n\t'{{added_html_block_id}}': 4,\n\t'97d414f4-1a27-4ed7-85ea-c4c903e1d8cb': 5,\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60"
											]
										}
									},
									"response": []
								},
								{
									"name": "Restore Content Blocks order",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"// EES-754",
													"if(pm.environment.get('env') === 'local') {",
													"pm.test(\"Content Blocks should be in previous order again\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(5);",
													"    ",
													"    pm.expect(respJson[0].id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[0].order).to.equal(1);",
													"",
													"    pm.expect(respJson[1].id).to.equal(pm.environment.get(\"added_inset_text_block_id\"));",
													"    pm.expect(respJson[1].type).to.equal(\"InsetTextBlock\");",
													"    pm.expect(respJson[1].order).to.equal(2);",
													"    ",
													"    pm.expect(respJson[2].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson[2].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson[2].order).to.equal(3);",
													"    ",
													"    pm.expect(respJson[3].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[3].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[3].order).to.equal(4);",
													"    ",
													"    pm.expect(respJson[4].id).to.equal(pm.environment.get(\"added_data_block_id\"));",
													"    pm.expect(respJson[4].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson[4].order).to.equal(5);",
													"});",
													"}"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{    \n\t'{{added_markdown_block_id}}': 1,\n\t'{{added_inset_text_block_id}}': 2,\n\t'{{added_html_block_id}}': 3,\n\t'97d414f4-1a27-4ed7-85ea-c4c903e1d8cb': 4,\n\t'{{added_data_block_id}}': 5,\n}"
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/blocks/order",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"blocks",
												"order"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete InsetText Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"InsetText Block should be deleted\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(4);",
													"    ",
													"    pm.expect(respJson[0].id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[0].order).to.equal(1);",
													"",
													"    pm.expect(respJson[1].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson[1].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson[1].order).to.equal(2);",
													"    ",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    pm.expect(respJson[2].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[2].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[2].order).to.equal(3);",
													"    }",
													"    ",
													"    pm.expect(respJson[3].id).to.equal(pm.environment.get(\"added_data_block_id\"));",
													"    pm.expect(respJson[3].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson[3].order).to.equal(4);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/block/{{added_inset_text_block_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"block",
												"{{added_inset_text_block_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Verify InsetText Block deleted",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"InsetText Block should be deleted\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.content.length).to.equal(4);",
													"    ",
													"    pm.expect(respJson.content[0].id).to.equal(pm.environment.get(\"added_markdown_block_id\"));",
													"    pm.expect(respJson.content[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[0].order).to.equal(1);",
													"",
													"    pm.expect(respJson.content[1].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson.content[1].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson.content[1].order).to.equal(2);",
													"    ",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    pm.expect(respJson.content[2].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson.content[2].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson.content[2].order).to.equal(3);",
													"    }",
													"    ",
													"    pm.expect(respJson.content[3].id).to.equal(pm.environment.get(\"added_data_block_id\"));",
													"    pm.expect(respJson.content[3].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson.content[3].order).to.equal(4);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete MarkDown Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"MarkDown Block should be deleted\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(3);",
													"    ",
													"    pm.expect(respJson[0].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson[0].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson[0].order).to.equal(1);",
													"    ",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    pm.expect(respJson[1].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[1].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[1].order).to.equal(2);",
													"    }",
													"    ",
													"    pm.expect(respJson[2].id).to.equal(pm.environment.get(\"added_data_block_id\"));",
													"    pm.expect(respJson[2].type).to.equal(\"DataBlock\");",
													"    pm.expect(respJson[2].order).to.equal(3);",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/block/{{added_markdown_block_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"block",
												"{{added_markdown_block_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Data Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"Data Block should be deleted\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(2);",
													"    ",
													"    pm.expect(respJson[0].id).to.equal(pm.environment.get(\"added_html_block_id\"));",
													"    pm.expect(respJson[0].type).to.equal(\"HtmlBlock\");",
													"    pm.expect(respJson[0].order).to.equal(1);",
													"    ",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    pm.expect(respJson[1].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[1].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[1].order).to.equal(2);",
													"    }",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/block/{{added_data_block_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"block",
												"{{added_data_block_id}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete HTML Block",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "854b75f6-cbce-4351-a37f-1e73f657c407",
												"exec": [
													"pm.test(\"HTML Block should be deleted\", function () { ",
													"",
													"    var respJson = pm.response.json();",
													"",
													"    pm.expect(respJson.length).to.equal(1);",
													"    ",
													"    // EES-754",
													"    if(pm.environment.get('env') === 'local') {",
													"    pm.expect(respJson[0].id).to.equal(\"97d414f4-1a27-4ed7-85ea-c4c903e1d8cb\");",
													"    pm.expect(respJson[0].type).to.equal(\"MarkDownBlock\");",
													"    pm.expect(respJson[0].order).to.equal(1);",
													"    }",
													"});",
													"",
													"pm.test(\"Remove temporary environment variables\", function() {",
													"   pm.environment.unset(\"added_html_block_id\"); ",
													"   pm.environment.unset(\"added_markdown_block_id\"); ",
													"   pm.environment.unset(\"added_inset_text_block_id\"); ",
													"   pm.environment.unset(\"added_data_block_id\"); ",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/content/section/b7a968ab-eb49-4100-b133-3d9d94f23d60/block/{{added_html_block_id}}",
											"host": [
												"{{admin_api_url}}"
											],
											"path": [
												"release",
												"e7774a74-1f62-4b76-b9b5-84f14dac7278",
												"content",
												"section",
												"b7a968ab-eb49-4100-b133-3d9d94f23d60",
												"block",
												"{{added_html_block_id}}"
											]
										}
									},
									"response": []
								}
							],
							"protocolProfileBehavior": {},
							"_postman_isSubFolder": true
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Release",
			"item": [
				{
					"name": "Release - Get approved releases",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c06ee174-3e90-44b8-b9a8-32283e7dde7c",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"/* EES-292",
									"pm.test(\"Should have at least one result\", function () { ",
									"    pm.expect(respJson.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Fields of first result are correct\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]coverageTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]yearTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]typeId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]nextReleaseDate\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publishScheduled\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]latestRelease\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]type\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]contact\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]status\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]internalReleaseNote\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]draftComments\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]higherReviewComments\"));",
									"});",
									"*/",
									"",
									"pm.test(\"Every result should be status Approved\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        pm.expect(respJson[i].status).to.equal(\"Approved\");",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dbde4b62-47dd-4c3d-93dc-5e01ec3f8231",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/releases/scheduled",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"scheduled"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release - Get draft and higherlevelreview releases",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c06ee174-3e90-44b8-b9a8-32283e7dde7c",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should have at least one result\", function () { ",
									"    pm.expect(respJson.length).to.above(0);",
									"});",
									"",
									"pm.test(\"Fields of first result are correct\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]publicationTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]coverageTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]yearTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]typeId\"));",
									"    // EES-292",
									"    //pm.expect(pm.response.to.have.jsonBody(\"[0]nextReleaseDate\"));",
									"    //pm.expect(pm.response.to.have.jsonBody(\"[0]publishScheduled\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]latestRelease\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]type\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]status\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]draftComments\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[0]higherReviewComments\"));",
									"});",
									"",
									"pm.test(\"Every result should be status Draft or HigherLevelReview\", function () {",
									"    for(var i = 0; i < respJson.length; i++) {",
									"        pm.expect(respJson[i].status).to.oneOf([\"Draft\", \"HigherLevelReview\"]);",
									"    }",
									"});",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dbde4b62-47dd-4c3d-93dc-5e01ec3f8231",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/releases/draft",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"draft"
							]
						}
					},
					"response": []
				},
				{
					"name": "Release summary - Exclusions 2016",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c06ee174-3e90-44b8-b9a8-32283e7dde7c",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.value\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.label\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"slug\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"status\"));",
									"});",
									"",
									"pm.test(\"id should match release summary id (rather than release id)\", function () {",
									"    pm.expect(respJson.id).to.equal(\"06c45b1e-533d-4c95-900b-62beb4620f59\");",
									"});",
									"",
									"pm.test(\"type.id should should be correct\", function () { ",
									"    pm.expect(respJson.type.id).to.equal(\"9d333457-9132-4e55-ae78-c55cb3673d7c\"); ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dbde4b62-47dd-4c3d-93dc-5e01ec3f8231",
								"exec": [
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/releases/E7774A74-1F62-4B76-B9B5-84F14DAC7278/summary/",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"E7774A74-1F62-4B76-B9B5-84F14DAC7278",
								"summary",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Release Status - Exclusions 2016",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c06ee174-3e90-44b8-b9a8-32283e7dde7c",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.value\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.label\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"slug\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"status\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"internalReleaseNote\"));",
									"});",
									"",
									"pm.test(\"Status and Internal Release Note should be correct\", function () { ",
									"   pm.expect(respJson.status).to.equal(\"Approved\");",
									"   pm.expect(respJson.internalReleaseNote).to.equal(\"Test Note\");",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dbde4b62-47dd-4c3d-93dc-5e01ec3f8231",
								"exec": [
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"releaseStatus\": \"Approved\",\n\t\"internalReleaseNote\": \"Test Note\"\n}"
						},
						"url": {
							"raw": "{{admin_api_url}}/releases/E7774A74-1F62-4B76-B9B5-84F14DAC7278/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"E7774A74-1F62-4B76-B9B5-84F14DAC7278",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Draft Releases",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c06ee174-3e90-44b8-b9a8-32283e7dde7c",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"type.title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.value\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage.label\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"slug\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"status\"));",
									"});",
									"",
									"pm.test(\"id should match request id\", function () {",
									"    pm.expect(respJson.id).to.equal(\"e7774a74-1f62-4b76-b9b5-84f14dac7278\");",
									"});",
									"",
									"pm.test(\"type.id should should be correct\", function () { ",
									"    pm.expect(respJson.type.id).to.equal(\"9d333457-9132-4e55-ae78-c55cb3673d7c\"); ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dbde4b62-47dd-4c3d-93dc-5e01ec3f8231",
								"exec": [
									"postman.setNextRequest(null);"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"releaseStatus\": \"Draft\",\n\t\"internalReleaseNote\": \"Test Note\"\n}"
						},
						"url": {
							"raw": "{{admin_api_url}}/releases/draft",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"releases",
								"draft"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new publication",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "256d11e0-8766-43c9-a53c-477b764c85dc",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b4d0e5b-d1e9-4e6a-af9e-514f3c3ad225",
								"exec": [
									"// NOTE(mark): Changed title to not be unique so new publication isn't created each test run.",
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"nextUpdate\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"releases\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"methodology\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"topicId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"contact\"));",
									"});",
									"",
									"pm.test(\"topicId should should be correct\", function () { ",
									"    pm.expect(pm.response.json().topicId).to.equal(\"53a1fbb7-5234-435f-892b-9baad4c82535\"); ",
									"});",
									"",
									"pm.test(\"teamName should should be correct\", function () { ",
									"    pm.expect(pm.response.json().contact.teamName).to.equal(\"Simon's Team\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"b84e5120-7ee2-4d4e-ac0c-b6e6a42ee22c\",\n\t\"methodologyId\": \"\",\n\t\"contactId\": \"11BB7387-E85E-4571-9669-8A760DCB004F\"\n}"
						},
						"url": {
							"raw": "{{admin_api_url}}/topic/53A1FBB7-5234-435F-892B-9BAAD4C82535/publications",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"topic",
								"53A1FBB7-5234-435F-892B-9BAAD4C82535",
								"publications"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create new release",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "98057100-77fb-42b7-9c21-f1d4921917ab",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"title\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"releaseName\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"coverageTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"yearTitle\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"published\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"timePeriodCoverage\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"latestRelease\"));",
									"});",
									"",
									"pm.test(\"Title should should be correct\", function () { ",
									"    pm.expect(pm.response.json().title).to.equal(\"Academic Year 2014/15\");",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "53582e6e-2f99-4426-bbac-814e65969e32",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"PublicationId\": \"8b12776b-3d36-4475-8115-00974d7de1d0\",\n    \"ReleaseTypeId\": \"1821abb8-68b0-431b-9770-0bea65d02ff0\",\n    \"TypeId\": \"1821ABB8-68B0-431B-9770-0BEA65D02FF0\",\n    \"TimeIdentifier\": 62,\n    \"PublishScheduled\": \"0001-01-01T00:00:00\",\n    \"NextReleaseExpected\": {\n        \"Year\": \"2018\",\n        \"Month\": \"01\",\n        \"Day\": \"01\"\n    },\n    \"ReleaseName\": \"2014\",\n    \"TemplateReleaseId\": \"63227211-7CB3-408C-B5C2-40D3D7CB2717\"\n}"
						},
						"url": {
							"raw": "{{admin_api_url}}/publications/C52BDD2A-B38E-46F9-88AB-19968E328C46/releases",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"publications",
								"C52BDD2A-B38E-46F9-88AB-19968E328C46",
								"releases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/my_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/my_metafile.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/data?name=testName",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "testName"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get data files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "313f3538-ad70-44ec-aed5-3d9286545bf0",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/data",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete data file",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "https://localhost:5001/api/release/85d43d6f-ec91-452d-aba2-03303ab4363a/data/my_file.csv",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "5001",
							"path": [
								"api",
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"data",
								"my_file.csv"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload ancillary file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "4d2d835f-99c3-4df4-adfd-af5b6c678672",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"test\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"doc\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/ancillary.doc"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/ancillary?name=test",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"ancillary"
							],
							"query": [
								{
									"key": "name",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get ancillary files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "06d9ef58-8beb-4ec6-aac6-18ddc1a3c9e4",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"test\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"doc\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/ancillary?name=test",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"ancillary"
							],
							"query": [
								{
									"key": "name",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete ancillary file",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/ancillary/ancillary.doc",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"ancillary",
								"ancillary.doc"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload chart file",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c3aa6c3a-7405-4b53-9fce-ab1d75b4e2da",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(1);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[0].name).to.equal(\"test\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"png\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/chart.png"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/chart?name=test",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"chart"
							],
							"query": [
								{
									"key": "name",
									"value": "test"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get chart files",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "0e8a7e3f-244d-43aa-a936-4238169dcd82",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(1);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[0].name).to.equal(\"test\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"png\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/chart",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"chart"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete chart file",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{admin_api_url}}/release/85d43d6f-ec91-452d-aba2-03303ab4363a/chart/chart.png",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"85d43d6f-ec91-452d-aba2-03303ab4363a",
								"chart",
								"chart.png"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Release - DataBlock",
			"item": [
				{
					"name": "Get DataBlocks by Release - Permanent and fixed-period exclusions in England",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "c06ee174-3e90-44b8-b9a8-32283e7dde7c",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]heading\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.subjectId\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.timePeriod\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.filters\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]dataBlockRequest.indicators\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]charts\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"[1]tables\"));",
									"});",
									"",
									"pm.test(\"Number of results should be correct\", function () { ",
									"    pm.expect(respJson.length).to.above(0);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "dbde4b62-47dd-4c3d-93dc-5e01ec3f8231",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/datablocks/",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"e7774a74-1f62-4b76-b9b5-84f14dac7278",
								"datablocks",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create DataBlock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"// NOTE: Save DataBlock id for use in the next request",
									"pm.globals.set(\"datablock_id\", respJson.id);",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"dataBlockRequest\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"heading\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"charts\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"tables\"));",
									"});",
									"",
									"pm.test(\"id should match request id\", function () {",
									"    pm.expect(respJson.id).to.equal(pm.globals.get(\"datablock_id\"));",
									"});",
									"",
									"pm.test(\"heading should should be correct\", function () { ",
									"    pm.expect(respJson.heading).to.equal(\"Postman test chart showing permanent exclusions in England\"); ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"heading\": \"Postman test chart showing permanent exclusions in England\",\n    \"dataBlockRequest\": {\n        \"subjectId\": 12,\n        \"geographicLevel\": \"Country\",\n        \"timePeriod\": {\n            \"startYear\": \"2012\",\n            \"startCode\": \"AY\",\n            \"endYear\": \"2016\",\n            \"endCode\": \"AY\"\n        },\n        \"filters\": [\n            \"457\"\n        ],\n        \"indicators\": [\n            \"179\",\n            \"177\",\n            \"178\"\n        ]\n    },\n    \"tables\": [\n        {\n            \"indicators\": [\n                \"177\",\n                \"178\",\n                \"179\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{admin_api_url}}/release/e7774a74-1f62-4b76-b9b5-84f14dac7278/datablocks",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"e7774a74-1f62-4b76-b9b5-84f14dac7278",
								"datablocks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get DataBlock by created Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"dataBlockRequest\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"heading\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"charts\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"tables\"));",
									"});",
									"",
									"pm.test(\"id should match request id\", function () {",
									"    pm.expect(respJson.id).to.equal(pm.globals.get(\"datablock_id\"));",
									"});",
									"",
									"pm.test(\"heading should should be correct\", function () { ",
									"    pm.expect(respJson.heading).to.equal(\"Postman test chart showing permanent exclusions in England\"); ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/datablocks/{{datablock_id}}",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"datablocks",
								"{{datablock_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update DataBlock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
								"exec": [
									"var respJson = pm.response.json();",
									"",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Fields are present\", function () {",
									"    pm.expect(pm.response.to.have.jsonBody(\"dataBlockRequest\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"id\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"heading\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"charts\"));",
									"    pm.expect(pm.response.to.have.jsonBody(\"tables\"));",
									"});",
									"",
									"pm.test(\"id should match request id\", function () {",
									"    pm.expect(respJson.id).to.equal(pm.globals.get(\"datablock_id\"));",
									"});",
									"",
									"pm.test(\"heading should should be correct\", function () { ",
									"    pm.expect(respJson.heading).to.equal(\"Postman test chart showing permanent exclusions in England - Updated\"); ",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"heading\": \"Postman test chart showing permanent exclusions in England - Updated\",\n    \"dataBlockRequest\": {\n        \"subjectId\": 12,\n        \"geographicLevel\": \"Country\",\n        \"timePeriod\": {\n            \"startYear\": \"2012\",\n            \"startCode\": \"AY\",\n            \"endYear\": \"2016\",\n            \"endCode\": \"AY\"\n        },\n        \"filters\": [\n            \"457\"\n        ],\n        \"indicators\": [\n            \"179\",\n            \"177\",\n            \"178\"\n        ]\n    },\n    \"tables\": [\n        {\n            \"indicators\": [\n                \"177\",\n                \"178\",\n                \"179\"\n            ]\n        }\n    ]\n}"
						},
						"url": {
							"raw": "{{admin_api_url}}/datablocks/{{datablock_id}}",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"datablocks",
								"{{datablock_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete DataBlock",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
								"exec": [
									"pm.test(\"Status code is 204\", function () { pm.response.to.have.status(204); });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/datablocks/{{datablock_id}}",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"datablocks",
								"{{datablock_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete DataBlock invalid id",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fa8ea708-fc9c-4520-8df9-a388dd26508d",
								"exec": [
									"pm.test(\"Status code is 404\", function () { pm.response.to.have.status(404); });"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "1098d84e-671d-465d-adfa-8c1d009ac73a",
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{admin_api_url}}/datablocks/815c6a6d-fbad-4f76-a226-13b7e1602f7e",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"datablocks",
								"815c6a6d-fbad-4f76-a226-13b7e1602f7e"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Release - Data File uploads",
			"item": [
				{
					"name": "Upload data file - invalid (meta header includes quotes)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/quotes_in_metadata_file_headings.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/quotes_in_metadata_file_headings.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=upload_data_file_invalid_quotes_in_metadata_header",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "upload_data_file_invalid_quotes_in_metadata_header"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (meta header includes quotes) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/quotes_in_metadata_file_headings.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"quotes_in_metadata_file_headings.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (meta incorrect values)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/invalid_data_in_metadata_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/invalid_data_in_metadata_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=upload_data_file_invalid_values_in_metadata_file",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "upload_data_file_invalid_values_in_metadata_file"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (meta incorrect values) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/invalid_data_in_metadata_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"invalid_data_in_metadata_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (meta row includes quotes)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/quotes_in_metadata_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/quotes_in_metadata_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=upload_data_file_invalid_quotes_in_metadata_row",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "upload_data_file_invalid_quotes_in_metadata_row"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (meta row includes quotes) - check status Copy Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/quotes_in_metadata_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"quotes_in_metadata_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file includes quotes)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/quotes_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/quotes_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=upload_data_file_invalid_quotes_in_data_file",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "upload_data_file_invalid_quotes_in_data_file"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file includes quotes) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/quotes_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"quotes_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (metadata file has unexpected metadata)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_metadata_in_metadata_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_metadata_in_metadata_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_metadata_file_has_unexpected_metadata",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_metadata_file_has_unexpected_metadata"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (metadata file has unexpected metadata) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/unexpected_colums_in_metadata_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"unexpected_colums_in_metadata_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (metadata file has unexpected columns)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_columns_in_metadata_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_columns_in_metadata_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_metadata_file_has_unexpected_columns",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_metadata_file_has_unexpected_columns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (metadata file has unexpected columns) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/unexpected_columns_in_metadata_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"unexpected_columns_in_metadata_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (metadata file has unexpected number of columns)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_number_of_columns_in_metadata_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_number_of_columns_in_metadata_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_metadata_file_has_unexpected_number_of_columns",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_metadata_file_has_unexpected_number_of_columns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (metadata file has unexpected number of columns) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/unexpected_number_of_columns_in_metadata_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"unexpected_number_of_columns_in_metadata_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has unexpected number of columns)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_number_of_columns_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/unexpected_number_of_columns_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_unexpected_number_of_columns",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_unexpected_number_of_columns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has unexpected number of columns) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/unexpected_number_of_columns_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"unexpected_number_of_columns_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has invalid geographic level)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/invalid_geographic_level_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/invalid_geographic_level_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_invalid_geographic_level",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_invalid_geographic_level"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has invalid geographic level) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/invalid_geographic_level_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"invalid_geographic_level_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has invalid time identifier)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/invalid_time_identifier_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/invalid_time_identifier_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_invalid_time_identifier",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_invalid_time_identifier"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has invalid time identifier) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/invalid_time_identifier_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"invalid_time_identifier_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing time period column)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_time_period_column_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_time_period_column_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_missing_time_period_column",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_missing_time_period_column"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing time period column) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/invalid_time_identifier_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"invalid_time_identifier_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing time identifier column)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_time_identifier_column_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_time_identifier_column_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_missing_time_identifier_column",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_missing_time_identifier_column"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing time identifier column) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/missing_time_identifier_column_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"missing_time_identifier_column_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing geographic level column)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_time_identifier_column_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_time_identifier_column_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_missing_geographic_level_column",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_missing_geographic_level_column"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing geographic level column) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/missing_geographic_level_column_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"missing_geographic_level_column_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing observational unit column)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_observational_units_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_observational_units_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_missing_observational_unit_column",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_missing_observational_unit_column"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing observational unit column) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/missing_observational_units_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"missing_observational_units_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing columns as specified in the metadata file)",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_columns_in_data_file.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/file-upload-validation/missing_columns_in_data_file.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=invalid_data_file_has_missing_columns_from_the_metadata_file",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "invalid_data_file_has_missing_columns_from_the_metadata_file"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload data file - invalid (data file has missing columns as specified in the metadata file) - check status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3a4035f5-600e-47c8-bd3b-27960abf8cfe",
								"exec": [
									"/*",
									"pm.test(\"Status code is 200\", function () { pm.response.to.have.status(200); });",
									"",
									"pm.test(\"Should return some results\", function () {",
									"    pm.expect(pm.response.json().length).to.equal(2);    ",
									"});",
									"",
									"pm.test(\"Name should be correct\", function () { ",
									"    pm.expect(pm.response.json()[1].name).to.equal(\"testName\"); ",
									"});",
									"",
									"pm.test(\"Extension should be csv\", function () { ",
									"    pm.expect(pm.response.json()[0].extension).to.equal(\"csv\"); ",
									"});",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/missing_columns_in_data_file.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"missing_columns_in_data_file.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Release - Small File uploads",
			"item": [
				{
					"name": "Upload small file - 3digit_illegal",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/3digit_illegal.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/3digit_illegal.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=3digit_illegal",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "3digit_illegal"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 3digit_illegal - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/3digit_illegal.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"3digit_illegal.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4and6digit_overlapping",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/4and6digit_overlapping.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/4and6digit_overlapping.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=4and6digit_overlapping",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "4and6digit_overlapping"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4and6digit_overlapping - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/4and6digit_overlapping.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"4and6digit_overlapping.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4and6digit_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/4and6digit_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/4and6digit_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=4and6digit_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "4and6digit_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4and6digit_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/4and6digit_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"4and6digit_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4digit_duplicate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/4digit_duplicate.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/4digit_duplicate.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=4digit_duplicate",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "4digit_duplicate"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4digit_duplicate - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/4digit_duplicate.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"4digit_duplicate.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4digit_extreme_gaps",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/4digit_extreme_gaps.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/4digit_extreme_gaps.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=4digit_extreme_gaps",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "4digit_extreme_gaps"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4digit_extreme_gaps - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/4digit_extreme_gaps.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"4digit_extreme_gaps.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4digit_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/4digit_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/4digit_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=4digit_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "4digit_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 4digit_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/4digit_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"4digit_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 6digit_dodgy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/6digit_dodgy.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/6digit_dodgy.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=6digit_dodgy",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "6digit_dodgy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 6digit_dodgy - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/6digit_dodgy.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"6digit_dodgy.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 6digit_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/6digit_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/6digit_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=6digit_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "6digit_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 6digit_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/6digit_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"6digit_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 7digit_iffy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/7digit_iffy.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/7digit_iffy.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=7digit_iffy",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "7digit_iffy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - 7digit_iffy - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/7digit_iffy.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"7digit_iffy.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_geographies",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_geographies.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_geographies.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=all_geographies",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "all_geographies"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_geographies - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/all_geographies.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"all_geographies.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_geographies_messy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_geographies_messy.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_geographies_messy.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=all_geographies_messy",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "all_geographies_messy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_geographies_messy - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/all_geographies_messy.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"all_geographies_messy.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_year_empty",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_year_empty.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_year_empty.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=all_year_empty",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "all_year_empty"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_year_empty - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/all_year_empty.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"all_year_empty.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_year_identifier_blank",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_year_identifier_blank.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/all_year_identifier_blank.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=all_year_identifier_blank",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "all_year_identifier_blank"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - all_year_identifier_blank - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/all_year_identifier_blank.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"all_year_identifier_blank.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - combined_terms",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/combined_terms.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/combined_terms.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=combined_terms",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "combined_terms"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - combined_terms - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/combined_terms.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"combined_terms.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - combined_terms_duplicates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/combined_terms_duplicates.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/combined_terms_duplicates.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=combined_terms_duplicates",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "combined_terms_duplicates"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - combined_terms_duplicates - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/combined_terms_duplicates.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"combined_terms_duplicates.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - different_time_years",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/different_time_years.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/different_time_years.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=different_time_years",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "different_time_years"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - different_time_years - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/different_time_years.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"different_time_years.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - financial_year_duplicate_gaps",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/financial_year_duplicate_gaps.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/financial_year_duplicate_gaps.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=financial_year_duplicate_gaps",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "financial_year_duplicate_gaps"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - financial_year_duplicate_gaps - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/financial_year_duplicate_gaps.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"financial_year_duplicate_gaps.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - financial_year_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/financial_year_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/financial_year_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=financial_year_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "financial_year_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - financial_year_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/financial_year_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"financial_year_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/LA.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/LA.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=LA",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "LA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LA - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/LA.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"LA.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LAD",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/LAD.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/LAD.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=LAD",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "LAD"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LAD - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/LAD.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"LAD.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LA_with_SOME_regional_columns",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/LA_with_SOME_regional_columns.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/LA_with_SOME_regional_columns.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=LA_with_SOME_regional_columns",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "LA_with_SOME_regional_columns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LA_with_SOME_regional_columns - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/LA_with_SOME_regional_columns.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"LA_with_SOME_regional_columns.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LEP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/LEP.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/LEP.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=LEP",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "LEP"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - LEP - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/LEP.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"LEP.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - MCA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/MCA.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/MCA.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=MCA",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "MCA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - MCA - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/MCA.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"MCA.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - mixed_digits",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/mixed_digits.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/mixed_digits.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=mixed_digits",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "mixed_digits"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - mixed_digits - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/mixed_digits.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"mixed_digits.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - monthly_missing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/monthly_missing.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/monthly_missing.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=monthly_missing",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "monthly_missing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - monthly_missing - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/monthly_missing.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"monthly_missing.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - monthly_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/monthly_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/monthly_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=monthly_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "monthly_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - monthly_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/monthly_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"monthly_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - MSOA",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/MSOA.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/MSOA.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=MSOA",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "MSOA"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - MSOA - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/MSOA.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"MSOA.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - one_row_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/one_row_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/one_row_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=one_row_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "one_row_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - one_row_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/one_row_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"one_row_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - overlapping_terms",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/overlapping_terms.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/overlapping_terms.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=overlapping_terms",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "overlapping_terms"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - overlapping_terms - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/overlapping_terms.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"overlapping_terms.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - PCon",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/PCon.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/PCon.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=PCon",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "PCon"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - PCon - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/PCon.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"PCon.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - regional",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/regional.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/regional.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=regional",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "regional"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - regional - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/regional.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"regional.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - regional_different_years",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/regional_different_years.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/regional_different_years.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=regional_different_years",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "regional_different_years"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - regional_different_years - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/regional_different_years.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"regional_different_years.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - RSC",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/RSC.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/RSC.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=RSC",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "RSC"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - RSC - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/RSC.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"RSC.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - some_identifier_missing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/some_identifier_missing.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/some_identifier_missing.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=some_identifier_missing",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "some_identifier_missing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - some_identifier_missing - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/some_identifier_missing.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"some_identifier_missing.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - some_year_missing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/some_year_missing.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/some_year_missing.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=some_year_missing",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "some_year_missing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - some_year_missing - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/some_year_missing.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"some_year_missing.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - string_digits",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/string_digits.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/string_digits.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=string_digits",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "string_digits"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - string_digits - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/string_digits.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"string_digits.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - tax_year_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/tax_year_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/tax_year_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=tax_year_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "tax_year_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - tax_year_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/tax_year_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"tax_year_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - termly_missing",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/termly_missing.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/termly_missing.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=termly_missing",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "termly_missing"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - termly_missing - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/termly_missing.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"termly_missing.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - termly_simple",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/termly_simple.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/termly_simple.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=termly_simple",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "termly_simple"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - termly_simple - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/termly_simple.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"termly_simple.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - up_until_31st_march",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/up_until_31st_march.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/up_until_31st_march.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=up_until_31st_march",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "up_until_31st_march"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - up_until_31st_march - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/up_until_31st_march.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"up_until_31st_march.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - up_until_31st_march_iffy",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/up_until_31st_march_iffy.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/up_until_31st_march_iffy.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=up_until_31st_march_iffy",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "up_until_31st_march_iffy"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - up_until_31st_march_iffy - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/up_until_31st_march_iffy.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"up_until_31st_march_iffy.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - ward",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/ward.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/ward.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=ward",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "ward"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - ward - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/ward.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"ward.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - year_identifier_missing_columns",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "{{files_dir}}/small-files/year_identifier_missing_columns.csv"
								},
								{
									"key": "metaFile",
									"type": "file",
									"src": "{{files_dir}}/small-files/year_identifier_missing_columns.meta.csv"
								}
							]
						},
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data?name=year_identifier_missing_columns",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data"
							],
							"query": [
								{
									"key": "name",
									"value": "year_identifier_missing_columns"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Upload small file - year_identifier_missing_columns - check status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{admin_api_url}}/release/{{file_upload_validation_release_id}}/data/year_identifier_missing_columns.csv/import/status",
							"host": [
								"{{admin_api_url}}"
							],
							"path": [
								"release",
								"{{file_upload_validation_release_id}}",
								"data",
								"year_identifier_missing_columns.csv",
								"import",
								"status"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "6464fc17-e41b-4120-9ac9-00c93234437a",
				"type": "text/javascript",
				"exec": [
					"// Absence by characteristic",
					"pm.globals.set(\"1FILT_SchoolType\", \"2\");",
					"pm.globals.set(\"1FG_SchoolType_Default\", \"11\");",
					"pm.globals.set(\"1F_Char__Total\", \"1\");",
					"pm.globals.set(\"1F_Char__GenderMale\", \"53\");",
					"pm.globals.set(\"1F_Char__GenderFemale\", \"52\");",
					"pm.globals.set(\"1F_SchoolType__Total\", \"58\");",
					"pm.globals.set(\"1F_SchoolType__StateFundedPrimary\", \"57\");",
					"pm.globals.set(\"1F_SchoolType__StateFundedSecondary\", \"56\");",
					"pm.globals.set(\"1F_SchoolType__Special\", \"55\");",
					"pm.globals.set(\"1F_Char__FSMEligible\", \"18\");",
					"pm.globals.set(\"1F_Char__FSMNotEligible\", \"10\");",
					"pm.globals.set(\"1F_Char__FSMUnclassified\", \"8\");",
					"pm.globals.set(\"1F_Char__EthMinor_Irish\", \"50\");",
					"pm.globals.set(\"1F_YearBreakdown__SixHalfTerms\", \"54\");",
					"",
					"pm.globals.set(\"1I_AbsenceFields__NumberOfPupilEnrolments\", \"1\");",
					"pm.globals.set(\"1I_AbsenceFields__NumberOfSessionsPossible\", \"25\");",
					"pm.globals.set(\"1I_AbsenceFields__UnauthorisedAbsenceRate\", \"23\");",
					"pm.globals.set(\"1I_AbsenceFields__OverallAbsenceRate\", \"26\");",
					"pm.globals.set(\"1I_AbsenceFields__AuthorisedAbsenceRate\", \"28\");",
					"pm.globals.set(\"1I_AbsenceFields__PercentageOfPersistentAbsentees\", \"30\");",
					"pm.globals.set(\"1I_AbsenceFields__NumberOfPersistentAbsentees\", \"31\");",
					"pm.globals.set(\"1I_AbsenceForPersistentAbsentees__NumberOfAuthorisedAbsenceSessionsForPersistentAbsentees\", \"6\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfUnauthorisedReasonsSessions\", \"7\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfUnauthorisedOtherSessions\", \"8\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfNoReasonYetSessions\", \"9\");",
					"pm.globals.set(\"1I_AbsenceByReason__NumberOfLateSessions\", \"10\");"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "8d33b604-23a0-45bf-9ff6-91ec28db96e4",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}
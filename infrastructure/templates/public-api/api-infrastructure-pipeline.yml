trigger: none

resources:
  pipelines:
    - pipeline: EESBuildPipeline
      source: Explore Education Statistics disabled
      trigger: true

parameters:
  - name: psqlDbUsersAdded
    displayName: Have database users been added to PSQL yet for Container App and Function App?
    default: true

variables:
  - group: EES Bicep Infrastructure common
  - name: isDev
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/dev')]
  - name: isTest
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/test')]
  - name: isMaster
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: vmImageName
    value: 'ubuntu-latest'
  - name: templateDirectory
    value: $(Build.SourcesDirectory)/infrastructure/templates/public-api
  - name: templateFile
    value: $(templateDirectory)/main.bicep
  - name: paramDirectory
    value: $(templateDirectory)/parameters
  - name: devParamFile
    value: $(paramDirectory)/main-dev.bicepparam
  - name: testParamFile
    value: $(paramDirectory)/main-test.bicepparam
  - name: preProdParamFile
    value: $(paramDirectory)/main-preprod.bicepparam
  - name: prodParamFile
    value: $(paramDirectory)/main-prod.bicepparam
  - name: upstreamPipelineBuildNumber
    value: $(resources.pipeline.EESBuildPipeline.runName)
  - name: psqlDbUsersAdded
    value: ${{parameters.psqlDbUsersAdded}}

pool:
  vmImage: $(vmImageName)

stages:
- ${{ if variables.isDev }}:
  - template: validate-stage-template.yml
    parameters:
      stageName: 'Validate_Against_Development'
      environment: 'Development'
      serviceConnection: $(serviceConnectionDevelopment)
      parameterFile: $(devParamFile)

  - template: deploy-stage-template.yml
    parameters:
      stageName: 'Deploy_to_Development'
      dependsOn: 'Validate_Against_Development'
      environment: 'Development'
      serviceConnection: $(serviceConnectionDevelopment)
      parameterFile: $(devParamFile)

- ${{ if variables.isTest }}:
  - template: validate-stage-template.yml
    parameters:
      stageName: 'Validate_Against_Test'
      environment: 'Test'
      serviceConnection: $(serviceConnectionTest)
      parameterFile: $(testParamFile)

  - template: deploy-stage-template.yml
    parameters:
      stageName: 'Deploy_to_Test'
      dependsOn: 'Validate_Against_Test'
      environment: 'Test'
      serviceConnection: $(serviceConnectionTest)
      parameterFile: $(testParamFile)

- ${{ if variables.isMaster }}:
  - template: validate-stage-template.yml
    parameters:
      stageName: 'Validate_Against_PreProduction'
      environment: 'Pre-production'
      serviceConnection: $(serviceConnectionPreProduction)
      parameterFile: $(preProdParamFile)

  - template: deploy-stage-template.yml
    parameters:
      stageName: 'Deploy_to_PreProduction'
      dependsOn: 'Validate_Against_PreProduction'
      environment: 'Pre-production'
      serviceConnection: $(serviceConnectionPreProduction)
      parameterFile: $(preProdParamFile)

  - template: validate-stage-template.yml
    parameters:
      stageName: 'Validate_Against_Production'
      environment: 'Production'
      serviceConnection: $(serviceConnectionProduction)
      parameterFile: $(prodParamFile)

  - template: deploy-stage-template.yml
    parameters:
      stageName: 'Deploy_to_Production'
      dependsOn: 'Validate_Against_Production'
      environment: 'Production'
      serviceConnection: $(serviceConnectionProduction)
      parameterFile: $(prodParamFile)

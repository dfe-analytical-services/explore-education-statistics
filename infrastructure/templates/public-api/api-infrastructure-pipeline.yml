trigger: none

resources:
  pipelines:
    - pipeline: EESBuildPipeline
      source: Explore Education Statistics
      trigger: none

parameters:
  - name: deployContainerApp
    displayName: Can we deploy the Container App yet?  This is dependent on the user-assigned Managed Identity for the API Container App being created with the AcrPull role, and the database users added to PSQL.
    default: true

variables:
  - group: Public API Infrastructure - common
  - name: isDev
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/EES-4807-small-tweaks-after-merge')]
  - name: isTest
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/test')]
  - name: isMaster
    value: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  - name: vmImageName
    value: 'ubuntu-latest'
  - name: templateDirectory
    value: $(Build.SourcesDirectory)/infrastructure/templates/public-api
  - name: templateFile
    value: $(templateDirectory)/main.bicep
  - name: paramDirectory
    value: $(templateDirectory)/parameters
  - name: devParamFile
    value: $(paramDirectory)/main-dev.bicepparam
  - name: testParamFile
    value: $(paramDirectory)/main-test.bicepparam
  - name: preProdParamFile
    value: $(paramDirectory)/main-preprod.bicepparam
  - name: prodParamFile
    value: $(paramDirectory)/main-prod.bicepparam
  - name: upstreamPipelineBuildNumber
    value: $(resources.pipeline.EESBuildPipeline.runName)
  - name: deployContainerApp
    value: ${{parameters.deployContainerApp}}

pool:
  vmImage: $(vmImageName)

stages:
- template: validate-stage-template.yml
  parameters:
    stageName: 'Validate_Against_Development'
    condition: eq(variables.isDev, true)
    environment: 'Development'
    serviceConnection: $(serviceConnectionDevelopment)
    parameterFile: $(devParamFile)

- template: deploy-stage-template.yml
  parameters:
    stageName: 'Deploy_to_Development'
    condition: and(succeeded(), eq(variables.isDev, true))
    dependsOn: 'Validate_Against_Development'
    environment: 'Development'
    serviceConnection: $(serviceConnectionDevelopment)
    parameterFile: $(devParamFile)

- template: validate-stage-template.yml
  parameters:
    stageName: 'Validate_Against_Test'
    condition: eq(variables.isTest, true)
    environment: 'Test'
    serviceConnection: $(serviceConnectionTest)
    parameterFile: $(testParamFile)

- template: deploy-stage-template.yml
  parameters:
    stageName: 'Deploy_to_Test'
    dependsOn: 'Validate_Against_Test'
    condition: and(succeeded(), eq(variables.isTest, true))
    environment: 'Test'
    serviceConnection: $(serviceConnectionTest)
    parameterFile: $(testParamFile)

#  - template: validate-stage-template.yml
#    parameters:
#      stageName: 'Validate_Against_PreProduction'
#      condition: eq(variables.isMaster, true)
#      environment: 'Pre-production'
#      serviceConnection: $(serviceConnectionPreProduction)
#      parameterFile: $(preProdParamFile)
#
#  - template: deploy-stage-template.yml
#    parameters:
#      stageName: 'Deploy_to_PreProduction'
#      condition: and(succeeded(), eq(variables.isMaster, true))
#      dependsOn: 'Validate_Against_PreProduction'
#      environment: 'Pre-production'
#      serviceConnection: $(serviceConnectionPreProduction)
#      parameterFile: $(preProdParamFile)
#
#  - template: validate-stage-template.yml
#    parameters:
#      stageName: 'Validate_Against_Production'
#      condition: and(succeeded(), eq(variables.isMaster, true))
#      environment: 'Production'
#      serviceConnection: $(serviceConnectionProduction)
#      parameterFile: $(prodParamFile)
#
#  - template: deploy-stage-template.yml
#    parameters:
#      stageName: 'Deploy_to_Production'
#      condition: and(succeeded(), eq(variables.isMaster, true))
#      dependsOn: 'Validate_Against_Production'
#      environment: 'Production'
#      serviceConnection: $(serviceConnectionProduction)
#      parameterFile: $(prodParamFile)

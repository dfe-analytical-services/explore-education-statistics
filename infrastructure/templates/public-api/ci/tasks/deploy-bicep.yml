parameters:
  - name: action
    type: string
    default: create
    values:
      - create
      - validate
  - name: displayName
    type: string
  - name: serviceConnection
    type: string
  - name: parameterFile
    type: string
  - name: deploySharedPrivateDnsZones
    type: string
  - name: deployPsqlFlexibleServer
    type: string
  - name: deployContainerApp
    type: string
    default: true
  - name: deployDataProcessor
    type: string
  - name: deployDocsSite
    type: string
  - name: deployRecoveryVault
    type: string
  - name: deployAlerts
    type: string
  - name: dataProcessorExists
    type: string
    default: true

steps:
  - task: AzureCLI@2
    displayName: ${{ parameters.displayName }}
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: bash
      scriptLocation: inlineScript
      addSpnToEnvironment: true
      inlineScript: |
        set -e

        # Workaround for AZ CLI 2.71.x breaks bicep deployments when using Azure Devops Agent
        # See https://github.com/Azure/azure-cli/issues/31189
        az config set bicep.use_binary_from_path=false

        az deployment group ${{ parameters.action }} \
          --name $(infraDeployName) \
          --resource-group $(resourceGroupName) \
          --template-file $(templateFile) \
          --parameters ${{ parameters.parameterFile }} \
          --parameters \
              subscription='$(subscription)' \
              resourceTags='$(resourceTags)' \
              postgreSqlAdminName='$(postgreSqlAdminName)' \
              postgreSqlAdminPassword='$(postgreSqlAdminPassword)' \
              postgreSqlEntraIdAdminPrincipals='$(postgreSqlEntraIdAdminPrincipals)' \
              maintenanceIpRanges='$(maintenanceFirewallRules)' \
              acrResourceGroupName='$(acrResourceGroupName)' \
              dockerImagesTag='$(resources.pipeline.MainBuild.runName)' \
              deploySharedPrivateDnsZones=${{ parameters.deploySharedPrivateDnsZones }} \
              deployPsqlFlexibleServer=${{ parameters.deployPsqlFlexibleServer }} \
              deployContainerApp=${{ parameters.deployContainerApp }} \
              deployDataProcessor=${{ parameters.deployDataProcessor }} \
              deployDocsSite=${{ parameters.deployDocsSite }} \
              deployRecoveryVault=${{ parameters.deployRecoveryVault }} \
              deployAlerts=${{ parameters.deployAlerts }} \
              dataProcessorFunctionAppExists=${{ parameters.dataProcessorExists }} \
              dataProcessorAppRegistrationClientId='$(dataProcessorAppRegistrationClientId)' \
              apiAppRegistrationClientId='$(apiAppRegistrationClientId)' \
              devopsServicePrincipalId="$servicePrincipalId"

parameters:
  - name: serviceConnection
    type: string
  - name: environment
    type: string
  - name: bicepParamFile
    type: string

jobs:
  - deployment: DeployPublicApiInfrastructure
    displayName: Deploy Public API infrastructure
    environment: ${{ parameters.environment }}
    variables:
      templateDirectory: $(Build.SourcesDirectory)/infrastructure/templates/public-api
      templateFile: $(templateDirectory)/main.bicep
      paramDirectory: $(templateDirectory)/parameters
      paramFile: $(paramDirectory)/main-${{ parameters.bicepParamFile }}.bicepparam
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - template: ../../../../common/ci/tasks/update-azure-cli-and-extensions.yml

            - template: ../tasks/deploy-bicep.yml
              parameters:
                displayName: Validate Bicep template
                action: validate
                serviceConnection: ${{ parameters.serviceConnection }}
                parameterFile: $(paramFile)
                deploySharedPrivateDnsZones: false
                deployPsqlFlexibleServer: false
                deployContainerApp: false
                deployDataProcessor: false
                deployDocsSite: false
                deployRecoveryVault: false
                deployAlerts: false
                dataProcessorExists: false

            - template: ../tasks/check-function-app-exists.yml
              parameters:
                serviceConnection: ${{ parameters.serviceConnection }}
                resourceGroupName: $(resourceGroupName)
                functionAppName: $(dataProcessorFunctionAppName)
                variableName: dataProcessorExists

            - template: ../tasks/deploy-bicep.yml
              parameters:
                displayName: Deploy Bicep template
                action: create
                serviceConnection: ${{ parameters.serviceConnection }}
                parameterFile: $(paramFile)
                deploySharedPrivateDnsZones: $(deploySharedPrivateDnsZones)
                deployPsqlFlexibleServer: $(deployPsqlFlexibleServer)
                deployContainerApp: $(deployContainerApp)
                deployDataProcessor: $(deployDataProcessor)
                deployDocsSite: $(deployDocsSite)
                deployRecoveryVault: $(deployRecoveryVault)
                deployAlerts: $(deployAlerts)
                dataProcessorExists: $(dataProcessorExists)

            # - template: ../tasks/assign-app-role-to-service-principal.yml
            #   parameters:
            #     serviceConnection: ${ {parameters.serviceConnection }}
            #     appRoleName: Admin.Access
            #     protectedResourceAppRegName: $(subscription)-ees-papi-ca-api-appreg
            #     servicePrincipalName: $(subscription)-as-ees-admin

# This is a reusable Deploy stage definition that is parameterised to be reusable
# to support deployment to different environments

parameters:
  - name: stageName
    type: string
  - name: environment
    type: string
  - name: serviceConnection
    type: string
  - name: dependsOn
    type: string

stages:
- stage: ${{parameters.stageName}}
  variables:
    - group: EES Bicep Infrastructure public - ${{parameters.environment}}
    - group: EES Bicep Infrastructure secrets - ${{parameters.environment}}
  displayName: 'Deploy ${{parameters.environment}} Infrastructure and Applications'
  condition: succeeded()
  dependsOn: ${{parameters.dependsOn}}
  jobs:
  - deployment: Deploy
    displayName: 'Deploy ${{parameters.environment}} Infrastructure Bicep template and applications'
    environment: '${{parameters.environment}}'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: EESBuildPipeline
            displayName: 'Download Data Processor Function App ZIP file'
            artifact: 'public-api-data-processor-$(upstreamPipelineBuildNumber)'
          - checkout: self
          - task: AzureCLI@2
            displayName: 'Deploy bicep template to Azure'
            inputs:
              azureSubscription: ${{parameters.serviceConnection}}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                set -e
                az deployment group create \
                --resource-group $(resourceGroupName) \
                --template-file $(templateFile) \
                --parameters $(devParamFile) \
                --parameters \
                    subscription='$(subscription)' \
                    vNetName='$(vNetName)' \
                    acrName='$(acrName)' \
                    coreStorageAccountName='$(coreStorageAccountName)' \
                    resourceTags='$(resourceTags)' \
                    publicUrls='$(publicUrls)' \
                    postgreSqlAdminName='$(postgreSqlAdminName)' \
                    postgreSqlAdminPassword='$(postgreSqlAdminPassword)' \
                    dockerImagesTag='$(dockerImagesTag)' \
                    psqlDbUsersAdded='$(psqlDbUsersAdded)'

          # Swapping out from AzureFunctionApp@2 due to intermittent deployment issues as faced in
          # https://github.com/microsoft/azure-pipelines-tasks/issues/18766
          - task: AzureCLI@2
            displayName: 'Deploy Data Processor Function App'
            inputs:
              azureSubscription: ${{parameters.serviceConnection}}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: |
                az functionapp deployment source config-zip \
                  --src '$(Pipeline.Workspace)/EESBuildPipeline/public-api-data-processor-$(upstreamPipelineBuildNumber)/GovUk.Education.ExploreEducationStatistics.Public.Data.Processor.zip' \
                  --name '$(subscription)-ees-publicapi-fa-processor' \
                  --resource-group '$(resourceGroupName)' # --slot 'staging'

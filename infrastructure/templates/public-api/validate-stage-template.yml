# This is a reusable Deploy stage definition that is parameterised to be reusable
# to support deployment to different environments

parameters:
  - name: stageName
    type: string
  - name: environment
    type: string
  - name: serviceConnection
    type: string
  - name: parameterFile
    type: string

stages:
  - stage: ${{parameters.stageName}}
    displayName: 'Validate ${{parameters.environment}} Infrastructure'
    jobs:
      - job: Validate_Infrastructure
        variables:
          - group: EES Bicep Infrastructure public - ${{parameters.environment}}
          - group: EES Bicep Infrastructure secrets - ${{parameters.environment}}
        steps:
          - checkout: self

          - task: AzureCLI@2
            displayName: 'Install Bicep'
            inputs:
              azureSubscription: ${{parameters.serviceConnection}}
              scriptType: bash
              scriptLocation: inlineScript
              inlineScript: 'az bicep install'

          - task: AzureCLI@2
            displayName: 'Validate bicep scripts'
            inputs:
              azureSubscription: ${{parameters.serviceConnection}}
              scriptType: bash
              scriptLocation: inlineScript
              failOnStandardError: true
              inlineScript: |
                az deployment group validate \
                --resource-group $(resourceGroupName) \
                --template-file $(templateFile) \
                --parameters ${{parameters.parameterFile}} \
                --parameters \
                    subscription='$(subscription)' \
                    vNetName='$(vNetName)' \
                    acrName='$(acrName)' \
                    coreStorageAccountName='$(coreStorageAccountName)' \
                    keyVaultName='$(keyVaultName)' \
                    resourceTags='$(resourceTags)' \
                    publicUrls='$(publicUrls)' \
                    postgreSqlAdminName='$(postgreSqlAdminName)' \
                    postgreSqlAdminPassword='$(postgreSqlAdminPassword)' \
                    dockerImagesTag='$(upstreamPipelineBuildNumber)' \
                    psqlDbUsersAdded=true \
                    dataProcessorFunctionAppExists=true

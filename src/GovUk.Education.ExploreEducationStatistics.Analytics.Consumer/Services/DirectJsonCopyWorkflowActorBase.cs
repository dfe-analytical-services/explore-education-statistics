using GovUk.Education.ExploreEducationStatistics.Analytics.Consumer.Extensions;
using GovUk.Education.ExploreEducationStatistics.Analytics.Consumer.Services.Workflow;
using GovUk.Education.ExploreEducationStatistics.Common.DuckDb.DuckDb;

namespace GovUk.Education.ExploreEducationStatistics.Analytics.Consumer.Services;

/// <summary>
/// This base class can be used for generating analytics reports from very simple
/// JSON-processing and Parquet-generating workflows whereby JSON source files are
/// imported into a source table (called SourceTable) and exported directly back
/// out again into a Parquet report file with no additional transformation.
/// </summary>
/// <param name="sourceDirectory">The directory where the source JSON files can be found.</param>
/// <param name="reportsDirectory">This directory where the Parquet report files will be generated.</param>
/// <param name="reportFilenamePart">
/// Part of the Parquet report filenames that help distinguish what type of Parquet report files are
/// being generated by this request processor.
/// </param>
public abstract class DirectJsonCopyWorkflowActorBase(
    string sourceDirectory,
    string reportsDirectory,
    string reportFilenamePart
    ) 
    : IWorkflowActor
{
    public string GetSourceDirectory()
    {
        return sourceDirectory;
    }

    public string GetReportsDirectory()
    {
        return reportsDirectory;
    }

    /// <summary>
    /// This method must be implemented to create the initial table into which the JSON
    /// source files will be imported. The table should always be called "sourceTable".
    /// </summary>
    /// <param name="connection">An open DuckDb connection.</param>
    public abstract Task InitialiseDuckDb(DuckDbConnection connection);

    public async Task ProcessSourceFile(string sourceFilePath, DuckDbConnection connection)
    {
        await connection.DirectCopyJsonIntoDuckDbTable(
            jsonFilePath: sourceFilePath,
            tableName: "sourceTable");
    }

    public async Task CreateParquetReports(string reportsFolderPathAndFilenamePrefix, DuckDbConnection connection)
    {
        var reportFilePath = 
            $"{reportsFolderPathAndFilenamePrefix}_public-api-{reportFilenamePart}-calls.parquet";

        await connection.DirectCopyDuckDbTableIntoParquetFile(
            tableName: "sourceTable",
            parquetFilePath: reportFilePath);
    }
}

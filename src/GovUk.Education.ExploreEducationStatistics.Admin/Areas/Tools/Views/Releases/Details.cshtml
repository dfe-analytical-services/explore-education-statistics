@using Newtonsoft.Json
@model GovUk.Education.ExploreEducationStatistics.Content.Model.Release

@{
    ViewData["Title"] = Model.Title;
}
<span class="govuk-caption-l">Release</span>
<h1 class="govuk-heading-l">@Model.Title</h1>

<h3 class="govuk-heading-m">Details</h3>
<table class="govuk-table">
    <tbody>
    <tr class="govuk-table__row">
        <td class="govuk-table__header">
            @Html.DisplayNameFor(model => model.Publication)
        </td>
        <td class="govuk-table__cell">
            @Html.DisplayFor(model => model.Publication.Title)
        </td>
    </tr>
    <tr class="govuk-table__row">
        <td class="govuk-table__header">
            @Html.DisplayNameFor(model => model.ReleaseName)
        </td>
        <td class="govuk-table__cell">
            @Html.DisplayFor(model => model.ReleaseName)
        </td>
    </tr>
    <tr class="govuk-table__row">
        <td class="govuk-table__header">
            @Html.DisplayNameFor(model => model.Slug)
        </td>
        <td class="govuk-table__cell">
            /@Html.DisplayFor(model => model.Publication.Slug)/@Html.DisplayFor(model => model.Slug)/
        </td>
    </tr>
    </tbody>
</table>

<h3 class="govuk-heading-m">Content</h3>

<h4 class="govuk-heading-s">@Html.DisplayNameFor(model => model.SummarySection)</h4>
<p class="govuk-body">@Html.DisplayFor(model => model.SummarySection)</p>

<h4 class="govuk-heading-s">@Html.DisplayNameFor(model => model.KeyStatisticsSection)</h4>
<pre style="white-space: pre-wrap;">@(JsonConvert.SerializeObject(Model.KeyStatisticsSection))</pre>

<h4 class="govuk-heading-s">@Html.DisplayNameFor(model => model.GenericContent)</h4>
<pre style="white-space: pre-wrap;">@(JsonConvert.SerializeObject(Model.GenericContent))</pre>

<div>
    <a asp-action="Edit" asp-route-id="@Model.Id" class="govuk-button">Edit</a>
    <p>
        <a asp-action="Index" class="govuk-back-link">Back to List</a>
    </p>
</div>
# <%= title %>

<%= description %>

The URL for this endpoint is:

```
<%= http_method %> <%= url %>
```

<% if parameters.any? %>
## Parameters

<% path_parameters = parameters.select { |parameter| parameter.in == "path" } %>

<% if path_parameters.any? %>
### Path parameters

The following parameters will need to be substituted into the URL path.

<%= partial("partials/parameter_table", :locals => { parameters: path_parameters }) %>
<% end %>

<% query_parameters = parameters.select { |parameter| parameter.in == "query" } %>

<% if query_parameters.any? %>
### Query parameters

<%= partial("partials/parameter_table", :locals => { parameters: query_parameters }) %>
<% end %>

<% headers = parameters.select { |parameter| parameter.in == "header" } %>

<% if headers.any? %>
### Headers
<%= partial("partials/parameter_table", :locals => { parameters: headers }) %>
<% end %>
<% end %>

<% if request_body && request_body.content["application/json"] %>
## Request body

The request body is described by the <%= render_schema_type(request_body.content["application/json"].schema) %>
schema which contains the following parameters:

<%
schema = request_body.content["application/json"].schema
body_schema = schema.type.nil? && schema.all_of&.count == 1 ? schema.all_of[0] : schema
body_parameters = get_schema_properties(schema)
%>

<table>
  <thead>
  <tr>
    <th scope="col">Name</th>
    <th scope="col">Type</th>
    <th scope="col">Required</th>
    <th scope="col">Description</th>
  </tr>
  </thead>
  <tbody>
  <% body_parameters.each do |name, parameter| %>
    <tr>
      <td><code class="app-word-break--normal"><%= name %></code></td>
      <td><%= render_schema_type(parameter) %></td>
      <td><%= body_schema.requires?(parameter) %></td>
      <td>
        <%= partial("partials/schema_description", :locals => {
          description: parameter.description,
          schema: parameter
        }) %>
      </td>
    </tr>
  <% end %>
  </tbody>
</table>

### Example request body

<% request_json_content = request_body.content["application/json"]
   request_json_example = json_pretty(request_json_content["example"] ||
                                        schema_example(request_json_content.schema))
%>
```json
<%= request_json_example %>
```
<% end %>

## Example request

To illustrate how to use this API endpoint, we have provided some samples below in various
languages.

<%= partial("partials/tabs", :locals => {
  title: 'Languages',
  tabs: [
    {
      title: "cURL",
      id: "example-request-curl",
      html: partial("partials/request_example_curl", :locals => {
        url: url,
        http_method: http_method,
        body_json: request_json_example
      })
    },
    {
      title: "JavaScript",
      id: "example-request-js",
      html: partial("partials/request_example_js", :locals => {
        url: url,
        http_method: http_method,
        body_json: request_json_example
      })
    },
    {
      title: 'Python',
      id: 'example-request-py',
      html: partial("partials/request_example_py", :locals => {
        url: url,
        http_method: http_method,
        body_json: request_json_example
      })
    },
    {
      title: 'R',
      id: 'example-request-r',
      html: partial("partials/request_example_r", :locals => {
        url: url,
        http_method: http_method,
        body_json: request_json_example
      })
    }
  ]
}) %>

<% if responses.any? %>
## Responses

<table>
  <thead>
  <tr>
    <th scope="col">Status</th>
    <th scope="col">Description</th>
    <th scope="col">Media Type</th>
    <th scope="col">Schema</th>
  </tr>
  </thead>
  <tbody>
<% responses.each do |status, response| %>
<% response.content.each do |media_type, content| %>
    <tr>
      <td><%= status %></td>
      <td><%= render_markdown(response.description) %></td>
      <td>
        <%= media_type %>
      </td>
      <td>
        <%= render_schema_type(content.schema) %>
      </td>
    </tr>
<% end %>
<% end %>
  </tbody>
</table>

<% if responses[200] %>
### Example successful response

<% response = responses[200]
   response_json = response.content["application/json"]
%>

<% if response_json %>
<% if response_json["example"]
     example = json_pretty(response_json["example"])
   else
     example = json_pretty(schema_example(response_json.schema))
   end %>

<% unless example.blank? %>
```json
<%= example %>
```
<% end %>
<% end %>
<% end %>
<% end %>

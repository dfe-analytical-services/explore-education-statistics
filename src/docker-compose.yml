version: "3"
services:
#  data-api:
#    container_name: ees-data
#    build:
#      context: .
#      dockerfile: Dockerfile-Data-Api
#    ports:
#      - "5000:5000"
#      - "5001:5001"
#    environment:
#      ASPNETCORE_ENVIRONMENT: Development
#    depends_on:
#      - db
#      - data-storage
#  content-api:
#    container_name: ees-content
#    build:
#      context: .
#      dockerfile: Dockerfile-Content-Api
#    ports:
#      - "5010:5010"
#      - "5011:5011"
#    environment:
#      ASPNETCORE_ENVIRONMENT: Development
#    depends_on:
#      - data-storage
#  data-storage:
#    container_name: ees-storage
#    image: arafato/azurite
#    ports:
#      - "10000:10000"
#      - "10001:10001"
#      - "10002:10002"
  db:
    container_name: ees-mssql
    image: "mcr.microsoft.com/mssql/server"
    ports:
      - "1433:1433"
    volumes:
      - ../data/ees-mssql:/var/opt/mssql/data
      - ../data/sql-scripts:/scripts/
    environment:
      SA_PASSWORD: "Your_Password123"
      ACCEPT_EULA: "Y"
    command:
      - /bin/bash
      - -c
      - |
        # Launch MSSQL and send to background
        /opt/mssql/bin/sqlservr &
        # Wait 30 seconds for it to be available
        sleep 30

        # Run the setup script to create the two databases
        /opt/mssql-tools/bin/sqlcmd -U sa -P $$SA_PASSWORD -l 30 -e -i /scripts/setup-db.sql

        # So that the container doesn't shut down, sleep this thread
        sleep infinity

// <auto-generated />
using System;
using System.Collections.Generic;
using GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Migrations
{
    [DbContext(typeof(PublicDataDbContext))]
    [Migration("20240424123603_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilterOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetFilterOptions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetFilters");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetIndicators", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetIndicators");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetLocations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetLocations");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetTimePeriods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetTimePeriods");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LatestDraftVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LatestLiveVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PublicationId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Published")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SupersedingDataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Withdrawn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LatestDraftVersionId")
                        .IsUnique();

                    b.HasIndex("LatestLiveVersionId")
                        .IsUnique();

                    b.HasIndex("SupersedingDataSetId");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Published")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("ReleaseFileId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TotalResults")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VersionMajor")
                        .HasColumnType("integer");

                    b.Property<int>("VersionMinor")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("Withdrawn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetId");

                    b.HasIndex("ReleaseFileId");

                    b.ToTable("DataSetVersions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionImport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("DataSetVersionImports");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Hint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId", "PublicId")
                        .IsUnique();

                    b.ToTable("FilterMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool?>("IsAggregate")
                        .HasColumnType("boolean");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("FilterOptionMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaLink", b =>
                {
                    b.Property<int>("MetaId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionId")
                        .HasColumnType("integer");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MetaId", "OptionId");

                    b.HasIndex("OptionId");

                    b.HasIndex("PublicId");

                    b.HasIndex("MetaId", "PublicId")
                        .IsUnique();

                    b.ToTable("FilterOptionMetaLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<List<string>>("Levels")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId")
                        .IsUnique();

                    b.ToTable("GeographicLevelMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("DecimalPlaces")
                        .HasColumnType("smallint");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId", "PublicId")
                        .IsUnique();

                    b.ToTable("IndicatorMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId", "Level")
                        .IsUnique();

                    b.ToTable("LocationMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<string>("LaEstab")
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OldCode")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Ukprn")
                        .HasColumnType("text");

                    b.Property<string>("Urn")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("LaEstab");

                    b.HasIndex("OldCode");

                    b.HasIndex("Type");

                    b.HasIndex("Ukprn");

                    b.HasIndex("Urn");

                    b.HasIndex(new[] { "Type", "Label", "Code", "OldCode", "Urn", "LaEstab", "Ukprn" }, "IX_LocationOptionMetas_All")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.AreNullsDistinct(b.HasIndex(new[] { "Type", "Label", "Code", "OldCode", "Urn", "LaEstab", "Ukprn" }, "IX_LocationOptionMetas_All"), false);

                    b.ToTable("LocationOptionMetas");

                    b.HasDiscriminator<string>("Type").HasValue("LocationOptionMeta");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaLink", b =>
                {
                    b.Property<int>("MetaId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionId")
                        .HasColumnType("integer");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MetaId", "OptionId");

                    b.HasIndex("OptionId");

                    b.HasIndex("PublicId");

                    b.HasIndex("MetaId", "PublicId")
                        .IsUnique();

                    b.ToTable("LocationOptionMetaLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId", "Code", "Period")
                        .IsUnique();

                    b.ToTable("TimePeriodMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationCodedOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("CODE");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationLocalAuthorityOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("LA");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationProviderOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("PROV");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationRscRegionOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("RSC");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationSchoolOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("SCH");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilterOptions", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterOptionChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetFilterOptionsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetFilterOptionsId", "Id");

                            b1.ToTable("ChangeSetFilterOptions");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetFilterOptionsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFilterOptionsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("FilterId")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool?>("IsAggregate")
                                        .HasColumnType("boolean");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFilterOptionsId", "ChangeId");

                                    b2.ToTable("ChangeSetFilterOptions");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFilterOptionsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFilterOptionsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("FilterId")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool?>("IsAggregate")
                                        .HasColumnType("boolean");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFilterOptionsId", "ChangeId");

                                    b2.ToTable("ChangeSetFilterOptions");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFilterOptionsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilters", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetFiltersId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetFiltersId", "Id");

                            b1.ToTable("ChangeSetFilters");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetFiltersId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFiltersId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Hint")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFiltersId", "ChangeId");

                                    b2.ToTable("ChangeSetFilters");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFiltersId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFiltersId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Hint")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFiltersId", "ChangeId");

                                    b2.ToTable("ChangeSetFilters");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFiltersId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetIndicators", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("IndicatorChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetIndicatorsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetIndicatorsId", "Id");

                            b1.ToTable("ChangeSetIndicators");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetIndicatorsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetIndicatorsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<byte?>("DecimalPlaces")
                                        .HasColumnType("smallint");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Unit")
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetIndicatorsId", "ChangeId");

                                    b2.ToTable("ChangeSetIndicators");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetIndicatorsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetIndicatorsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<byte?>("DecimalPlaces")
                                        .HasColumnType("smallint");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Unit")
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetIndicatorsId", "ChangeId");

                                    b2.ToTable("ChangeSetIndicators");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetIndicatorsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetLocations", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("LocationChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetLocationsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetLocationsId", "Id");

                            b1.ToTable("ChangeSetLocations");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetLocationsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetLocationsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Level")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetLocationsId", "ChangeId");

                                    b2.ToTable("ChangeSetLocations");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetLocationsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetLocationsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("Level")
                                        .HasColumnType("integer");

                                    b2.HasKey("ChangeSetLocationsId", "ChangeId");

                                    b2.ToTable("ChangeSetLocations");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetLocationsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetTimePeriods", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("TimePeriodChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetTimePeriodsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetTimePeriodsId", "Id");

                            b1.ToTable("ChangeSetTimePeriods");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetTimePeriodsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetTimePeriodsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("Year")
                                        .HasColumnType("integer");

                                    b2.HasKey("ChangeSetTimePeriodsId", "ChangeId");

                                    b2.ToTable("ChangeSetTimePeriods");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetTimePeriodsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetTimePeriodsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("Year")
                                        .HasColumnType("integer");

                                    b2.HasKey("ChangeSetTimePeriodsId", "ChangeId");

                                    b2.ToTable("ChangeSetTimePeriods");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetTimePeriodsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "LatestDraftVersion")
                        .WithOne()
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "LatestDraftVersionId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "LatestLiveVersion")
                        .WithOne()
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "LatestLiveVersionId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "SupersedingDataSet")
                        .WithMany()
                        .HasForeignKey("SupersedingDataSetId");

                    b.Navigation("LatestDraftVersion");

                    b.Navigation("LatestLiveVersion");

                    b.Navigation("SupersedingDataSet");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "DataSet")
                        .WithMany("Versions")
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionMetaSummary", "MetaSummary", b1 =>
                        {
                            b1.Property<Guid>("DataSetVersionId")
                                .HasColumnType("uuid");

                            b1.Property<List<string>>("Filters")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.Property<List<string>>("GeographicLevels")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.Property<List<string>>("Indicators")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.HasKey("DataSetVersionId");

                            b1.ToTable("DataSetVersions");

                            b1.ToJson("MetaSummary");

                            b1.WithOwner()
                                .HasForeignKey("DataSetVersionId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRange", "TimePeriodRange", b2 =>
                                {
                                    b2.Property<Guid>("DataSetVersionMetaSummaryDataSetVersionId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.ToTable("DataSetVersions");

                                    b2.WithOwner()
                                        .HasForeignKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRangeBound", "End", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Code")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Period")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRangeBound", "Start", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Code")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Period")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.Navigation("End")
                                        .IsRequired();

                                    b2.Navigation("Start")
                                        .IsRequired();
                                });

                            b1.Navigation("TimePeriodRange")
                                .IsRequired();
                        });

                    b.Navigation("DataSet");

                    b.Navigation("MetaSummary")
                        .IsRequired();
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionImport", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("Imports")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaLink", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "Meta")
                        .WithMany("OptionLinks")
                        .HasForeignKey("MetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", "Option")
                        .WithMany("MetaLinks")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meta");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithOne("GeographicLevelMeta")
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", "DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("IndicatorMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("LocationMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaLink", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "Meta")
                        .WithMany("OptionLinks")
                        .HasForeignKey("MetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", "Option")
                        .WithMany("MetaLinks")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meta");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("TimePeriodMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Navigation("FilterChanges");

                    b.Navigation("FilterMetas");

                    b.Navigation("FilterOptionChanges");

                    b.Navigation("GeographicLevelMeta")
                        .IsRequired();

                    b.Navigation("Imports");

                    b.Navigation("IndicatorChanges");

                    b.Navigation("IndicatorMetas");

                    b.Navigation("LocationChanges");

                    b.Navigation("LocationMetas");

                    b.Navigation("TimePeriodChanges");

                    b.Navigation("TimePeriodMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", b =>
                {
                    b.Navigation("OptionLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", b =>
                {
                    b.Navigation("MetaLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", b =>
                {
                    b.Navigation("OptionLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", b =>
                {
                    b.Navigation("MetaLinks");
                });
#pragma warning restore 612, 618
        }
    }
}

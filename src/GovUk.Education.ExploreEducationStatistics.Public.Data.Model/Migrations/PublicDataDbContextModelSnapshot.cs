// <auto-generated />
using System;
using System.Collections.Generic;
using GovUk.Education.ExploreEducationStatistics.Common.Model.Data;
using GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Migrations
{
    [DbContext(typeof(PublicDataDbContext))]
    partial class PublicDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilterOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetFilterOptions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilters", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetFilters");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetIndicators", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetIndicators");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetLocations", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetLocations");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetTimePeriods", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("ChangeSetTimePeriods");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LatestVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PublicationId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Published")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SupersedingDataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Unpublished")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LatestVersionId")
                        .IsUnique();

                    b.HasIndex("SupersedingDataSetId");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetMeta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<string[]>("GeographicLevels")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId")
                        .IsUnique();

                    b.ToTable("DataSetMeta");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CsvFileId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParquetFilename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Published")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TotalResults")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("Unpublished")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VersionMajor")
                        .HasColumnType("integer");

                    b.Property<int>("VersionMinor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DataSetId");

                    b.ToTable("DataSetVersions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilterOptions", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterOptionChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetFilterOptionsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetFilterOptionsId", "Id");

                            b1.ToTable("ChangeSetFilterOptions");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetFilterOptionsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFilterOptionsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<FilterOptionChangeState>Id");

                                    b2.Property<string>("FilterId")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool?>("IsAggregate")
                                        .HasColumnType("boolean");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFilterOptionsId", "ChangeId");

                                    b2.ToTable("ChangeSetFilterOptions");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFilterOptionsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFilterOptionsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<FilterOptionChangeState>Id");

                                    b2.Property<string>("FilterId")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<bool?>("IsAggregate")
                                        .HasColumnType("boolean");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFilterOptionsId", "ChangeId");

                                    b2.ToTable("ChangeSetFilterOptions");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFilterOptionsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetFilters", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetFiltersId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetFiltersId", "Id");

                            b1.ToTable("ChangeSetFilters");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetFiltersId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFiltersId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<FilterChangeState>Id");

                                    b2.Property<string>("Hint")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFiltersId", "ChangeId");

                                    b2.ToTable("ChangeSetFilters");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFiltersId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetFiltersId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<FilterChangeState>Id");

                                    b2.Property<string>("Hint")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetFiltersId", "ChangeId");

                                    b2.ToTable("ChangeSetFilters");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetFiltersId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetIndicators", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("IndicatorChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetIndicatorsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetIndicatorsId", "Id");

                            b1.ToTable("ChangeSetIndicators");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetIndicatorsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetIndicatorsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<IndicatorChangeState>Id");

                                    b2.Property<byte?>("DecimalPlaces")
                                        .HasColumnType("smallint");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Unit")
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetIndicatorsId", "ChangeId");

                                    b2.ToTable("ChangeSetIndicators");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetIndicatorsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetIndicatorsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<IndicatorChangeState>Id");

                                    b2.Property<byte?>("DecimalPlaces")
                                        .HasColumnType("smallint");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Unit")
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetIndicatorsId", "ChangeId");

                                    b2.ToTable("ChangeSetIndicators");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetIndicatorsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetLocations", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("LocationChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetLocationsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetLocationsId", "Id");

                            b1.ToTable("ChangeSetLocations");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetLocationsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetLocationsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<LocationChangeState>Id");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Level")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("ChangeSetLocationsId", "ChangeId");

                                    b2.ToTable("ChangeSetLocations");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetLocationsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetLocationsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<LocationChangeState>Id");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Id")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<GeographicLevel>("Level")
                                        .HasColumnType("geographic_level");

                                    b2.HasKey("ChangeSetLocationsId", "ChangeId");

                                    b2.ToTable("ChangeSetLocations");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetLocationsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.ChangeSetTimePeriods", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("TimePeriodChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Change<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("ChangeSetTimePeriodsId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("ChangeSetTimePeriodsId", "Id");

                            b1.ToTable("ChangeSetTimePeriods");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("ChangeSetTimePeriodsId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodChangeState", "CurrentState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetTimePeriodsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<TimePeriodChangeState>Id");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("Year")
                                        .HasColumnType("integer");

                                    b2.HasKey("ChangeSetTimePeriodsId", "ChangeId");

                                    b2.ToTable("ChangeSetTimePeriods");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetTimePeriodsId", "ChangeId");
                                });

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodChangeState", "PreviousState", b2 =>
                                {
                                    b2.Property<Guid>("ChangeSetTimePeriodsId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("ChangeId")
                                        .HasColumnType("integer")
                                        .HasColumnName("Change<TimePeriodChangeState>Id");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("Year")
                                        .HasColumnType("integer");

                                    b2.HasKey("ChangeSetTimePeriodsId", "ChangeId");

                                    b2.ToTable("ChangeSetTimePeriods");

                                    b2.WithOwner()
                                        .HasForeignKey("ChangeSetTimePeriodsId", "ChangeId");
                                });

                            b1.Navigation("CurrentState");

                            b1.Navigation("PreviousState");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "LatestVersion")
                        .WithOne("DataSet")
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "LatestVersionId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "SupersedingDataSet")
                        .WithMany()
                        .HasForeignKey("SupersedingDataSetId");

                    b.Navigation("LatestVersion");

                    b.Navigation("SupersedingDataSet");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithOne("Meta")
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetMeta", "DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "TimePeriods", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<int>("Year")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("TimePeriods");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");
                        });

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "Filters", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Hint")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("Filters");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");

                            b1.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", "Options", b2 =>
                                {
                                    b2.Property<Guid>("FilterMetaDataSetMetaId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("FilterMetaId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<bool?>("IsAggregate")
                                        .HasColumnType("boolean");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("PrivateId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("PublicId")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("FilterMetaDataSetMetaId", "FilterMetaId", "Id");

                                    b2.ToTable("DataSetMeta");

                                    b2.WithOwner()
                                        .HasForeignKey("FilterMetaDataSetMetaId", "FilterMetaId");
                                });

                            b1.Navigation("Options");
                        });

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", "Indicators", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<byte?>("DecimalPlaces")
                                .HasColumnType("smallint");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Unit")
                                .HasColumnType("text");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("Indicators");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");
                        });

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "Locations", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<GeographicLevel>("Level")
                                .HasColumnType("geographic_level");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("Locations");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");

                            b1.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", "Options", b2 =>
                                {
                                    b2.Property<Guid>("LocationMetaDataSetMetaId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("LocationMetaId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<int>("PrivateId")
                                        .HasColumnType("integer");

                                    b2.Property<string>("PublicId")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LocationMetaDataSetMetaId", "LocationMetaId", "Id");

                                    b2.ToTable("DataSetMeta");

                                    b2.WithOwner()
                                        .HasForeignKey("LocationMetaDataSetMetaId", "LocationMetaId");
                                });

                            b1.Navigation("Options");
                        });

                    b.Navigation("DataSetVersion");

                    b.Navigation("Filters");

                    b.Navigation("Indicators");

                    b.Navigation("Locations");

                    b.Navigation("TimePeriods");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", null)
                        .WithMany("Versions")
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionMetaSummary", "MetaSummary", b1 =>
                        {
                            b1.Property<Guid>("DataSetVersionId")
                                .HasColumnType("uuid");

                            b1.Property<List<string>>("Filters")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.Property<List<GeographicLevel>>("GeographicLevels")
                                .IsRequired()
                                .HasColumnType("geographic_level[]");

                            b1.Property<List<string>>("Indicators")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.HasKey("DataSetVersionId");

                            b1.ToTable("DataSetVersions");

                            b1.ToJson("MetaSummary");

                            b1.WithOwner()
                                .HasForeignKey("DataSetVersionId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRange", "TimePeriodRange", b2 =>
                                {
                                    b2.Property<Guid>("DataSetVersionMetaSummaryDataSetVersionId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.ToTable("DataSetVersions");

                                    b2.WithOwner()
                                        .HasForeignKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "End", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Code")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<int>("Year")
                                                .HasColumnType("integer");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "Start", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Code")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<int>("Year")
                                                .HasColumnType("integer");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.Navigation("End")
                                        .IsRequired();

                                    b2.Navigation("Start")
                                        .IsRequired();
                                });

                            b1.Navigation("TimePeriodRange")
                                .IsRequired();
                        });

                    b.Navigation("MetaSummary")
                        .IsRequired();
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Navigation("DataSet")
                        .IsRequired();

                    b.Navigation("FilterChanges");

                    b.Navigation("FilterOptionChanges");

                    b.Navigation("IndicatorChanges");

                    b.Navigation("LocationChanges");

                    b.Navigation("Meta")
                        .IsRequired();

                    b.Navigation("TimePeriodChanges");
                });
#pragma warning restore 612, 618
        }
    }
}

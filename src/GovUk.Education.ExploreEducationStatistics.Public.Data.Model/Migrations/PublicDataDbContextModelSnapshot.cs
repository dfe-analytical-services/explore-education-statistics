// <auto-generated />
using System;
using System.Collections.Generic;
using GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Migrations
{
    [DbContext(typeof(PublicDataDbContext))]
    partial class PublicDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("PublicationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SupersedingDataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SupersedingDataSetId");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeFilter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("DataSetChangeFilters");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeFilterOption", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("DataSetChangeFilterOptions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeIndicator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("DataSetChangeIndicators");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("DataSetChangeLocations");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeTimePeriod", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("DataSetChangeTimePeriods");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetMeta", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("DataSetMeta");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CsvFileId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ParquetFilename")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Published")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VersionMajor")
                        .HasColumnType("integer");

                    b.Property<int>("VersionMinor")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("DataSetId");

                    b.ToTable("DataSetVersions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "SupersedingDataSet")
                        .WithMany()
                        .HasForeignKey("SupersedingDataSetId");

                    b.Navigation("SupersedingDataSet");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeFilter", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChange<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("DataSetChangeFilterId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<int>("Type")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetChangeFilterId", "Id");

                            b1.ToTable("DataSetChangeFilters");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("DataSetChangeFilterId");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeFilterOption", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterOptionChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChange<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("DataSetChangeFilterOptionId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<int>("Type")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetChangeFilterOptionId", "Id");

                            b1.ToTable("DataSetChangeFilterOptions");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("DataSetChangeFilterOptionId");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeIndicator", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("IndicatorChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChange<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("DataSetChangeIndicatorId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<int>("Type")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetChangeIndicatorId", "Id");

                            b1.ToTable("DataSetChangeIndicators");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("DataSetChangeIndicatorId");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeLocation", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("LocationChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChange<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("DataSetChangeLocationId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<int>("Type")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetChangeLocationId", "Id");

                            b1.ToTable("DataSetChangeLocations");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("DataSetChangeLocationId");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChangeTimePeriod", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("TimePeriodChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetChange<GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodChangeState>", "Changes", b1 =>
                        {
                            b1.Property<Guid>("DataSetChangeTimePeriodId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("Identifier")
                                .HasColumnType("uuid")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<int>("Type")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetChangeTimePeriodId", "Id");

                            b1.ToTable("DataSetChangeTimePeriods");

                            b1.ToJson("Changes");

                            b1.WithOwner()
                                .HasForeignKey("DataSetChangeTimePeriodId");
                        });

                    b.Navigation("Changes");

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany()
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "TimePeriods", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<int>("Code")
                                .HasColumnType("integer");

                            b1.Property<int>("Year")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("TimePeriods");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");
                        });

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "Filters", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<string>("Hint")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("Filters");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");

                            b1.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", "Options", b2 =>
                                {
                                    b2.Property<Guid>("FilterMetaDataSetMetaId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("FilterMetaId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Identifier")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                                    b2.Property<bool?>("IsAggregate")
                                        .HasColumnType("boolean");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("FilterMetaDataSetMetaId", "FilterMetaId", "Id");

                                    b2.ToTable("DataSetMeta");

                                    b2.WithOwner("FilterMeta")
                                        .HasForeignKey("FilterMetaDataSetMetaId", "FilterMetaId");

                                    b2.Navigation("FilterMeta");
                                });

                            b1.Navigation("Options");
                        });

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", "Indicators", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<byte>("DecimalPlaces")
                                .HasColumnType("smallint");

                            b1.Property<string>("Identifier")
                                .IsRequired()
                                .HasColumnType("text")
                                .HasAnnotation("Relational:JsonPropertyName", "Id");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Unit")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("Indicators");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");
                        });

                    b.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "Locations", b1 =>
                        {
                            b1.Property<Guid>("DataSetMetaId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<int>("Level")
                                .HasColumnType("integer");

                            b1.HasKey("DataSetMetaId", "Id");

                            b1.ToTable("DataSetMeta");

                            b1.ToJson("Locations");

                            b1.WithOwner()
                                .HasForeignKey("DataSetMetaId");

                            b1.OwnsMany("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", "Options", b2 =>
                                {
                                    b2.Property<Guid>("LocationMetaDataSetMetaId")
                                        .HasColumnType("uuid");

                                    b2.Property<int>("LocationMetaId")
                                        .HasColumnType("integer");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("integer");

                                    b2.Property<string>("Code")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.Property<string>("Identifier")
                                        .IsRequired()
                                        .HasColumnType("text")
                                        .HasAnnotation("Relational:JsonPropertyName", "Id");

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("text");

                                    b2.HasKey("LocationMetaDataSetMetaId", "LocationMetaId", "Id");

                                    b2.ToTable("DataSetMeta");

                                    b2.WithOwner()
                                        .HasForeignKey("LocationMetaDataSetMetaId", "LocationMetaId");
                                });

                            b1.Navigation("Options");
                        });

                    b.Navigation("DataSetVersion");

                    b.Navigation("Filters");

                    b.Navigation("Indicators");

                    b.Navigation("Locations");

                    b.Navigation("TimePeriods");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "DataSet")
                        .WithMany("Versions")
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionMetaSummary", "MetaSummary", b1 =>
                        {
                            b1.Property<Guid>("DataSetVersionId")
                                .HasColumnType("uuid");

                            b1.Property<List<string>>("Filters")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.Property<int[]>("GeographicLevels")
                                .IsRequired()
                                .HasColumnType("integer[]");

                            b1.Property<List<string>>("Indicators")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.HasKey("DataSetVersionId");

                            b1.ToTable("DataSetVersions");

                            b1.ToJson("MetaSummary");

                            b1.WithOwner()
                                .HasForeignKey("DataSetVersionId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRange", "TimePeriodRange", b2 =>
                                {
                                    b2.Property<Guid>("DataSetVersionMetaSummaryDataSetVersionId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.ToTable("DataSetVersions");

                                    b2.ToJson("TimePeriodRange");

                                    b2.WithOwner()
                                        .HasForeignKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "End", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("Code")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Year")
                                                .HasColumnType("integer");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "Start", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<int>("Code")
                                                .HasColumnType("integer");

                                            b3.Property<int>("Year")
                                                .HasColumnType("integer");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.Navigation("End")
                                        .IsRequired();

                                    b2.Navigation("Start")
                                        .IsRequired();
                                });

                            b1.Navigation("TimePeriodRange")
                                .IsRequired();
                        });

                    b.Navigation("DataSet");

                    b.Navigation("MetaSummary")
                        .IsRequired();
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Navigation("FilterChanges");

                    b.Navigation("FilterOptionChanges");

                    b.Navigation("IndicatorChanges");

                    b.Navigation("LocationChanges");

                    b.Navigation("TimePeriodChanges");
                });
#pragma warning restore 612, 618
        }
    }
}

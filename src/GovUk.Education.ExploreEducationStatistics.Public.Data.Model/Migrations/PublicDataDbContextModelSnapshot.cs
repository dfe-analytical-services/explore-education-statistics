// <auto-generated />
using System;
using System.Collections.Generic;
using GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Migrations
{
    [DbContext(typeof(PublicDataDbContext))]
    partial class PublicDataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.HasSequence<int>("FilterOptionMetaLink_seq");

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("LatestDraftVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("LatestLiveVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("PublicationId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Published")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SupersedingDataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("Withdrawn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("LatestDraftVersionId")
                        .IsUnique();

                    b.HasIndex("LatestLiveVersionId")
                        .IsUnique();

                    b.HasIndex("SupersedingDataSetId");

                    b.ToTable("DataSets");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetId")
                        .HasColumnType("uuid");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Published")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TotalResults")
                        .HasColumnType("bigint");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VersionMajor")
                        .HasColumnType("integer");

                    b.Property<int>("VersionMinor")
                        .HasColumnType("integer");

                    b.Property<int>("VersionPatch")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset?>("Withdrawn")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetId", "VersionMajor", "VersionMinor", "VersionPatch")
                        .IsUnique()
                        .HasDatabaseName("IX_DataSetVersions_DataSetId_VersionNumber");

                    b.ToTable("DataSetVersions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionImport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Completed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("DataSetVersionToReplaceId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("InstanceId")
                        .HasColumnType("uuid");

                    b.Property<string>("Stage")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.HasIndex("DataSetVersionToReplaceId");

                    b.HasIndex("InstanceId")
                        .IsUnique();

                    b.ToTable("DataSetVersionImports");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionMapping", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FilterMappingPlan")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("FilterMappingsComplete")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasDeletedGeographicLevels")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasDeletedIndicators")
                        .HasColumnType("boolean");

                    b.Property<bool>("HasDeletedTimePeriods")
                        .HasColumnType("boolean");

                    b.Property<string>("LocationMappingPlan")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<bool>("LocationMappingsComplete")
                        .HasColumnType("boolean");

                    b.Property<Guid>("SourceDataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TargetDataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("SourceDataSetVersionId")
                        .IsUnique()
                        .HasDatabaseName("IX_DataSetVersionMappings_SourceDataSetVersionId");

                    b.HasIndex("TargetDataSetVersionId")
                        .IsUnique()
                        .HasDatabaseName("IX_DataSetVersionMappings_TargetDataSetVersionId");

                    b.ToTable("DataSetVersionMappings");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("DefaultOptionId")
                        .HasMaxLength(120)
                        .HasColumnType("integer");

                    b.Property<string>("Hint")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DefaultOptionId");

                    b.HasIndex("DataSetVersionId", "Column")
                        .IsUnique();

                    b.HasIndex("DataSetVersionId", "PublicId")
                        .IsUnique();

                    b.ToTable("FilterMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMetaChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CurrentStateId")
                        .HasColumnType("integer");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("PreviousStateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStateId");

                    b.HasIndex("DataSetVersionId");

                    b.HasIndex("PreviousStateId");

                    b.ToTable("FilterMetaChanges");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.HasKey("Id");

                    b.ToTable("FilterOptionMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("FilterOptionMetaChanges");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaLink", b =>
                {
                    b.Property<int>("MetaId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionId")
                        .HasColumnType("integer");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("MetaId", "OptionId");

                    b.HasIndex("OptionId");

                    b.HasIndex("MetaId", "PublicId")
                        .IsUnique();

                    b.ToTable("FilterOptionMetaLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<List<string>>("Levels")
                        .IsRequired()
                        .HasColumnType("text[]");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId")
                        .IsUnique();

                    b.ToTable("GeographicLevelMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMetaChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CurrentStateId")
                        .HasColumnType("integer");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("PreviousStateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStateId");

                    b.HasIndex("DataSetVersionId")
                        .IsUnique();

                    b.HasIndex("PreviousStateId");

                    b.ToTable("GeographicLevelMetaChanges");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Column")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<byte?>("DecimalPlaces")
                        .HasColumnType("smallint");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("character varying(80)");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Unit")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId", "Column")
                        .IsUnique();

                    b.HasIndex("DataSetVersionId", "PublicId")
                        .IsUnique();

                    b.ToTable("IndicatorMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMetaChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CurrentStateId")
                        .HasColumnType("integer");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("PreviousStateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStateId");

                    b.HasIndex("DataSetVersionId");

                    b.HasIndex("PreviousStateId");

                    b.ToTable("IndicatorMetaChanges");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId", "Level")
                        .IsUnique();

                    b.ToTable("LocationMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMetaChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CurrentStateId")
                        .HasColumnType("integer");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("PreviousStateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStateId");

                    b.HasIndex("DataSetVersionId");

                    b.HasIndex("PreviousStateId");

                    b.ToTable("LocationMetaChanges");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasMaxLength(30)
                        .HasColumnType("character varying(30)");

                    b.Property<string>("LaEstab")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("character varying(120)");

                    b.Property<string>("OldCode")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<string>("Ukprn")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Urn")
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("Code");

                    b.HasIndex("LaEstab");

                    b.HasIndex("OldCode");

                    b.HasIndex("Type");

                    b.HasIndex("Ukprn");

                    b.HasIndex("Urn");

                    b.HasIndex(new[] { "Type", "Label", "Code", "OldCode", "Urn", "LaEstab", "Ukprn" }, "IX_LocationOptionMetas_All")
                        .IsUnique();

                    NpgsqlIndexBuilderExtensions.AreNullsDistinct(b.HasIndex(new[] { "Type", "Label", "Code", "OldCode", "Urn", "LaEstab", "Ukprn" }, "IX_LocationOptionMetas_All"), false);

                    b.ToTable("LocationOptionMetas");

                    b.HasDiscriminator<string>("Type").HasValue("LocationOptionMeta");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("LocationOptionMetaChanges");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaLink", b =>
                {
                    b.Property<int>("MetaId")
                        .HasColumnType("integer");

                    b.Property<int>("OptionId")
                        .HasColumnType("integer");

                    b.Property<string>("PublicId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("MetaId", "OptionId");

                    b.HasIndex("OptionId");

                    b.HasIndex("MetaId", "PublicId")
                        .IsUnique();

                    b.ToTable("LocationOptionMetaLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.PreviewToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("CreatedByUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset>("Expiry")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId");

                    b.ToTable("PreviewTokens");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("character varying(9)");

                    b.Property<DateTimeOffset?>("Updated")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DataSetVersionId", "Code", "Period")
                        .IsUnique();

                    b.ToTable("TimePeriodMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMetaChange", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CurrentStateId")
                        .HasColumnType("integer");

                    b.Property<Guid>("DataSetVersionId")
                        .HasColumnType("uuid");

                    b.Property<int?>("PreviousStateId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrentStateId");

                    b.HasIndex("DataSetVersionId");

                    b.HasIndex("PreviousStateId");

                    b.ToTable("TimePeriodMetaChanges");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationCodedOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("CODE");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationLocalAuthorityOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("LA");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationProviderOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("PROV");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationRscRegionOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("RSC");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationSchoolOptionMeta", b =>
                {
                    b.HasBaseType("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta");

                    b.HasDiscriminator().HasValue("SCH");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "LatestDraftVersion")
                        .WithOne()
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "LatestDraftVersionId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "LatestLiveVersion")
                        .WithOne()
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "LatestLiveVersionId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "SupersedingDataSet")
                        .WithMany()
                        .HasForeignKey("SupersedingDataSetId");

                    b.Navigation("LatestDraftVersion");

                    b.Navigation("LatestLiveVersion");

                    b.Navigation("SupersedingDataSet");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", "DataSet")
                        .WithMany("Versions")
                        .HasForeignKey("DataSetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionMetaSummary", "MetaSummary", b1 =>
                        {
                            b1.Property<Guid>("DataSetVersionId")
                                .HasColumnType("uuid");

                            b1.Property<List<string>>("Filters")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.Property<List<string>>("GeographicLevels")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.Property<List<string>>("Indicators")
                                .IsRequired()
                                .HasColumnType("text[]");

                            b1.HasKey("DataSetVersionId");

                            b1.ToTable("DataSetVersions");

                            b1.ToJson("MetaSummary");

                            b1.WithOwner()
                                .HasForeignKey("DataSetVersionId");

                            b1.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRange", "TimePeriodRange", b2 =>
                                {
                                    b2.Property<Guid>("DataSetVersionMetaSummaryDataSetVersionId")
                                        .HasColumnType("uuid");

                                    b2.HasKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.ToTable("DataSetVersions");

                                    b2.WithOwner()
                                        .HasForeignKey("DataSetVersionMetaSummaryDataSetVersionId");

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRangeBound", "End", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Code")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Period")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodRangeBound", "Start", b3 =>
                                        {
                                            b3.Property<Guid>("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId")
                                                .HasColumnType("uuid");

                                            b3.Property<string>("Code")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.Property<string>("Period")
                                                .IsRequired()
                                                .HasColumnType("text");

                                            b3.HasKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");

                                            b3.ToTable("DataSetVersions");

                                            b3.WithOwner()
                                                .HasForeignKey("TimePeriodRangeDataSetVersionMetaSummaryDataSetVersionId");
                                        });

                                    b2.Navigation("End")
                                        .IsRequired();

                                    b2.Navigation("Start")
                                        .IsRequired();
                                });

                            b1.Navigation("TimePeriodRange")
                                .IsRequired();
                        });

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.Release", "Release", b1 =>
                        {
                            b1.Property<Guid>("DataSetVersionId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("DataSetFileId")
                                .HasColumnType("uuid");

                            b1.Property<Guid>("ReleaseFileId")
                                .HasColumnType("uuid");

                            b1.Property<string>("Slug")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("DataSetVersionId");

                            b1.HasIndex("DataSetFileId");

                            b1.HasIndex("ReleaseFileId")
                                .IsUnique();

                            b1.ToTable("DataSetVersions");

                            b1.WithOwner()
                                .HasForeignKey("DataSetVersionId");
                        });

                    b.Navigation("DataSet");

                    b.Navigation("MetaSummary");

                    b.Navigation("Release")
                        .IsRequired();
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionImport", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("Imports")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersionToReplace")
                        .WithMany()
                        .HasForeignKey("DataSetVersionToReplaceId");

                    b.Navigation("DataSetVersion");

                    b.Navigation("DataSetVersionToReplace");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersionMapping", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "SourceDataSetVersion")
                        .WithMany()
                        .HasForeignKey("SourceDataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "TargetDataSetVersion")
                        .WithMany()
                        .HasForeignKey("TargetDataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SourceDataSetVersion");

                    b.Navigation("TargetDataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", "DefaultOption")
                        .WithMany()
                        .HasForeignKey("DefaultOptionId");

                    b.Navigation("DataSetVersion");

                    b.Navigation("DefaultOption");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMetaChange", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "CurrentState")
                        .WithMany()
                        .HasForeignKey("CurrentStateId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterMetaChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "PreviousState")
                        .WithMany()
                        .HasForeignKey("PreviousStateId");

                    b.Navigation("CurrentState");

                    b.Navigation("DataSetVersion");

                    b.Navigation("PreviousState");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaChange", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("FilterOptionMetaChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaChange+State", "CurrentState", b1 =>
                        {
                            b1.Property<long>("FilterOptionMetaChangeId")
                                .HasColumnType("bigint");

                            b1.Property<int>("MetaId")
                                .HasColumnType("integer");

                            b1.Property<int>("OptionId")
                                .HasColumnType("integer");

                            b1.Property<string>("PublicId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("FilterOptionMetaChangeId");

                            b1.HasIndex("MetaId");

                            b1.HasIndex("OptionId");

                            b1.ToTable("FilterOptionMetaChanges");

                            b1.WithOwner()
                                .HasForeignKey("FilterOptionMetaChangeId");

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "Meta")
                                .WithMany()
                                .HasForeignKey("MetaId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", "Option")
                                .WithMany()
                                .HasForeignKey("OptionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Meta");

                            b1.Navigation("Option");
                        });

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaChange+State", "PreviousState", b1 =>
                        {
                            b1.Property<long>("FilterOptionMetaChangeId")
                                .HasColumnType("bigint");

                            b1.Property<int>("MetaId")
                                .HasColumnType("integer");

                            b1.Property<int>("OptionId")
                                .HasColumnType("integer");

                            b1.Property<string>("PublicId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("FilterOptionMetaChangeId");

                            b1.HasIndex("MetaId");

                            b1.HasIndex("OptionId");

                            b1.ToTable("FilterOptionMetaChanges");

                            b1.WithOwner()
                                .HasForeignKey("FilterOptionMetaChangeId");

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "Meta")
                                .WithMany()
                                .HasForeignKey("MetaId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", "Option")
                                .WithMany()
                                .HasForeignKey("OptionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Meta");

                            b1.Navigation("Option");
                        });

                    b.Navigation("CurrentState");

                    b.Navigation("DataSetVersion");

                    b.Navigation("PreviousState");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMetaLink", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", "Meta")
                        .WithMany("OptionLinks")
                        .HasForeignKey("MetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", "Option")
                        .WithMany("MetaLinks")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meta");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithOne("GeographicLevelMeta")
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", "DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMetaChange", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", "CurrentState")
                        .WithMany()
                        .HasForeignKey("CurrentStateId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithOne("GeographicLevelMetaChange")
                        .HasForeignKey("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMetaChange", "DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.GeographicLevelMeta", "PreviousState")
                        .WithMany()
                        .HasForeignKey("PreviousStateId");

                    b.Navigation("CurrentState");

                    b.Navigation("DataSetVersion");

                    b.Navigation("PreviousState");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("IndicatorMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMetaChange", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", "CurrentState")
                        .WithMany()
                        .HasForeignKey("CurrentStateId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("IndicatorMetaChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.IndicatorMeta", "PreviousState")
                        .WithMany()
                        .HasForeignKey("PreviousStateId");

                    b.Navigation("CurrentState");

                    b.Navigation("DataSetVersion");

                    b.Navigation("PreviousState");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("LocationMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMetaChange", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "CurrentState")
                        .WithMany()
                        .HasForeignKey("CurrentStateId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("LocationMetaChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "PreviousState")
                        .WithMany()
                        .HasForeignKey("PreviousStateId");

                    b.Navigation("CurrentState");

                    b.Navigation("DataSetVersion");

                    b.Navigation("PreviousState");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaChange", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("LocationOptionMetaChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaChange+State", "CurrentState", b1 =>
                        {
                            b1.Property<long>("LocationOptionMetaChangeId")
                                .HasColumnType("bigint");

                            b1.Property<int>("MetaId")
                                .HasColumnType("integer");

                            b1.Property<int>("OptionId")
                                .HasColumnType("integer");

                            b1.Property<string>("PublicId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("LocationOptionMetaChangeId");

                            b1.HasIndex("MetaId");

                            b1.HasIndex("OptionId");

                            b1.ToTable("LocationOptionMetaChanges");

                            b1.WithOwner()
                                .HasForeignKey("LocationOptionMetaChangeId");

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "Meta")
                                .WithMany()
                                .HasForeignKey("MetaId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", "Option")
                                .WithMany()
                                .HasForeignKey("OptionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Meta");

                            b1.Navigation("Option");
                        });

                    b.OwnsOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaChange+State", "PreviousState", b1 =>
                        {
                            b1.Property<long>("LocationOptionMetaChangeId")
                                .HasColumnType("bigint");

                            b1.Property<int>("MetaId")
                                .HasColumnType("integer");

                            b1.Property<int>("OptionId")
                                .HasColumnType("integer");

                            b1.Property<string>("PublicId")
                                .IsRequired()
                                .HasColumnType("text");

                            b1.HasKey("LocationOptionMetaChangeId");

                            b1.HasIndex("MetaId");

                            b1.HasIndex("OptionId");

                            b1.ToTable("LocationOptionMetaChanges");

                            b1.WithOwner()
                                .HasForeignKey("LocationOptionMetaChangeId");

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "Meta")
                                .WithMany()
                                .HasForeignKey("MetaId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", "Option")
                                .WithMany()
                                .HasForeignKey("OptionId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.Navigation("Meta");

                            b1.Navigation("Option");
                        });

                    b.Navigation("CurrentState");

                    b.Navigation("DataSetVersion");

                    b.Navigation("PreviousState");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMetaLink", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", "Meta")
                        .WithMany("OptionLinks")
                        .HasForeignKey("MetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", "Option")
                        .WithMany("MetaLinks")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Meta");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.PreviewToken", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("PreviewTokens")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("TimePeriodMetas")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DataSetVersion");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMetaChange", b =>
                {
                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "CurrentState")
                        .WithMany()
                        .HasForeignKey("CurrentStateId");

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", "DataSetVersion")
                        .WithMany("TimePeriodMetaChanges")
                        .HasForeignKey("DataSetVersionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.TimePeriodMeta", "PreviousState")
                        .WithMany()
                        .HasForeignKey("PreviousStateId");

                    b.Navigation("CurrentState");

                    b.Navigation("DataSetVersion");

                    b.Navigation("PreviousState");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSet", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.DataSetVersion", b =>
                {
                    b.Navigation("FilterMetaChanges");

                    b.Navigation("FilterMetas");

                    b.Navigation("FilterOptionMetaChanges");

                    b.Navigation("GeographicLevelMeta");

                    b.Navigation("GeographicLevelMetaChange");

                    b.Navigation("Imports");

                    b.Navigation("IndicatorMetaChanges");

                    b.Navigation("IndicatorMetas");

                    b.Navigation("LocationMetaChanges");

                    b.Navigation("LocationMetas");

                    b.Navigation("LocationOptionMetaChanges");

                    b.Navigation("PreviewTokens");

                    b.Navigation("TimePeriodMetaChanges");

                    b.Navigation("TimePeriodMetas");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterMeta", b =>
                {
                    b.Navigation("OptionLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.FilterOptionMeta", b =>
                {
                    b.Navigation("MetaLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationMeta", b =>
                {
                    b.Navigation("OptionLinks");
                });

            modelBuilder.Entity("GovUk.Education.ExploreEducationStatistics.Public.Data.Model.LocationOptionMeta", b =>
                {
                    b.Navigation("MetaLinks");
                });
#pragma warning restore 612, 618
        }
    }
}

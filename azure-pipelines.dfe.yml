variables:
  BuildConfiguration: 'Release'
  CI: true
  PNPM_VERSION: 7.26.0
  NODE_VERSION: 16.14.2
  DOTNET_VERSION: 6.0.x

trigger:
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
    - infrastructure/
pr: [ 'master', 'dev' ]

jobs:
  - job: 'Backend'
    pool:
      vmImage: 'windows-2022'

    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK'
        inputs:
          version: $(DOTNET_VERSION)
          performMultiLevelLookup: true

      - task: 'DotNetCoreCLI@2'
        displayName: 'Restore'
        inputs:
          command: 'restore'
          projects: '**/GovUk.*/*csproj'
          feedsToUse: config
          nugetConfigPath: src/nuget.config

      - task: 'DotNetCoreCLI@2'
        displayName: 'Build'
        inputs:
          projects: '**/GovUk.*/*csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Test'
        inputs:
          command: 'test'
          projects: '**/GovUk.*[Tt]ests/*.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Data API'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Data.Api.csproj'
          arguments: '--self-contained true -r win-x64 --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/public-api'
          zipAfterPublish: True

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Content API'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Content.Api.csproj'
          arguments: '--self-contained true -r win-x64 --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/public-api'
          zipAfterPublish: True

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Public APIs Artifacts'
        inputs:
          artifactName: 'public-api'
          targetPath: '$(Build.ArtifactStagingDirectory)/public-api'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Notifier Function'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Notifier.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/notifier'
          zipAfterPublish: True

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Notifier Artifacts'
        inputs:
          artifactName: 'notifier'
          targetPath: '$(Build.ArtifactStagingDirectory)/notifier'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Publisher Function'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Publisher.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/publisher'
          zipAfterPublish: True

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Publisher Artifacts'
        inputs:
          artifactName: 'publisher'
          targetPath: '$(Build.ArtifactStagingDirectory)/publisher'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Processor Function'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Data.Processor.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)/processor'
          zipAfterPublish: True

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Processor Artifacts'
        inputs:
          artifactName: 'processor'
          targetPath: '$(Build.ArtifactStagingDirectory)/processor'

  - job: 'Admin'
    pool:
      vmImage: 'ubuntu-20.04'
      demands:
        - azureps

    steps:
      - task: NodeTool@0
        displayName: 'Install Node.js $(NODE_VERSION)'
        inputs:
          versionSpec: $(NODE_VERSION)

      - task: 'Bash@3'
        displayName: 'Install PNPM'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'npm i -g pnpm@$(PNPM_VERSION)'

      - task: UseDotNet@2
        displayName: 'Install .NET Core SDK'
        inputs:
          version: $(DOTNET_VERSION)
          performMultiLevelLookup: true

      - task: 'DotNetCoreCLI@2'
        displayName: 'Restore'
        inputs:
          command: 'restore'
          projects: '**/GovUk.Education.ExploreEducationStatistics.Admin.csproj'
          feedsToUse: config
          nugetConfigPath: src/nuget.config

      - task: 'DotNetCoreCLI@2'
        displayName: 'Build'
        inputs:
          projects: '**/GovUk.Education.ExploreEducationStatistics.Admin.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Test'
        inputs:
          command: 'test'
          projects: '**/GovUk.Education.ExploreEducationStatistics.Admin.Tests.csproj'
          arguments: '--configuration $(BuildConfiguration) --collect "Code coverage"'

      - task: 'Bash@3'
        displayName: 'pnpm i'
        inputs:
          targetType: 'inline'
          script: 'pnpm i'

      - task: 'Bash@3'
        displayName: 'pnpm format'
        inputs:
          targetType: 'inline'
          script: 'pnpm format'

      - task: 'Bash@3'
        displayName: 'pnpm run build'
        inputs:
          targetType: 'inline'
          script: 'pnpm --filter=explore-education-statistics-admin run build'

      - task: CopyFiles@2
        displayName: 'Copy files to wwwroot'
        inputs:
          SourceFolder: 'src/explore-education-statistics-admin/build'
          TargetFolder: src/GovUk.Education.ExploreEducationStatistics.Admin/wwwroot

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Admin.csproj'
          arguments: '--self-contained true -r win-x64 --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Admin Artifact'
        inputs:
          artifactName: 'Admin'
          targetPath: '$(Build.ArtifactStagingDirectory)'

  - job: 'Frontend'
    pool:
      vmImage: 'ubuntu-20.04'
      demands: azureps

    steps:
      - task: NodeTool@0
        displayName: 'Install Node.js $(NODE_VERSION)'
        inputs:
          versionSpec: $(NODE_VERSION)

      - task: 'Bash@3'
        displayName: 'Install PNPM'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'npm i -g pnpm@$(PNPM_VERSION)'

      - task: 'Bash@3'
        displayName: 'pnpm i'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm i'

      - task: 'Bash@3'
        displayName: 'pnpm tsc'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm tsc'

      - task: 'Bash@3'
        displayName: 'pnpm lint'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm lint'

      - task: 'Bash@3'
        displayName: 'pnpm format:check'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm format:check'

      - task: 'Bash@3'
        displayName: 'pnpm test:ci'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm test:ci'

      - task: 'PublishTestResults@2'
        displayName: 'Publish frontend test results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'explore-education-statistics-*/junit-*.xml'
          searchFolder: './src'
          testRunTitle: 'Release Jest tests'
          mergeTestResults: true

      - task: 'Bash@3'
        displayName: 'pnpm run build'
        inputs:
          targetType: 'inline'
          script: 'pnpm --filter=explore-education-statistics-frontend run build'

      - task: 'Bash@3'
        displayName: 'Remove dev dependencies'
        inputs:
          targetType: 'inline'
          script: 'rm -rf ./src/**/node_modules'

      - task: 'Bash@3'
        displayName: 'Install prod dependencies'
        inputs:
          targetType: 'inline'
          script: 'pnpm i --filter=explore-education-statistics-frontend --prod'

      - task: 'ArchiveFiles@2'
        displayName: 'Archive frontend'
        inputs:
          rootFolderOrFile: './src/explore-education-statistics-frontend'
          includeRootFolder: false
          archiveFile: '$(Build.ArtifactStagingDirectory)/public-frontend.zip'

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Pipeline Artifact'
        inputs:
          artifactName: 'public-frontend'
          targetPath: '$(Build.ArtifactStagingDirectory)'

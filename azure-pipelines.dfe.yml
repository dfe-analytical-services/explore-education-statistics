parameters:
  - name: DeployBranches
    displayName: Branches that should be deployed
    type: object
    default:
      - master
      - dev

variables:
  BuildConfiguration: 'Release'
  IsBranchDeployable: ${{ containsValue(parameters.DeployBranches, variables['Build.SourceBranchName']) }}
  CI: true
  NODE_VERSION: 18.18.2

trigger:
  branches:
    include:
      - master
      - dev
  paths:
    exclude:
      - infrastructure/
pr:
  - master
  - dev

jobs:
  - job: 'Backend'
    pool: 'ees-ubuntu2204-large'
    workspace:
      clean: all
    steps:
      - task: UseDotNet@2
        displayName: 'Install .NET 8.0 SDK'
        inputs:
          version: 8.0.x
          performMultiLevelLookup: true

      - task: UseDotNet@2
        displayName: 'Install .NET 6.0 SDK'
        inputs:
          version: 6.0.x
          performMultiLevelLookup: true

      - task: 'DotNetCoreCLI@2'
        displayName: 'Build'
        inputs:
          projects: |
            **/GovUk.*/*csproj
            !**/GovUk.Education.ExploreEducationStatistics.Admin/*csproj
          arguments: '--configuration $(BuildConfiguration)'

      # TODO: Uncomment this step once formatter has been run globally.
      # This is because whitespace rules cannot be warnings or suggestions; they will always be errors
      # - task: DotNetCoreCLI@2
      #   displayName: 'Verify Formatting and Style'
      #   inputs:
      #     command: 'custom'
      #     custom: 'format whitespace src/GovUk.Education.ExploreEducationStatistics.sln --verify-no-changes --severity error'
      #     arguments: '--verify-no-changes --verbosity diagnostic'

      - task: DotNetCoreCLI@2
        displayName: 'Verify Formatting and Style'
        inputs:
          command: 'custom'
          custom: 'format'
          ## TODO: Remove "--severity error" once style formatter has been run across project
          arguments: 'style --verify-no-changes --verbosity diagnostic --severity error'
          projects: 'src/GovUk.Education.ExploreEducationStatistics.sln'

      - task: DotNetCoreCLI@2
        displayName: 'Verify Formatting and Style'
        inputs:
          command: 'custom'
          custom: 'format'
          ## TODO: Remove "--severity error" once work has been done to resolve build warnings (https://dfedigital.atlassian.net/browse/EES-4594).
          arguments: 'analyzers --verify-no-changes --verbosity diagnostic --severity error'
          projects: 'src/GovUk.Education.ExploreEducationStatistics.sln'

      # TODO: Wrap these ^ three tasks up into a single `dotnet format` task once all 3 above TODOs are TO-DONE ;)

      - task: 'DotNetCoreCLI@2'
        displayName: 'Test'
        inputs:
          command: 'test'
          projects: |
            **/GovUk.*[Tt]ests/*.csproj
            !**/GovUk.Education.ExploreEducationStatistics.Admin.Tests/*csproj
          arguments: '--configuration $(BuildConfiguration)'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Data API'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Data.Api.csproj'
          arguments: '--self-contained true -r win-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/public-api'
          zipAfterPublish: True

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Content API'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Content.Api.csproj'
          arguments: '--self-contained true -r win-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/public-api'
          zipAfterPublish: True

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Public API - API project'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Public.Data.Api.csproj'
          arguments: '-r linux-musl-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/public-api/api'
          zipAfterPublish: False

      - task: Docker@2
        displayName: 'Build Public API - API Docker image'
        condition: eq(variables.IsBranchDeployable, true)
        inputs:
          containerRegistry: 's101d-datahub-spn-ees-dfe-gov-uk-docker-managed-service-connection'
          repository: 'ees-public-api/api'
          command: 'build'
          Dockerfile: 'docker/public-api/api/Dockerfile'
          buildContext: '$(Build.ArtifactStagingDirectory)/public-api/api/GovUk.Education.ExploreEducationStatistics.Public.Data.Api'
          tags: $(Build.BuildNumber)
          arguments: '--build-arg BUILD_BUILDNUMBER=$(Build.BuildNumber)'
        env:
          DOCKER_BUILDKIT: 1

      - task: Docker@2
        displayName: 'Push Public API - API Docker image'
        condition: eq(variables.IsBranchDeployable, true)
        inputs:
          containerRegistry: 's101d-datahub-spn-ees-dfe-gov-uk-docker-managed-service-connection'
          repository: 'ees-public-api/api'
          command: 'push'
          Dockerfile: 'docker/public-api/api/Dockerfile'
          buildContext: '$(System.ArtifactStagingDirectory)/public-api/api'
          tags: $(Build.BuildNumber)

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Notifier Function'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Notifier.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/notifier'
          zipAfterPublish: True

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Notifier Artifacts'
        inputs:
          artifactName: 'notifier'
          targetPath: '$(Build.ArtifactStagingDirectory)/notifier'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Publisher Function'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Publisher.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/publisher'
          zipAfterPublish: True

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Publisher Artifacts'
        inputs:
          artifactName: 'publisher'
          targetPath: '$(Build.ArtifactStagingDirectory)/publisher'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish Processor Function'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Data.Processor.csproj'
          arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)/processor'
          zipAfterPublish: True

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Processor Artifacts'
        inputs:
          artifactName: 'processor'
          targetPath: '$(Build.ArtifactStagingDirectory)/processor'

  - job: 'Admin'
    pool: 'ees-ubuntu2204-xlarge'
    workspace:
      clean: all
    steps:
      - task: NodeTool@0
        displayName: 'Install Node.js $(NODE_VERSION)'
        inputs:
          versionSpec: $(NODE_VERSION)

      - task: 'Bash@3'
        displayName: 'corepack enable'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'corepack enable'

      - task: UseDotNet@2
        displayName: 'Install .NET 6.0 SDK'
        inputs:
          version: 6.0.x
          performMultiLevelLookup: true

      - task: 'DotNetCoreCLI@2'
        displayName: 'Build'
        inputs:
          projects: '**/GovUk.Education.ExploreEducationStatistics.Admin.csproj'
          arguments: '--configuration $(BuildConfiguration)'

      - task: 'DotNetCoreCLI@2'
        displayName: 'Test'
        inputs:
          command: 'test'
          projects: '**/GovUk.Education.ExploreEducationStatistics.Admin.Tests.csproj'
          arguments: '--configuration $(BuildConfiguration) --collect "Code coverage"'

      - task: 'Bash@3'
        displayName: 'pnpm i'
        inputs:
          targetType: 'inline'
          script: 'pnpm i'

      - task: 'Bash@3'
        displayName: 'pnpm run build'
        inputs:
          targetType: 'inline'
          script: 'pnpm --filter=explore-education-statistics-admin run build'

      - task: CopyFiles@2
        displayName: 'Copy files to wwwroot'
        inputs:
          SourceFolder: 'src/explore-education-statistics-admin/build'
          TargetFolder: src/GovUk.Education.ExploreEducationStatistics.Admin/wwwroot

      - task: 'DotNetCoreCLI@2'
        displayName: 'Publish'
        inputs:
          command: 'publish'
          publishWebProjects: false
          projects: '**/GovUk.Education.ExploreEducationStatistics.Admin.csproj'
          arguments: '--self-contained true -r win-x64 --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'

      - task: 'PublishPipelineArtifact@0'
        displayName: 'Publish Admin Artifact'
        inputs:
          artifactName: 'Admin'
          targetPath: '$(Build.ArtifactStagingDirectory)'

  - job: 'Frontend'
    pool: 'ees-ubuntu2204-xlarge'
    workspace:
      clean: all
    steps:
      - task: NodeTool@0
        displayName: 'Install Node.js $(NODE_VERSION)'
        inputs:
          versionSpec: $(NODE_VERSION)

      - task: 'Bash@3'
        displayName: 'corepack enable'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'corepack enable'

      - task: 'Bash@3'
        displayName: 'pnpm i'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm i'

      - task: 'Bash@3'
        displayName: 'pnpm tsc'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm tsc'

      - task: 'Bash@3'
        displayName: 'pnpm lint'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm lint'

      - task: 'Bash@3'
        displayName: 'pnpm format:check'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm format:check'

      - task: 'Bash@3'
        displayName: 'pnpm test:ci'
        inputs:
          workingDir: '.'
          targetType: 'inline'
          script: 'pnpm test:ci'

      - task: 'PublishTestResults@2'
        displayName: 'Publish frontend test results'
        inputs:
          testResultsFormat: 'JUnit'
          testResultsFiles: 'explore-education-statistics-*/junit-*.xml'
          searchFolder: './src'
          testRunTitle: 'Release Jest tests'
          mergeTestResults: true

      - task: 'Bash@3'
        displayName: 'pnpm run build'
        inputs:
          targetType: 'inline'
          script: 'pnpm --filter=explore-education-statistics-frontend run build'

      - task: Docker@2
        displayName: 'Build public frontend Docker image'
        condition: eq(variables.IsBranchDeployable, true)
        inputs:
          containerRegistry: 's101d-datahub-spn-ees-dfe-gov-uk-docker-managed-service-connection'
          repository: 'ees-public-frontend'
          command: 'build'
          Dockerfile: 'docker/public-frontend/Dockerfile'
          buildContext: '$(System.DefaultWorkingDirectory)'
          tags: $(Build.BuildNumber)
          arguments: '--build-arg BUILD_BUILDNUMBER=$(Build.BuildNumber)'
        env:
          DOCKER_BUILDKIT: 1

      - task: Docker@2
        displayName: 'Push public frontend Docker image'
        condition: eq(variables.IsBranchDeployable, true)
        inputs:
          containerRegistry: 's101d-datahub-spn-ees-dfe-gov-uk-docker-managed-service-connection'
          repository: 'ees-public-frontend'
          command: 'push'
          Dockerfile: 'docker/public-frontend/Dockerfile'
          buildContext: '$(System.DefaultWorkingDirectory)'
          tags: $(Build.BuildNumber)

  - job: 'MiscellaneousArtifacts'
    pool:
      vmImage: 'ubuntu-22.04'
    workspace:
      clean: all
    steps:
      - task: CopyFiles@2
        displayName: 'Copy Pipfiles to tests'
        inputs:
          Contents: |
            Pipfile
            Pipfile.lock
          TargetFolder: 'tests'

      - task: PublishPipelineArtifact@0
        displayName: 'Publish test files'
        inputs:
          artifactName: 'tests'
          targetPath: 'tests'

variables:
  SPN_NAME: s101d-datahub-spn-ees-dfe-gov-uk
schedules:
- cron: 0 6 * * 1,2,3,4,5
  branches:
    include:
    - dev
  always: true
pr: none

name: $(date:yyyyMMdd)$(rev:.r)
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/dev

jobs:
- job: 'Public'
  displayName: Public suite - Robot UI tests
  timeoutInMinutes: 160
  cancelTimeoutInMinutes: 10
  condition: succeededOrFailed()
  pool: ees-ubuntu2204-large
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    fetchDepth: 5
    fetchTags: false

  - task: UsePythonVersion@0
    displayName: Use Python 3.10
    timeoutInMinutes: 5
    inputs:
      versionSpec: 3.10

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: s101d01-kv-ees-01'
    inputs:
      azureSubscription: $(SPN_NAME)
      KeyVaultName: s101d01-kv-ees-01
      SecretsFilter: ees-alerts-slackapptoken
      RunAsPreJob: true

  - task: PythonScript@0
    displayName: Public UI tests
    inputs:
      scriptPath: tests/robot-tests/scripts/run_tests_pipeline.py
      arguments: --admin-pass "test" --analyst-pass "test" --expiredinvite-pass "test" --noinvite-pass "test" --pendinginvite-pass "test" --env "dev" --file "tests/general_public/" --processes 4 --rerun-attempts 3
      workingDirectory: tests/robot-tests
    env:
      SLACK_APP_TOKEN: $(ees-alerts-slackapptoken)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: tests/robot-tests/test-results/xunit.xml
      failTaskOnFailedTests: true

  - task: PublishPipelineArtifact@1
    displayName: Publish Test Pipeline Artifact
    condition: succeededOrFailed()
    inputs:
      path: tests/robot-tests/test-results/
      artifactName: test-results-public

- job: 'PublishAndAmend'
  displayName: Publish release and amend suites - Robot UI tests
  timeoutInMinutes: 160
  cancelTimeoutInMinutes: 10
  condition: succeededOrFailed()
  pool: ees-ubuntu2204-large
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    fetchDepth: 5
    fetchTags: false

  - task: UsePythonVersion@0
    displayName: Use Python 3.10
    timeoutInMinutes: 5
    inputs:
      versionSpec: 3.10

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: s101d01-kv-ees-01'
    inputs:
      azureSubscription: $(SPN_NAME)
      KeyVaultName: s101d01-kv-ees-01
      SecretsFilter: ees-test-ADMIN-PASSWORD,ees-test-ANALYST-PASSWORD,ees-test-expiredinvite-password,ees-test-NOINVITE-PASSWORD,ees-test-PENDINGINVITE-PASSWORD,ees-alerts-slackapptoken
      RunAsPreJob: true

  - task: PythonScript@0
    displayName: Publish release and amend UI tests
    condition: succeededOrFailed()
    inputs:
      scriptPath: tests/robot-tests/scripts/run_tests_pipeline.py
      arguments: --admin-pass '"$(ees-test-ADMIN-PASSWORD)"' --analyst-pass '"$(ees-test-ANALYST-PASSWORD)"' --expiredinvite-pass '"$(ees-test-expiredinvite-password)"' --noinvite-pass '"$(ees-test-NOINVITE-PASSWORD)"' --pendinginvite-pass '"$(ees-test-PENDINGINVITE-PASSWORD)"' --env "dev" --file "tests/admin_and_public_2" --processes 4 --rerun-attempts 3
    #  The magic incantation '"$(variable)"'was added by Mark to resolve an issue with Analyst password that contained ampersands.
      workingDirectory: tests/robot-tests
    env:
      SLACK_APP_TOKEN: $(ees-alerts-slackapptoken)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFiles: tests/robot-tests/test-results/xunit.xml
      failTaskOnFailedTests: true

  - task: PublishPipelineArtifact@1
    displayName: Publish Pipeline Artifact
    condition: succeededOrFailed()
    inputs:
      path: tests/robot-tests/test-results/
      artifactName: test-results-admin-and-public-2


- job: 'Admin'
  displayName: Admin suites - Robot UI tests
  timeoutInMinutes: 160
  cancelTimeoutInMinutes: 10
  condition: succeededOrFailed()
  pool: ees-ubuntu2204-large
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    fetchDepth: 5
    fetchTags: false

  - task: UsePythonVersion@0
    displayName: Use Python 3.10
    timeoutInMinutes: 5
    inputs:
      versionSpec: 3.10

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: s101d01-kv-ees-01'
    inputs:
      azureSubscription: $(SPN_NAME)
      KeyVaultName: s101d01-kv-ees-01
      SecretsFilter: ees-test-ADMIN-PASSWORD,ees-test-ANALYST-PASSWORD,ees-test-expiredinvite-password,ees-test-NOINVITE-PASSWORD,ees-test-PENDINGINVITE-PASSWORD,ees-alerts-slackapptoken
      RunAsPreJob: true

  - task: PythonScript@0
    displayName: Admin UI tests
    condition: succeededOrFailed()
    inputs:
      scriptPath: tests/robot-tests/scripts/run_tests_pipeline.py
      arguments: --admin-pass '"$(ees-test-ADMIN-PASSWORD)"' --analyst-pass '"$(ees-test-ANALYST-PASSWORD)"' --expiredinvite-pass '"$(ees-test-expiredinvite-password)"' --noinvite-pass '"$(ees-test-NOINVITE-PASSWORD)"' --pendinginvite-pass '"$(ees-test-PENDINGINVITE-PASSWORD)"' --env "dev" --file "tests/admin" --processes 4 --rerun-attempts 3
      workingDirectory: tests/robot-tests
    env:
      SLACK_APP_TOKEN: $(ees-alerts-slackapptoken)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    condition: succeededOrFailed()
    inputs:
      testResultsFiles: tests/robot-tests/test-results/xunit.xml
      failTaskOnFailedTests: true

  - task: PublishPipelineArtifact@1
    displayName: Publish Test Pipeline Artifact
    condition: succeededOrFailed()
    inputs:
      path: tests/robot-tests/test-results/
      artifactName: test-results-admin

- job: 'AdminAndPublic'
  displayName: Admin & public suites - Robot UI tests
  timeoutInMinutes: 160
  cancelTimeoutInMinutes: 10
  condition: succeededOrFailed()
  pool: ees-ubuntu2204-large
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    fetchDepth: 5
    fetchTags: false

  - task: UsePythonVersion@0
    displayName: Use Python 3.10
    timeoutInMinutes: 5
    inputs:
      versionSpec: 3.10

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: s101d01-kv-ees-01'
    inputs:
      azureSubscription: $(SPN_NAME)
      KeyVaultName: s101d01-kv-ees-01
      SecretsFilter: ees-test-ADMIN-PASSWORD,ees-test-ANALYST-PASSWORD,ees-test-expiredinvite-password,ees-test-NOINVITE-PASSWORD,ees-test-PENDINGINVITE-PASSWORD,ees-alerts-slackapptoken
      RunAsPreJob: true

  - task: PythonScript@0
    displayName: Admin public UI tests
    inputs:
      scriptPath: tests/robot-tests/scripts/run_tests_pipeline.py
      arguments: --admin-pass '"$(ees-test-ADMIN-PASSWORD)"' --analyst-pass '"$(ees-test-ANALYST-PASSWORD)"' --expiredinvite-pass '"$(ees-test-expiredinvite-password)"' --noinvite-pass '"$(ees-test-NOINVITE-PASSWORD)"' --pendinginvite-pass '"$(ees-test-PENDINGINVITE-PASSWORD)"' --env "dev" --file "tests/admin_and_public" --processes 4 --rerun-attempts 3
      workingDirectory: tests/robot-tests
    env:
      SLACK_APP_TOKEN: $(ees-alerts-slackapptoken)

  - task: PublishTestResults@2
    displayName: Publish Test Results
    inputs:
      testResultsFiles: tests/robot-tests/test-results/xunit.xml
      failTaskOnFailedTests: true

  - task: PublishPipelineArtifact@1
    displayName: Publish Test Pipeline Artifact
    condition: succeededOrFailed()
    inputs:
      path: tests/robot-tests/test-results/
      artifactName: test-results-admin-public


- job: 'PublicPlaywrightUItest'
  displayName: Public suite - Playwright UI tests
  timeoutInMinutes: 160
  cancelTimeoutInMinutes: 10
  condition: succeededOrFailed()
  pool: ees-ubuntu2204-large
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    fetchDepth: 5
    fetchTags: false

  - task: NodeTool@0
    displayName: 'Use Node version 18 or above'
    timeoutInMinutes: 5
    inputs:
      versionSpec: "18.18.2"

  - script: |
      node -v
    displayName: 'Display node version'

  - script: |
      npm ci
    displayName: 'Clean and install NPM dependencies'
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/

  - script: |
      npx playwright install --with-deps
    displayName: 'Install Playwright browsers'
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/

  - script: |
      npx playwright test --project "public"
    displayName: "Run Playwright tests"
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/
    env:
      CI: 'true'
      PUBLIC_URL: $(PUBLIC_URL)
      PROD_PUBLIC_URL: $(PROD_PUBLIC_URL)
      PUBLIC_USERNAME: $(PUBLIC_AUTH_USER)
      PUBLIC_PASSWORD: $(PUBLIC_AUTH_PASSWORD)
      ADMIN_URL: $(ADMIN_URL)
      ADMIN_EMAIL: $(ADMIN_EMAIL)

    # this publishes the html report as an artifact that can then be downloaded
  - task: PublishTestResults@2
    displayName: Public Suite - Publish Playwright Test Results
    inputs:
      testResultsFiles: tests/playwright-tests/test-results/playwright-results.xml
      failTaskOnFailedTests: true

  - task: PublishPipelineArtifact@1
    displayName: Public Suite - Publish Playwright Test Artifacts
    condition: succeededOrFailed()
    inputs:
      path: tests/playwright-tests/test-results/
      artifactName: test-results-playwright-public


- job: 'AdminPlaywrightUItest'
  displayName: Admin suite - Playwright UI tests
  timeoutInMinutes: 160
  cancelTimeoutInMinutes: 10
  condition: succeededOrFailed()
  pool: ees-ubuntu2204-large
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    fetchDepth: 5
    fetchTags: false

  - task: NodeTool@0
    displayName: 'Use Node version 18 or above'
    timeoutInMinutes: 5
    inputs:
      versionSpec: "18.18.2"

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: s101d01-kv-ees-01'
    inputs:
      azureSubscription: $(SPN_NAME)
      KeyVaultName: s101d01-kv-ees-01
      SecretsFilter: ees-test-ADMIN-PASSWORD
      RunAsPreJob: true

  - script: |
      node -v
    displayName: 'Display node version'

  - script: |
      npm ci
    displayName: 'Clean and install npm dependencies'
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/

  - script: |
      npx playwright install --with-deps
    displayName: 'Install Playwright browsers'
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/

  - script: |
      npx playwright test --project "admin"
    displayName: "Run Playwright tests"
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/
    env:
      CI: 'true'
      ADMIN_URL: $(ADMIN_URL)
      ADMIN_EMAIL: $(ADMIN_EMAIL)
      ADMIN_PASSWORD: $(ees-test-ADMIN-PASSWORD)

    # this publishes the html report as an artifact that can then be downloaded
  - task: PublishTestResults@2
    displayName: Admin Suite - Publish Playwright Test Results
    inputs:
      testResultsFiles: tests/playwright-tests/test-results/playwright-results.xml
      failTaskOnFailedTests: true

  - task: PublishPipelineArtifact@1
    displayName: Admin Suite - Publish Pipeline Artifact
    condition: succeededOrFailed()
    inputs:
      path: tests/playwright-tests/test-results/
      artifactName: test-results-playwright-admin

- job: 'AdminAndPublicPlaywrightUItest'
  displayName: Admin and public suite - Playwright UI tests
  timeoutInMinutes: 160
  cancelTimeoutInMinutes: 10
  condition: succeededOrFailed()
  pool: ees-ubuntu2204-large
  workspace:
    clean: all
  steps:
  - checkout: self
    clean: true
    fetchDepth: 5
    fetchTags: false

  - task: NodeTool@0
    displayName: 'Use Node version 18 or above'
    timeoutInMinutes: 5
    inputs:
      versionSpec: "18.18.2"

  - task: AzureKeyVault@2
    displayName: 'Azure Key Vault: s101d01-kv-ees-01'
    inputs:
      azureSubscription: $(SPN_NAME)
      KeyVaultName: s101d01-kv-ees-01
      SecretsFilter: ees-test-ADMIN-PASSWORD
      RunAsPreJob: true

  - script: |
      node -v
    displayName: 'Display node version'

  - script: |
      npm ci
    displayName: 'Clean and install npm dependencies'
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/

  - script: |
      npx playwright install --with-deps
    displayName: 'Install Playwright browsers'
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/

  - script: |
      npx playwright test --project "adminandpublic"  

    displayName: "Run Playwright tests"
    workingDirectory: $(System.DefaultWorkingDirectory)/tests/playwright-tests/
    env:
      CI: 'true'
      PUBLIC_URL: $(PUBLIC_URL)
      PUBLIC_USERNAME: $(PUBLIC_AUTH_USER)
      PUBLIC_PASSWORD: $(PUBLIC_AUTH_PASSWORD)
      ADMIN_URL: $(ADMIN_URL)
      ADMIN_EMAIL: $(ADMIN_EMAIL)
      ADMIN_PASSWORD: $(ees-test-ADMIN-PASSWORD)

    # this publishes the html report as an artifact that can then be downloaded
  - task: PublishTestResults@2
    displayName: Admin And Public Suite - Publish Playwright Test Results
    inputs:
      testResultsFiles: tests/playwright-tests/test-results/playwright-results.xml
      failTaskOnFailedTests: true

  - task: PublishPipelineArtifact@1
    displayName: Admin And Public Suite - Publish Playwright Test Artifacts
    condition: succeededOrFailed()
    inputs:
      path: tests/playwright-tests/test-results/
      artifactName: test-results-playwright-tests-admin-and-public
